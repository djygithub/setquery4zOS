  PROC 0  +                                                             00010000
     ACQUIRE(USE) +                                                     00020000
     ACTION(REPLACE) +                                                  00030000
     ASMHLIB('''SYS1.MACLIB''') +                                       00040000
     ASMHLOAD('''SYS1.LINKLIB(IEV90)''') +                              00050000
     ASMLIB('''SYS1.MACLIB''') +                                        00060000
     ASMLOAD('''SYS1.LINKLIB(IEUASM)''') +                              00070000
     BIND(YES) +                                                        00080000
     BLIB(NONE) +                                                       00090000
     BMEM(NONE) +                                                       00100000
     B2LIB(NONE) +                                                      00110000
     B3LIB(NONE) +                                                      00120000
     B4LIB(NONE) +                                                      00130000
     B5LIB(NONE) +                                                      00140000
     B6LIB(NONE) +                                                      00150000
     B7LIB(NONE) +                                                      00160000
     B8LIB(NONE) +                                                      00170000
     CICSOPT(COBOL2) +                                                  00180004
     CICSPRE(CICS321) +                                                 00190002
     CICSXLAT(YES) +                                                    00200000
     CLIB(NONE) +                                                       00210000
     CCOLIB(NONE) +                                                     00220000
     CCLLIB('''EDC.V1R1M0.SEDCBASE''') +                                00230000
     CCPLIB('''PLI.V2R2M0.SIBMBASE''') +                                00240000
     CCLINK('''EDC.V1R1M0.SEDCCOMP(EDCPRLK)''') +                       00250000
     CCLOAD('''EDC.V1R1M0.SEDCCOMP(EDCCOMP)''') +                       00260000
     CCMSGS('''EDC.V1R1M0.SEDCMSGS(EDCMSGE)''') +                       00270000
     CCSLIB('''EDC.V1R1M0.SEDCHDRS''') +                                00280000
     COBLIB('''SYS1.COBLIB''') +                                        00290000
     COBLOAD('''SYS1.LINKLIB(IKFCBL00)''') +                            00300000
     COB2CICS('''SYS1.COB2CICS''') +                                    00310000
     COB2LIB('''SYS1.COB2LIB''') +                                      00320000
     COB2LOAD('''SYS1.COB2COMP(IGYCRCTL)''') +                          00330000
     COMPILE(YES) +                                                     00340000
     CONTROL(NONE) +                                                    00350000
     COPTION(NONE) +                                                    00360000
     C2LIB(NONE) +                                                      00370000
     C3LIB(NONE) +                                                      00380000
     C4LIB(NONE) +                                                      00390000
     DATE(NONE) +                                                       00400000
     DBRMLIB(DEFAULT) +                                                 00410000
     DECIMAL(PERIOD) +                                                  00420000
     DEFER(NONE) +                                                      00430000
     NODEFER(NONE) +                                                    00440000
     DELIMIT(DEFAULT) +                                                 00450000
     ENTRY(DEFAULT) +                                                   00460000
     EXPLAIN(NO) +                                                      00470000
     FLAG(I) +                                                          00480000
     FORTLIB('''SYS1.VFORTLIB''') +                                     00490000
     FORTLOAD('''SYS1.LINKLIB(FORTVS)''') +                             00500000
     GRAPHIC(NONE) +                                                    00510000
     HOST(COBOL) +                                                      00520000
     INPUT(NONE) +                                                      00530000
     IMSPRE(IMSVS) +                                                    00540000
     ISOLATION(RR) +                                                    00550000
     LINECOUNT(60) +                                                    00560000
     LINK(YES) +                                                        00570000
     LLIB(NONE) +                                                       00580000
     LOAD(RUNLIB.LOAD) +                                                00590000
     LOPTION(NONE) +                                                    00600000
     L2LIB(NONE) +                                                      00610000
     L3LIB(NONE) +                                                      00620000
     L4LIB(NONE) +                                                      00630000
     MACRO(YES) +                                                       00640000
     NOFOR(NO) +                                                        00650000
     OPTIONS(NO) +                                                      00660000
     OUTNAME(TEMP) +                                                    00670000
     OWNER(NONE) +                                                      00680000
     PARMS(NONE) +                                                      00690000
     PASS(DEFAULT) +                                                    00700000
     PCLOAD('''SYS1.DSN230.DSNLOAD(DSNHPC)''') +                        00710005
     PLAN(DEFAULT) +                                                    00720000
     PLIB(NONE) +                                                       00730000
     PLILIB('''SYS1.PLIBASE''') +                                       00740000
     PLILOAD('''SYS1.LINKLIB(IEL0AA)''') +                              00750000
     POPTION(NONE) +                                                    00760000
     PRECOMP(YES) +                                                     00770000
     PRELINK(NO) +                                                      00780000
     PRINT(NONE) +                                                      00790000
     PSECSPAC(20) +                                                     00800000
     PSPACE(20) +                                                       00810000
     P2LIB(NONE) +                                                      00820000
     P3LIB(NONE) +                                                      00830000
     P4LIB(NONE) +                                                      00840000
     RCTERM(8) +                                                        00850000
     RELEASE(COMMIT) +                                                  00860000
     RETAIN(NO) +                                                       00870000
     RUN(YES) +                                                         00880000
     RUNIN(TERM) +                                                      00890000
     RUNOUT(TERM) +                                                     00900000
     SOURCE(NO) +                                                       00910000
     SPACEUN(TRACK) +                                                   00920000
     SQLDELIM(DEFAULT) +                                                00930000
     STDSQL(NO) +                                                       00940000
     SUFFIX(YES) +                                                      00950000
     SYSTEM(DSN) +                                                      00960000
     TERM(TERM) +                                                       00970000
     TIME(NONE) +                                                       00980000
     VALIDATE(RUN) +                                                    00990000
     WORKUNIT(DEFAULT) +                                                01000000
     WSECSPAC(20) +                                                     01010000
     WSPACE(20) +                                                       01020000
     XREF(NO) +                                                         01030000
     XLIB('''SYS1.DSN230.DSNLOAD''')                                    01040005
  /*******************************************************************/ 01050000
  /* MODULE NAME = DSNH                                              */ 01060000
  /* DESCRIPTIVE NAME = PRECOMPILER INVOCATION                       */ 01070000
  /*   COPYRIGHT = 5665-DB2 (C) COPYRIGHT IBM CORP 1982, 1989         */01080000
  /*   REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083          */01090000
  /*                                                                  */01100000
  /*   STATUS = VERSION 2 RELEASE 2, LEVEL 0                          */01110000
  /* FUNCTION     = THE DSNH CLIST PERFORMS                          */ 01120000
  /*                A PRECOMPILE, COMPILE, LINKEDIT, BIND,           */ 01130000
  /*                AND RUN WITH A SINGLE LINE OF INPUT.             */ 01140000
  /* NOTES =                                                         */ 01150000
  /* DEPENDENCIES = DSNHC CLIST FOR COMPILATION                      */ 01160000
  /* RESTRICTIONS = 1) THE OUTNAME PARAMETER IS USED TO              */ 01170000
  /*                   GENERATE SEVERAL DATA SET NAMES,              */ 01180000
  /*                   SO IT MUST NOT CONTAIN SPECIAL                */ 01190000
  /*                   CHARACTERS.                                   */ 01200000
  /*                2) THE OUTNAME PARAMETER CANNOT BE               */ 01210000
  /*                   THE SAME AS THE INPUT NAME, SINCE             */ 01220000
  /*                   THE PRECOMPILER OUTPUT HAS THE                */ 01230000
  /*                   SAME SUFFIX AS ITS INPUT.                     */ 01240000
  /*                   THE OUTNAME IS NOT ALLOWED TO                 */ 01250000
  /*                   MATCH THE INPUT PARAMETER.                    */ 01260000
  /*                3) NONE IS A RESERVED NAME FOR INPUT,            */ 01270000
  /*                   CLIB, LLIB, AND PLIB PARAMETERS,              */ 01280000
  /*                   INCLUDING C2LIB, C3LIB, C4LIB,                */ 01290000
  /*                   L2LIB, L3LIB, L4LIB, P2LIB, P3LIB,            */ 01300000
  /*                   AND P4LIB EXTENSIONS.                         */ 01310000
  /*                   NONE IS A RESERVED NAME FOR PARMS.            */ 01320000
  /*                   DEFAULT IS RESERVED FOR PLAN AND              */ 01330000
  /*                   DBRMLIB.                                      */ 01340000
  /*                4) THE BUF AND SIZE PARAMETERS                   */ 01350000
  /*                   PASSED TO THE COBOL COMPILER,                 */ 01360000
  /*                   MAY NEED TO BE CHANGED.                       */ 01370000
  /*                5) THE PRINT PARAMETER IS USED TO                */ 01380000
  /*                   GENERATE SEVERAL DATA SET NAMES,              */ 01390000
  /*                   SO IT MUST NOT CONTAIN SPECIAL                */ 01400000
  /*                   CHARACTERS.                                   */ 01410000
  /*                                                                 */ 01420000
  /* MODULE TYPE = CLIST OR TSO COMMAND PROCEDURE                    */ 01430000
  /*                                                                 */ 01440000
  /* ENTRY POINT = DSNH                                              */ 01450000
  /*    PURPOSE      = THE DSNH CLIST ALLOWS ONE TO REQUEST          */ 01460000
  /*                   A PRECOMPILE, COMPILE, PRE-LINKEDIT,          */ 01470000
  /*                   LINKEDIT, BIND, AND RUN.                      */ 01480000
  /*    LINKAGE      = INVOCATION FROM TSO OR BATCH TMP              */ 01490000
  /*    INPUT        = PARAMETERS PASSED ON STATEMENT                */ 01500000
  /*                      DEFINED IN PROC STATEMENT                  */ 01510000
  /*                   INPUT SOURCE DATA SET                         */ 01520000
  /*                   OPTIONAL INPUT LIBRARIES                      */ 01530000
  /*    OUTPUT       = HOST LANGUAGE WITH GENERATED STMTS            */ 01540000
  /*                   DBRM DATA SET                                 */ 01550000
  /*                   PRINT ON TERMINAL/DATA SET                    */ 01560000
  /*                   OBJECT, LOAD MODULES                          */ 01570000
  /*                   PLAN SET BY BIND                              */ 01580000
  /*                                                                 */ 01590000
  /*-----------------------------------------------------------------*/ 01600000
  /*                                                                 */ 01610000
  /*   EXIT                                                          */ 01620000
  /* EXIT-NORMAL = REQUESTED FUNCTIONS PERFORMED                     */ 01630000
  /* EXIT-ERROR  = RETURN CODES PASSED FROM PROCESSORS               */ 01640000
  /*                                                                 */ 01650000
  /*    RETURN CODE  = SEE PRECOMPILER, COMPILER, LINKEDIT,          */ 01660000
  /*                   DSN, BIND, AND RUN RETURN CODES.              */ 01670000
  /*    ABEND CODES  = THIS CLIST ISSUES NO ABENDS, BUT              */ 01680000
  /*                   INVOKED FUNCTIONS MAY ABEND, CAUSING          */ 01690000
  /*                   ABEND MESSAGES.                               */ 01700000
  /*                                                                 */ 01710000
  /*-----------------------------------------------------------------*/ 01720000
  /*                                                                 */ 01730000
  /*    MESSAGES                                                     */ 01740000
  /*    ERROR MESSAGES =                                             */ 01750000
  /*                 = DSNH740I ==== PHASE FINISHED, RC =            */ 01760000
  /*                            RETCODE ==== LISTING IN DSN          */ 01770000
  /*                 = DSNH741I &PROCESS1(NO) IMPLIES THAT           */ 01780000
  /*                            &PROCESS2 CANNOT BE RUN              */ 01790000
  /*                 = DSNH751I DSNH ERROR IN &KEYWORD               */ 01800000
  /*                            VALUE &VAL                           */ 01810000
  /*                 = DSNH752I INPUT DATA SET NAME IS               */ 01820000
  /*                            MISSING OR NONE                      */ 01830000
  /*                 = DSNH753I ENTER INPUT DATA SET NAME            */ 01840000
  /*                 = DSNH754I DSNH OUTNAME PARAMETER               */ 01850000
  /*                            &OUTNAME MUST NOT                    */ 01860000
  /*                            CONTAIN SPECIAL CHARACTERS           */ 01870000
  /*                 = DSNH755I OUTNAME PARAMETER                    */ 01880000
  /*                            &OUTNAME MUST NOT                    */ 01890000
  /*                            = INPUT &INPUT                       */ 01900000
  /*                 = DSNH756I DSNH PRINT PARAMETER                 */ 01910000
  /*                            &PRINT MUST NOT CONTAIN              */ 01920000
  /*                            SPECIAL CHARACTERS                   */ 01930000
  /*                 = DSNH757I ERROR IN PLAN NAME LENGTH            */ 01940000
  /*                            &PLAN                                */ 01950000
  /*                 = DSNH758I HOST(&HOST) IS NOT                   */ 01960000
  /*                            PERMITTED WITH RUN(IMS)              */ 01970000
  /*                            OR RUN(CICS)                         */ 01980000
  /*                 = DSNH759I DSNH TERMINATING, &PROCESS           */ 01990000
  /*                            RC = &ERROR                          */ 02000000
  /*                 = DSNH760I PRELINK OPTION INVALID WITH          */ 02010000
  /*                            HOST(&HOST)                          */ 02020000
  /*    ATTENTION HANDLING = NONE, TO ALLOW INVOKED FUNC-            */ 02030000
  /*                         TIONS TO HANDLE ATTENTIONS.             */ 02040000
  /*                                                                 */ 02050000
  /*-----------------------------------------------------------------*/ 02060000
  /*                                                                 */ 02070000
  /* EXTERNAL REFERENCES =                                           */ 02080000
  /*    ROUTINES/SERVICES =                                          */ 02090000
  /*       ALLOCATE  = TSO ALLOCATION COMMAND                        */ 02100000
  /*       ATTRIB    = TSO ALLOCATION COMMAND                        */ 02110000
  /*       BIND      = DB2 BIND COMMAND                              */ 02120000
  /*       CALL      = TSO PROGRAM INVOCATION                        */ 02130000
  /*       DELETE    = TSO DATA SET DELETION                         */ 02140000
  /*       DSN       = DB2 TSO/BATCH SERVICES                        */ 02150000
  /*       DSNHC     = DB2 COMPILE CLIST                             */ 02160000
  /*       DSNHPC    = DB2 PRECOMPILER                               */ 02170000
  /*       FREE      = TSO UNALLOCATION COMMAND                      */ 02180000
  /*       PRELINK   = PRE-LINKEDIT PROMPTER  (C COMPILER)           */ 02190000
  /*       LINK      = LINKEDIT PROMPTER                             */ 02200000
  /*       RUN       = DB2 PROGRAM INVOCATION                        */ 02210000
  /*                                                                 */ 02220000
  /*-----------------------------------------------------------------*/ 02230000
  /*                                                                 */ 02240000
  /*    DDNAMES AND ATTRIBUTES                                       */ 02250000
  /*                                                                 */ 02260000
  /*       OPTIONAL  = DBRMLIB  FOR PRECOMPILER OUTPUT               */ 02270000
  /*                 = DSNHFBA  ATTRIBUTE FOR OUTPUT PRINT           */ 02280000
  /*                 = DSNHFB   ATTRIBUTE FOR OUTPUT PRINT           */ 02290000
  /*                 = DSNHVBA  ATTRIBUTE FOR OUTPUT PRINT           */ 02300000
  /*                 = DSNHF133 ATTRIBUTE FOR OUTPUT PRINT           */ 02310000
  /*                 = DSNHF80  ATTRIBUTE FOR OUTPUT                 */ 02320000
  /*                 = DSNHOBJ  FOR LKED INPUT, INCLUDED             */ 02330000
  /*                 = DSNHINCL FOR LKED INCLUDE FILE                */ 02340000
  /*                 = INCLIB   FOR LKED INCLUDES                    */ 02350000
  /*                 = SYSCIN   FOR PRECOMPILER OUTPUT               */ 02360000
  /*                 = SYSIN    FOR PRECOMPILER INPUT                */ 02370000
  /*                 =          FOR RUN TIME INPUT                   */ 02380000
  /*                 =          FOR PRE-LINKEDIT INPUT               */ 02390000
  /*                 = SYSMOD   FOR PRE-LINKEDIT OUTPUT              */ 02400000
  /*                 = SYSLIB   FOR PRECOMPILER INCLUDES             */ 02410000
  /*                 =          C COMPILER HEADERS                   */ 02420000
  /*                 =          C PRE-LINKEDIT INCLUDES              */ 02430000
  /*                 = SYSLIN   FOR COMPILER OUTPUT                  */ 02440000
  /*                 = SYSOUT   C PRE-LINKEDIT WORK FILE             */ 02450000
  /*                 = SYSPRINT FOR PRECOMPILER LISTINGS             */ 02460000
  /*                 = SYSPRINT FOR RUN TIME PRINT OUTPUT            */ 02470000
  /*                 = SYSTERM  FOR PRECOMPILER ERROR MSGS           */ 02480000
  /*                 = SYSUT1   FOR PRECOMPILER WORK FILE            */ 02490000
  /*                 = SYSUT2   FOR PRECOMPILER WORK FILE            */ 02500000
  /*                 = ALLOCATED BY INVOKED PROCESSES                */ 02510000
  /*                                                                 */ 02520000
  /*-----------------------------------------------------------------*/ 02530000
  /*                                                                 */ 02540000
  /*    DATA SETS                                                    */ 02550000
  /*                                                                 */ 02560000
  /*       REQUIRED  = INPUT, USER SPECIFIED NAME, SOURCE            */ 02570000
  /*                       HOST AND SQL LANGUAGE INPUT TO            */ 02580000
  /*                       PRECOMPILER/COMPILER, SHR.                */ 02590000
  /*       OPTIONAL  = ASMHLIB, ASSEMBLY LIBRARY FOR ASMH            */ 02600000
  /*                 = ASMHLOAD, ASSEMBLER H PROGRAM LOAD            */ 02610000
  /*                       MODULE.                                   */ 02620000
  /*                 = ASMLIB, ASSEMBLY LIBRARY FOR ASM              */ 02630000
  /*                 = ASMLOAD, ASSEMBLER PROGRAM LOAD               */ 02640000
  /*                       MODULE.                                   */ 02650000
  /*                 = BLIB, USER SPECIFIED NAME, BIND               */ 02660000
  /*                       LIBRARY FOR DBRMS, SHR.                   */ 02670000
  /*                       ALSO B2LIB, B3LIB, B4LIB, B5LIB           */ 02680000
  /*                       B6LIB, B7LIB, B8LIB.                      */ 02690000
  /*                 = CLIB, USER SPECIFIED NAME, COMPILER           */ 02700000
  /*                       SOURCE LIBRARY FOR INCLUDES, SHR.         */ 02710000
  /*                       ALSO C2LIB, C3LIB, C4LIB.                 */ 02720000
  /*                 = CICSPRE.SDFHLOAD CICS/OS/VS COMMAND           */ 02730002
  /*                       TRANSLATOR PROGRAM LOAD MODULE            */ 02740000
  /*                       AND LINK EDIT INCLUDE LIBRARY.            */ 02750000
  /*                 = CICSPRE.PL1LIB, CICS/OS/VS LINK EDIT          */ 02760000
  /*                       INCLUDE LIBRARY FOR PL/I PROGS.           */ 02770000
  /*                 = CICSPRE.COBLIB, CICS/OS/VS LINK EDIT          */ 02780000
  /*                       INCLUDE LIBRARY FOR COBOL PROGS.          */ 02790000
  /*                 = CCOLIB, C PRE-LINKEDIT INCLUDE LIB  (SYSLIB)  */ 02800000
  /*                 = CCLLIB, C PROGRAM LINKAGE EDITOR    (SYSLIB)  */ 02810000
  /*                       LIBRARY FOR INCLUDES    SHR               */ 02820000
  /*                 = CCPLIB, C PROGRAM LINKAGE EDITOR    (SYSLIB)  */ 02830000
  /*                       LIBRARY FOR INCLUDES    SHR               */ 02840000
  /*                 = CCLINK, C COMPILER PROGRAM          (EXECUTE) */ 02850000
  /*                       PRE-LINKEDIT LOAD MODULE NAME             */ 02860000
  /*                 = CCLOAD, C COMPILER PROGRAM          (EXECUTE) */ 02870000
  /*                       LOAD MODULE NAME.    SHR.                 */ 02880000
  /*                 = CCMSGS, C COMPILER MESSAGES   SHR.  (SYSMSGS) */ 02890000
  /*                           C PRE-LINKEDIT                        */ 02900000
  /*                 = CCSLIB, C COMPILER HEADERS   SHR.   (SYSLIB)  */ 02910000
  /*                 = COBLIB, LINK EDIT INCLUDE LIBRARY             */ 02920000
  /*                       FOR VS COBOL PROGRAMS.                    */ 02930000
  /*                 = COBLOAD, VS COBOL COMPILER PROGRAM            */ 02940000
  /*                       LOAD MODULE.                              */ 02950000
  /*                 = COB2LIB, LINK EDIT INCLUDE LIBRARY            */ 02960000
  /*                       FOR VS COBOL II PROGRAMS.                 */ 02970000
  /*                 = COB2LOAD, VS COBOL II COMPILER                */ 02980000
  /*                       PROGRAM LOAD MODULE.                      */ 02990000
  /*                 = DBRMLIB, DEFAULT IS OUTNAME.DBRM,             */ 03000000
  /*                       OUTPUT FROM PRECOMPILER CONTAINS          */ 03010000
  /*                       SQL STATEMENTS, INPUT TO BIND,            */ 03020000
  /*                       OLD IF SUPPLIED, NEW IF DEFAULT.          */ 03030000
  /*                 = FORTLIB, LINK EDIT INCLUDE LIBRARY            */ 03040000
  /*                       FOR VS FORTRAN PROGRAMS.                  */ 03050000
  /*                 = FORTLOAD, VS FORTRAN COMPILER                 */ 03060000
  /*                       PROGRAM LOAD MODULE.                      */ 03070000
  /*                 = IMSPRE.RESLIB, IMS/VS LINK EDIT               */ 03080000
  /*                       INCLUDE LIBRARY.                          */ 03090000
  /*                 = LLIB, USER SPECIFIED NAME, LINKEDIT           */ 03100000
  /*                       LIBRARY INPUT, SHR.                       */ 03110000
  /*                       ALSO L2LIB, L3LIB, L4LIB.                 */ 03120000
  /*                 = LOAD, DEFAULT IS RUNLIB.LOAD, MODULE          */ 03130000
  /*                       OUTPUT FROM LINKAGE EDITOR,               */ 03140000
  /*                       PROGRAM LIBRARY FOR RUN, OLD/NEW.         */ 03150000
  /*                       DATA SET IS REQUIRED IF LINKEDIT          */ 03160000
  /*                       IS EXECUTED.                              */ 03170000
  /*                 = OUTNAME.CICSIN, OUTPUT FROM PRECOMP-          */ 03180000
  /*                       ILER AND INPUT TO CICS TRANSLATOR         */ 03190000
  /*                 = OUTNAME.DATA, INPUT TO LINKEDIT,              */ 03200000
  /*                       GENERATED IN THIS CLIST. NEW.             */ 03210000
  /*                       INCLUDE STATEMENT.                        */ 03220000
  /*                 = OUTNAME.DECK, OUTPUT FROM COMPILER            */ 03230000
  /*                       MACRO PASS AND INPUT TO                   */ 03240000
  /*                       PRECOMPILER (PLI ONLY).                   */ 03250000
  /*                 = OUTNAME.SUFFIX, DEFAULT IS TEMP.COBOL         */ 03260000
  /*                       HOST LANGUAGE OUTPUT FROM PRECOMPILER     */ 03270000
  /*                       OR CICS COMMAND TRANSLATOR.               */ 03280000
  /*                       INPUT TO COMPILER. NEW                    */ 03290000
  /*                       SUFFIX IS ASM FOR ASM AND ASMH.           */ 03300000
  /*                       SUFFIX IS PLI FOR PLI.                    */ 03310000
  /*                       SUFFIX IS COBOL FOR COB2, COBOL.          */ 03320000
  /*                       SUFFIX IS FORTRAN FOR FORTRAN.            */ 03330000
  /*                 = OUTNAME.OBJ, OUTPUT FROM COMPILER,            */ 03340000
  /*                       INPUT TO LINKAGE EDITOR.   OLD/NEW        */ 03350000
  /*                       INPUT TO 'C' PRE-LINKEDIT. OLD/NEW        */ 03360000
  /*                 = OUTNAME.PLK, OUTPUT FROM 'C' PRE-LINKEDIT     */ 03370000
  /*                       INPUT TO LINKAGE EDITOR. OLD/NEW          */ 03380000
  /*                 = PCLOAD, DEFAULT  DSNLOAD(DSNHPC),             */ 03390000
  /*                       LOAD MODULE FOR PRECOMPILER, SHR.         */ 03400000
  /*                 = PLIB, USER SPECIFIED NAME, PRECOMPILE         */ 03410000
  /*                       LIBRARY INPUT, SHR.                       */ 03420000
  /*                       ALSO P2LIB, P3LIB, P4LIB.                 */ 03430000
  /*                 = PLILIB, LINK EDIT INCLUDE LIBRARY             */ 03440000
  /*                       FOR PL/I OPTIMIZER PROGRAMS.              */ 03450000
  /*                 = PLILOAD, PL/I OPTIMIZING COMPILER             */ 03460000
  /*                       PROGRAM LOAD MODULE.                      */ 03470000
  /*                 = PRINT.CXLIST, SYSPRINT OF CICS XLATE          */ 03480000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03490000
  /*                       BE TERM (TERMINAL) OR                     */ 03500000
  /*                       LEAVE (PREALLOCATED) OR                   */ 03510000
  /*                       DATA SET NAME ABOVE. NEW.                 */ 03520000
  /*                 = PRINT.PRELLIST, SYSPRINT OF PRE-LINKEDIT      */ 03530000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03540000
  /*                       BE TERM (TERMINAL) OR                     */ 03550000
  /*                       DATA SET NAME ABOVE. OLD/NEW              */ 03560000
  /*                 = PRINT.SYSOUT.PRELLIST, 'C' PRE-LINKEDIT       */ 03570000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03580000
  /*                       BE TERM (TERMINAL) OR                     */ 03590000
  /*                       DATA SET NAME ABOVE. OLD/NEW              */ 03600000
  /*                 = PRINT.LINKLIST, SYSPRINT OF LINKEDIT          */ 03610000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03620000
  /*                       BE TERM (TERMINAL) OR                     */ 03630000
  /*                       DATA SET NAME ABOVE. OLD/NEW              */ 03640000
  /*                 = PRINT.LIST, SYSPRINT OF COMPILERS.            */ 03650000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03660000
  /*                       BE TERM (TERMINAL) OR                     */ 03670000
  /*                       DATA SET NAME ABOVE, OLD/NEW              */ 03680000
  /*                 = PRINT.SYSCPRT.LIST, 'C' COMPLIER              */ 03690000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03700000
  /*                       BE TERM (TERMINAL) OR                     */ 03710000
  /*                       DATA SET NAME ABOVE. OLD/NEW              */ 03720000
  /*                 = PRINT.PCLIST, SYSPRINT OF PRECOMPILE          */ 03730000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03740000
  /*                       BE TERM (TERMINAL) OR                     */ 03750000
  /*                       LEAVE (PREALLOCATED) OR                   */ 03760000
  /*                       DATA SET NAME ABOVE, OLD/NEW              */ 03770000
  /*                 = PRINT.CEEDUMP.RUN, 'C' RUN OUTPUT             */ 03780000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03790000
  /*                       BE TERM (TERMINAL) OR                     */ 03800000
  /*                       DATA SET NAME ABOVE. OLD/NEW              */ 03810000
  /*                 = RUNIN, FT05F001 OR SYSIN OF RUN PHASE         */ 03820000
  /*                       DEFAULT IS NONE (NO PRINT), MAY           */ 03830000
  /*                       BE TERM (TERMINAL) OR                     */ 03840000
  /*                       DATA SET NAME ABOVE, SHR                  */ 03850000
  /*                 = RUNOUT, FT06F001 OR SYSPRINT OF RUN           */ 03860000
  /*                       PHASE. DEFAULT IS NONE (NO PRINT)         */ 03870000
  /*                       MAY BE TERM (TERMINAL) OR                 */ 03880000
  /*                       LEAVE (PREALLOCATED) OR                   */ 03890000
  /*                       DATA SET NAME ABOVE, OLD/NEW              */ 03900000
  /*                 = TERM.PCTERM, SYSTERM, ERROR, SUMMARY          */ 03910000
  /*                       OF PRECOMPILE.  DEFAULT IS TERM           */ 03920000
  /*                       (TERMINAL OUTPUT), MAY ALSO BE            */ 03930000
  /*                        LEAVE OR NONE.    OLD/NEW                */ 03940000
  /*                 = TERM.LIST,   SYSTERM, ERROR, SUMMARY          */ 03950000
  /*                       OF COMPILE.  DEFAULT IS TERM              */ 03960000
  /*                       (TERMINAL OUTPUT), MAY ALSO BE            */ 03970000
  /*                        LEAVE OR NONE.    OLD/NEW                */ 03980000
  /*                 = XLIB, LINK EDIT INCLUDE LIBRARY               */ 03990000
  /*                       FOR DB2 MODULES.                          */ 04000000
  /*                                                                 */ 04010000
  /*-----------------------------------------------------------------*/ 04020000
  /*                                                                 */ 04030000
  /* CHANGE ACTIVITY                                                 */ 04040000
  /*                                                                 */ 04050000
  /* - PERMIT AMODE=31 IN LOPTION                             KEZ0192*/ 04060000
  /* - PLICALLA->PLISTART, PARM PASSING                       KCF0087*/ 04070000
  /* - PLICALLA FOR IMS-PLI APPLICATIONS                     @BA00008*/ 04080000
  /* - NEW RELEASE LEVELS                                     R3TU113*/ 04090000
  /* - COB2 OPTION TO PRECOMPILER                             R3LI107*/ 04100000
  /* - ADD ELSE FOR CONTROL INIT                     KCF0283/@BA02917*/ 04110000
  /* - ADD DATE AND TIME PARMS                       KCF1044/KBW0045 */ 04120000
  /* - ADD CICSOPT PRIMING FOR COB2                  KBF0026/KBF1091 */ 04130000
  /* - ADD &WORKU FOR ALL TEMP DS           @BA04731/KBF0038/KCF1141 */ 04140000
  /* - DROP ENTRY PLISTART FOR CICS/PLI.  FIX &DBRMLIB               */ 04150000
  /*   TRUNCATION                           @BA04716/KBW0119/KCF1178 */ 04160000
  /* - &DBRMLIB, &LOADIT REPAIR                      KBT0008/KCF1209 */ 04170000
  /* - DB2 V2R1, APAR @BA08652                               R3TU103 */ 04180000
  /* - FIX RETCODE LOGIC ON BIND AND RUN             PL11443/KCF1702 */ 04190000
  /* - ADD OWNER PARAMETER FOR BIND SUPPORT OF LI117 PL11443/KCF1702 */ 04200000
  /* - C LANGUAGE SUPPORT - INVOKE C COMPILER, ADD 'GRAPHIC' PARM,   */ 04210000
  /*     ACCEPT HOST(C), ADD PARMS: CLOAD, CCLIB, CLLIB      R3TU157H*/ 04220000
  /* 10/19/87 - PRINT.LINKLIST NOT ALLOCATED        R3TU157H/@BA18169*/ 04230000
  /* 12/15/87 - ADD PARM CMSGS                               KCL2013 */ 04240000
  /* 12/28/87 - CHANGE RELEASE LEVEL TO DSN220                KZL0014*/ 04250000
  /* 05/14/88 - LINKEDIT LIBRARY NOT FREED AFTER USE KZF0840/@BA25449*/ 04260000
  /* 06/02/88 - ADD SUPPORT FOR COB2CICS             KZF0917/@BA26814*/ 04270000
  /* 08/11/88 - ERRORS WHEN INPUT IS SAME AS OUTPUT  KZF1023/@BA30168*/ 04280000
  /* 10/25/88 - CHANGES TO C LANGUAGE SUPPORT                 KZF0283*/ 04290000
  /*            ADD PRELINK KEYWORD                                  */ 04300000
  /*            ADD DSNH760I MESSAGE                                 */ 04310000
  /* 10/27/88 - SYSCPRT AND SYSOUT WALL MESSAGES AND DCBS     KZW0290*/ 04320000
  /* 11/01/88 - FREE DDNAMES FOR ALLOCATION                   KZW0295*/ 04330000
  /* 11/22/88 - REMOVE DUPLICATE DSNE758 MSGS                 KZW0324*/ 04340000
  /*            CHANGE PL1DUMP TO CEEDUMP DD STATEMENT               */ 04350000
  /* 01/11/89 - ADD DEFER/NODEFER PREPARE                   RZTU21207*/ 04360000
  /* 02/22/89 - ADD STDSQL OPTION (J. LAWRENCE)               KZW2082*/ 04370000
  /* 02/22/89 - ADD NOFOR OPTION (J. LAWRENCE)                KZW2082*/ 04380000
  /* 03/21/89 - REBIND CALLED AFTER DSNE940E ERROR            KZW2127*/ 04390000
  /* 04/12/89 - XOPTION NOT USED BY CLIST            KZF2255/@BA41758*/ 04400000
  /*            INCLUDES FIPS APAR: PL40711 (STDSQL)                 */ 04401000
  /* 08/24/89 - SAVE USERS SYSPRINT, SYSIN, AND SYSTERM      @BA48566*/ 04402000
  /* 10/01/89 - ADD CLOSE ) ON &INPUT WHEN NOT PRESENT       @BA49887*/ 04403000
  /* 10/10/89 - CLIST ERROR DURING DSNH755I TESTING          @BA49303*/ 04404000
  /* 10/10/89 - CHANGE IN APPROACH TAKEN BY APAR PL49887 -   @BA49303*/ 04405000
  /*            INSTEAD OF ADDING A CLOSE ), A MSG IS ISSUED @BA49303*/ 04406000
  /*            WHEN LEFT PAREN OR RIGHT PAREN IS MISSING.   @BA49303*/ 04407000
  /*                                                                 */ 04408000
  /*-----------------------------------------------------------------*/ 04409000
  /*                                                                 */ 04410000
  /* PSEUDOCODE                                                      */ 04420000
  /*                                                                 */ 04430000
  /*       INITIALIZATION, CHECK KEYWORDS                            */ 04440000
  /*       CHECK NAMES PASSED,                                       */ 04450000
  /*       SET NAMES FOR LATER                                       */ 04460000
  /*       IF HOST LANGUAGE IS PLI, MACRO PHASE REQUESTED            */ 04470000
  /*         DO                                                      */ 04480000
  /*           INVOKE DSNHC CLIST TO COMPILE                         */ 04490000
  /*           IF ERROR ENCOUNTERED THEN EXIT WITH MESSAGE           */ 04500000
  /*         END                                                     */ 04510000
  /*       IF PRECOMPILE WAS REQUESTED THEN                          */ 04520000
  /*         DO                                                      */ 04530000
  /*           SET UP PRECOMPILER OPTION STRING                      */ 04540000
  /*           ALLOCATE PRECOMPILER DATA SETS                        */ 04550000
  /*           INVOKE PRECOMPILER                                    */ 04560000
  /*           IF ERROR ENCOUNTERED THEN EXIT WITH MESSAGE           */ 04570000
  /*         END                                                     */ 04580000
  /*       IF CICS COMMAND TRANSLATOR WAS REQUESTED THEN             */ 04590000
  /*         DO                                                      */ 04600000
  /*           SET UP TRANSLATOR OPTION STRING                       */ 04610000
  /*           ALLOCATE TRANSLATOR DATA SETS                         */ 04620000
  /*           INVOKE TRANSLATOR                                     */ 04630000
  /*           IF ERROR ENCOUNTERED THEN EXIT WITH MESSAGE           */ 04640000
  /*         END                                                     */ 04650000
  /*       IF BIND IS REQUESTED THEN                                 */ 04660000
  /*         DO                                                      */ 04670000
  /*           INVOKE DSN                                            */ 04680000
  /*           INVOKE BIND                                           */ 04690000
  /*           CHECK FOR ERRORS IN BIND, ISSUE MSG, EXIT             */ 04700000
  /*         END                                                     */ 04710000
  /*       IF COMPILE IS REQUESTED THEN                              */ 04720000
  /*         DO                                                      */ 04730000
  /*           INVOKE DSNHC CLIST TO COMPILE                         */ 04740000
  /*           CHECK FOR ERRORS IN COMPILE, ISSUE MSG, EXIT          */ 04750000
  /*         END                                                     */ 04760000
  /*       IF HOST LANGUAGE IS 'C', PRE-LINKEDIT REQUESTED           */ 04770000
  /*         DO                                                      */ 04780000
  /*           INVOKE THE 'C' PRE-LINKEDIT ROUTINE                   */ 04790000
  /*           CHECK FOR ERRORS IN PRE-LINKEDIT, ISSUE MSG, EXIT     */ 04800000
  /*         END                                                     */ 04810000
  /*       ELSE                                                      */ 04820000
  /*         GENERATE ERROR MESSAGE AND EXIT                         */ 04830000
  /*       IF LINKEDIT IS REQUESTED THEN                             */ 04840000
  /*         DO                                                      */ 04850000
  /*           INVOKE THE LINKAGE EDITOR                             */ 04860000
  /*           CHECK FOR ERRORS IN LINKEDIT, ISSUE MSG, EXIT         */ 04870000
  /*         END                                                     */ 04880000
  /*       IF RUN  IS REQUESTED THEN                                 */ 04890000
  /*         DO                                                      */ 04900000
  /*           INVOKE DSN                                            */ 04910000
  /*           INVOKE RUN FOR THE PROGRAM                            */ 04920000
  /*           CHECK FOR ERRORS IN RUN, ISSUE MSG, EXIT              */ 04930000
  /*         END                                                     */ 04940000
  /*                                                                 */ 04950000
  /*******************************************************************/ 04960000
  /*                 INITIALIZATION                                  */ 04970000
  /*******************************************************************/ 04980000
  SET &ERROR = 0                                /* ASSUME NO ERRORS  */ 04990000
  SET &M751 = &STR(DSNH751I DSNH ERROR IN)      /* ERROR MSG TXT     */ 05000000
  SET &M759 = &STR(DSNH759I DSNH TERMINATING,)  /* ERRMSG TXT        */ 05010000
  /*******************************************************************/ 05020000
  /*                                                                 */ 05030000
  /*                 EXECUTION TRACE CONTROL                         */ 05040000
  /*                                                                 */ 05050000
  /*  SET CONTROL TRACE ATTRIBUTES FOR EXECUTION                     */ 05060000
  /*                                                                 */ 05070000
  /*  PARMS:   NONE, LIST, CONLIST, SYMLIST                          */ 05080000
  /*  DEFAULT: NONE=NOLIST NOCONLIST NOSYMLIST                       */ 05090000
  /*******************************************************************/ 05100000
  IF &SUBSTR(1,&CONTROL) ^= N THEN              /* IF NOT NONE THEN  */+05110000
    DO                                          /* SET UP TO TRACE   */ 05120000
      /*-------------------------------------------------------------*/ 05130000
      /* EXAMINE CONTROL VALUE SPECIFIED                             */ 05140000
      /*-------------------------------------------------------------*/ 05150000
      IF &SUBSTR(1,&CONTROL) = L THEN           /* IF 'LIST'         */+05160000
        CONTROL LIST                                                    05170000
      ELSE                                      /* NOT LIST,BUT WHAT?*/+05180000
        DO                                      /* SET TRACING PROPER*/ 05190000
         /*----------------------------------------------------------*/ 05200000
         /* CHECK FOR CONLIST OR SYMLIST                             */ 05210000
         /*----------------------------------------------------------*/ 05220000
          IF &SUBSTR(1,&CONTROL) = C THEN       /* CHAR IS C         */+05230000
            CONTROL LIST CONLIST                                        05240000
          ELSE                                  /* CHECK FOR SYMLIST */+05250000
            DO                                                          05260000
              /*-----------------------------------------------------*/ 05270000
              /* CHECK FOR SYMLIST                                   */ 05280000
              /*-----------------------------------------------------*/ 05290000
              IF &SUBSTR(1,&CONTROL) = S THEN   /* WAS IT SYMLIST?   */+05300000
                CONTROL LIST CONLIST SYMLIST    /* ISSUE CONTROL     */ 05310000
              ELSE                              /* NONE OF THE ABOVE */+05320000
                DO                                                      05330000
                  /*-------------------------------------------------*/ 05340000
                  /* DSNH751I: ERROR IN CONTROL VALUE SPECIFIED      */ 05350000
                  /*-------------------------------------------------*/ 05360000
                  SET &ERROR = 8                /* REMEMBER THE ERROR*/ 05370000
                  WRITE &M751 CONTROL VALUE &CONTROL                    05380000
                END                                                     05390000
            END                                 /* CHECK FOR SYMLIST */ 05400000
        END                                                             05410000
    END                                                                 05420000
  ELSE CONTROL NOLIST NOCONLIST NOSYMLIST       /* @BA02917          */ 05430000
  /*******************************************************************/ 05440000
  /*                                                                 */ 05450000
  /*                 DATE KEYWORD OPTION                             */ 05460000
  /*                                                                 */ 05470000
  /*  FORMAT OF DATE OUTPUT FOR PRECOMPILER                          */ 05480000
  /*                                                                 */ 05490000
  /*  PARMS:   DATE FORMAT                                           */ 05500000
  /*  DEFAULT: NONE                                                  */ 05510000
  /*******************************************************************/ 05520000
  IF &DATE = NONE                /* DATE SYNTAX CHECK                */+05530000
    THEN SET &DATE = &STR()      /* PASS NOTHING TO PRECOMPILER      */ 05540000
    ELSE                         /* PASS IT TO PRECOMPILER           */+05550000
      DO                                                                05560000
       /*------------------------------------------------------------*/ 05570000
       /* EXAMINE DATE VALUE SPECIFIED                               */ 05580000
       /*------------------------------------------------------------*/ 05590000
        SET &D = &SUBSTR(1,&DATE)   /* GET FIRST CHARACTER           */ 05600000
        IF (&D^=I) AND (&D^=J) AND (&D^=U) AND (&D^=E) AND (&D^=L)     +05610000
          THEN                   /* IF THE VALUE IS ILLEGAL, SAY IT  */+05620000
            DO                                                          05630000
              /*-----------------------------------------------------*/ 05640000
              /* DSNH751I: ERROR IN DATE VALUE SPECIFIED             */ 05650000
              /*-----------------------------------------------------*/ 05660000
              SET &ERROR = 8     /* REMEMBER THE ERROR               */ 05670000
              WRITE &M751 DATE VALUE &DATE                              05680000
            END                                                         05690000
        IF &D = I THEN SET &DATE = DATE(ISO) /* PREPARE TO PASS PARM */ 05700000
        IF &D = J THEN SET &DATE = DATE(JIS) /* TO PRECOMPILER       */ 05710000
        IF &D = U THEN SET &DATE = DATE(USA)                            05720000
        IF &D = E THEN SET &DATE = DATE(EUR)                            05730000
        IF &D = L THEN SET &DATE = DATE(LOCAL)                          05740000
      END                                                               05750000
  /*******************************************************************/ 05760000
  /*                                                                 */ 05770000
  /*                 TIME KEYWORD OPTION                             */ 05780000
  /*                                                                 */ 05790000
  /*  FORMAT OF TIME OUTPUT FOR PRECOMPILER                          */ 05800000
  /*                                                                 */ 05810000
  /*  PARMS:   TIME FORMAT                                           */ 05820000
  /*  DEFAULT: NONE                                                  */ 05830000
  /*******************************************************************/ 05840000
  IF &TIME = NONE                /* DO TIME SYNTAX CHECKING          */+05850000
    THEN SET &TIME = &STR()      /* PASS NOTHING TO PRECOMPILER      */ 05860000
    ELSE                         /* PASS IT TO PRECOMPILER           */+05870000
      DO                                                                05880000
       /*------------------------------------------------------------*/ 05890000
       /* EXAMINE TIME VALUE SPECIFIED                               */ 05900000
       /*------------------------------------------------------------*/ 05910000
        SET &T = &SUBSTR(1,&TIME)   /* GET FIRST CHARACTER           */ 05920000
        IF (&T^=I) AND (&T^=J) AND (&T^=U) AND (&T^=E) AND (&T^=L)     +05930000
          THEN                      /* IF VALUE IS ILLEGAL, SAY IT   */+05940000
            DO                                                          05950000
              /*-----------------------------------------------------*/ 05960000
              /* DSNH751I: ERROR IN TIME VALUE SPECIFIED             */ 05970000
              /*-----------------------------------------------------*/ 05980000
              SET &ERROR = 8     /* REMEMBER THE ERROR               */ 05990000
              WRITE &M751 TIME VALUE &TIME                              06000000
            END                                                         06010000
        IF &T = I THEN SET &TIME = TIME(ISO) /* PREPARE PARM FOR     */ 06020000
        IF &T = J THEN SET &TIME = TIME(JIS) /* THE PRECOMPILER      */ 06030000
        IF &T = U THEN SET &TIME = TIME(USA)                            06040000
        IF &T = E THEN SET &TIME = TIME(EUR)                            06050000
        IF &T = L THEN SET &TIME = TIME(LOCAL)                          06060000
      END                                                               06070000
  /*******************************************************************/ 06080000
  /*                                                                 */ 06090000
  /*                 GRAPHIC KEYWORD OPTION                          */ 06100000
  /*                                                                 */ 06110000
  /*  FORMAT OF GRAPHIC CHARACTERS FOR PRECOMPILER                   */ 06120000
  /*                                                                 */ 06130000
  /*  PARMS:   NONE, YES, NO                                         */ 06140000
  /*  DEFAULT: NONE                                                  */ 06150000
  /*******************************************************************/ 06160000
  IF &GRAPHIC = NONE OR          /* GRAPHIC SYNTAX CHECK             */+06170000
     &GRAPHIC = NON              /* NONE AND NON AREN'T AMBIGUOUS    */+06180000
    THEN SET &GRAPHIC = &STR()   /* PASS NOTHING TO PRECOMPILER      */ 06190000
    ELSE                         /* PASS SOMETHING TO PRECOMPILER    */+06200000
      DO                                                                06210000
        /*-----------------------------------------------------------*/ 06220000
        /* EXAMINE GRAPHIC VALUE SPECIFIED                           */ 06230000
        /*-----------------------------------------------------------*/ 06240000
        IF &GRAPHIC = NO         /* IF NO, MAKE PRECOMPILER ACT LIKE */+06250000
          THEN SET &GRAPHIC = GRAPHIC(NO) /* DSNHDECP SAYS MIXED(NO) */ 06260000
          ELSE                            /* IF YES, MAKE IT ACT LIKE*/+06270000
            IF &SUBSTR(1,&GRAPHIC) = Y    /* DSNHDECP SAYS MIXED(YES)*/+06280000
              THEN SET &GRAPHIC = GRAPHIC(YES) /* OPTION TO YES      */ 06290000
              ELSE                  /* BAD PARM RECEIVED             */+06300000
                DO                                                      06310000
                  /*-------------------------------------------------*/ 06320000
                  /* DSNH751I: ERROR IN GRAPHIC VALUE SPECIFIED      */ 06330000
                  /*-------------------------------------------------*/ 06340000
                  SET &ERROR = 8    /* REMEMBER THE ERROR            */ 06350000
                  WRITE &M751 GRAPHIC VALUE &GRAPHIC                    06360000
                END                                                     06370000
      END                                                               06380000
  /*******************************************************************/ 06390000
  /*                                                                 */ 06400000
  /*                 ACQUIRE KEYWORD OPTION                          */ 06410000
  /*                                                                 */ 06420000
  /*  INFORM BIND WHERE TO ACQUIRE DB2 RESOURCES                     */ 06430000
  /*                                                                 */ 06440000
  /*  PARMS:   USE, ALLOCATE                                         */ 06450000
  /*  DEFAULT: USE                                                   */ 06460000
  /*******************************************************************/ 06470000
  IF &SUBSTR(1,&ACQUIRE) = A THEN   /* ACQUIRE PARM SYNTAX CHECKING  */+06480000
    SET &ACQUIRE = ALLOCATE         /* BE SURE KEYWORD IS EXACT      */ 06490000
  ELSE                              /* CHECK FOR ACQUIRE AT USE      */+06500000
    IF &SUBSTR(1,&ACQUIRE) = U THEN /* ACQUIRE AT USE                */+06510000
      SET &ACQUIRE = USE            /* BE SURE KEYWORD IS EXACT      */ 06520000
    ELSE                            /* THIS IS AN ERROR              */+06530000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 06540000
        /*-----------------------------------------------------------*/ 06550000
        /* DSNH751I: ERROR IN ACQUIRE VALUE SPECIFIED                */ 06560000
        /*-----------------------------------------------------------*/ 06570000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 06580000
        WRITE &M751 ACQUIRE VALUE &ACQUIRE                              06590000
      END                           /* OF ERROR SETTING              */ 06600000
  /*******************************************************************/ 06610000
  /*                                                                 */ 06620000
  /*                 ACTION KEYWORD OPTION                           */ 06630000
  /*                                                                 */ 06640000
  /*  INDICATE APPLICATION PLAN IS NEW OR REPLACEMENT                */ 06650000
  /*                                                                 */ 06660000
  /*  PARMS:   REPLACE, ADD                                          */ 06670000
  /*  DEFAULT: REPLACE                                               */ 06680000
  /*******************************************************************/ 06690000
  IF &SUBSTR(1,&ACTION) = A THEN    /* ACTION PARAMETER SYNTAX CHECK */+06700000
    SET &ACTION = ADD               /* BE SURE KEYWORD IS EXACT      */ 06710000
  ELSE                              /* CHECK REPLACE ACTION          */+06720000
    IF &SUBSTR(1,&ACTION) = R THEN  /* ACTION IS REPLACE             */+06730000
      SET &ACTION = REPLACE         /* BE SURE KEYWORD IS EXACT      */ 06740000
    ELSE                            /* THIS IS AN ERROR              */+06750000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 06760000
        /*-----------------------------------------------------------*/ 06770000
        /* DSNH751I: ERROR IN ACTION VALUE SPECIFIED                 */ 06780000
        /*-----------------------------------------------------------*/ 06790000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 06800000
        WRITE &M751 ACTION VALUE &ACTION                                06810000
      END                           /* OF ERROR SETTING              */ 06820000
  /*******************************************************************/ 06830000
  /*                                                                 */ 06840000
  /*                 BIND KEYWORD OPTION                             */ 06850000
  /*                                                                 */ 06860000
  /*  INVOKE BIND PROCESS BASED UPON COMPLETION CODE FROM PRIOR      */ 06870000
  /*  STEPS                                                          */ 06880000
  /*                                                                 */ 06890000
  /*  PARMS:   YES, NO                                               */ 06900000
  /*  DEFAULT: YES                                                   */ 06910000
  /*******************************************************************/ 06920000
  IF &SUBSTR(1,&BIND) = Y THEN      /* BIND(YES) WAS CHOSEN          */+06930000
    SET &BIND   = YES               /* BE SURE KEYWORD IS EXACT      */ 06940000
  ELSE                              /* CHECK NO BIND                 */+06950000
    IF &SUBSTR(1,&BIND) = N THEN    /* BIND(NO) WAS CHOSEN           */+06960000
      SET &BIND   = NO              /* BE SURE KEYWORD IS EXACT      */ 06970000
    ELSE                            /* THIS IS AN ERROR              */+06980000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 06990000
        /*-----------------------------------------------------------*/ 07000000
        /* DSNH751I: ERROR IN BIND VALUE SPECIFIED                   */ 07010000
        /*-----------------------------------------------------------*/ 07020000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 07030000
        WRITE &M751 BIND VALUE &BIND                                    07040000
      END                           /* OF ERROR SETTING              */ 07050000
  /*******************************************************************/ 07060000
  /*                                                                 */ 07070000
  /*                 CICSXLAT KEYWORD OPTION                         */ 07080000
  /*                                                                 */ 07090000
  /*  INDICATES INVOCATION OF CICS COMMAND TRANSLATOR                */ 07100000
  /*                                                                 */ 07110000
  /*  PARMS:   YES, NO                                               */ 07120000
  /*  DEFAULT: YES                                                   */ 07130000
  /*******************************************************************/ 07140000
  IF &SUBSTR(1,&EXPLAIN)= Y THEN    /* EXPLAIN PARM SYNTAX CHECK     */+07150000
    SET &EXPLAIN = YES              /* BE SURE KEYWORD IS EXACT      */ 07160000
  ELSE                              /* CHECK FOR VALUE = 'NO'        */+07170000
    IF &SUBSTR(1,&EXPLAIN)= N THEN  /* IF EXPLAIN IS NO  THEN        */+07180000
      SET &EXPLAIN = NO             /* BE SURE KEYWORD IS EXACT      */ 07190000
    ELSE                            /* THIS IS AN ERROR              */+07200000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 07210000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 07220000
        WRITE &M751 EXPLAIN VALUE &EXPLAIN                              07230000
      END                           /* OF ERROR SETTING              */ 07240000
  IF &SUBSTR(1,&CICSXLAT) = Y THEN  /* CICSXLAT SYNTAX CHECK         */+07250000
    SET &CICSXLAT = YES             /* BE SURE KEYWORD IS EXACT      */ 07260000
  ELSE                              /* CHECK NO CICSXLAT             */+07270000
    IF &SUBSTR(1,&CICSXLAT) = N THEN   /* CICSXLAT(NO) CHOSEN        */+07280000
      SET &CICSXLAT = NO            /* BE SURE KEYWORD IS EXACT      */ 07290000
    ELSE                            /* THIS IS AN ERROR              */+07300000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 07310000
        /*-----------------------------------------------------------*/ 07320000
        /* DSNH751I: ERROR IN CICSXLAT VALUE SPECIFIED               */ 07330000
        /*-----------------------------------------------------------*/ 07340000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 07350000
        WRITE &M751 CICSXLAT VALUE &CICSXLAT                            07360000
      END                           /* OF ERROR SETTING              */ 07370000
  /*******************************************************************/ 07380000
  /*                                                                 */ 07390000
  /*                 COMPILATION KEYWORD OPTION                      */ 07400000
  /*                                                                 */ 07410000
  /*  INDICATES INVOCATION OF COMPILATION STEP                       */ 07420000
  /*                                                                 */ 07430000
  /*  PARMS:   YES, NO                                               */ 07440000
  /*  DEFAULT: YES                                                   */ 07450000
  /*******************************************************************/ 07460000
  IF &SUBSTR(1,&COMPILE)= Y THEN    /* COMPILE PARM SYNTAX CHECK     */+07470000
    SET &COMPILE = YES              /* BE SURE KEYWORD IS EXACT      */ 07480000
  ELSE                              /* CHECK NO COMPILE              */+07490000
    IF &SUBSTR(1,&COMPILE)= N THEN  /* IF COMPILE IS NO  THEN        */+07500000
      SET &COMPILE = NO             /* BE SURE KEYWORD IS EXACT      */ 07510000
    ELSE                            /* THIS IS AN ERROR              */+07520000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 07530000
        /*-----------------------------------------------------------*/ 07540000
        /* DSNH751I: ERROR IN COMPILE VALUE SPECIFIED                */ 07550000
        /*-----------------------------------------------------------*/ 07560000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 07570000
        WRITE &M751 COMPILE VALUE &COMPILE                              07580000
      END                           /* OF ERROR SETTING              */ 07590000
  /*******************************************************************/ 07600000
  /*                                                                 */ 07610000
  /*                 PRELINK KEYWORD OPTION                          */ 07620000
  /*                                                                 */ 07630000
  /*  INDICATES INVOCATION OF PRELINKEDIT STEP                       */ 07640000
  /*                                                                 */ 07650000
  /*  PARMS:   YES, NO                                               */ 07660000
  /*  DEFAULT: NO                                                    */ 07670000
  /*******************************************************************/ 07680000
  IF &SUBSTR(1,&PRELINK)   = Y THEN /* IF PRELINK IS YES THEN        */+07690000
    SET &PRELINK    = YES           /* BE SURE KEYWORD IS EXACT      */ 07700000
  ELSE                              /* CHECK NO PRELINK              */+07710000
    IF &SUBSTR(1,&PRELINK)   = N THEN  /* IF PRELINK IS NO THEN      */+07720000
      SET &PRELINK    = NO          /* BE SURE KEYWORD IS EXACT      */ 07730000
    ELSE                            /* THIS IS AN ERROR              */+07740000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 07750000
        /*-----------------------------------------------------------*/ 07760000
        /* DSNH751I: ERROR IN PRELINK VALUE SPECIFIED                */ 07770000
        /*-----------------------------------------------------------*/ 07780000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 07790000
        WRITE &M751 PRELINK VALUE &PRELINK                              07800000
      END                           /* OF ERROR SETTING              */ 07810000
  /*******************************************************************/ 07820000
  /*                                                                 */ 07830000
  /*                 LINK KEYWORD OPTION                             */ 07840000
  /*                                                                 */ 07850000
  /*  INDICATES INVOCATION OF LINKEDIT STEP UPON SUCCESSFUL          */ 07860000
  /*  COMPLETION OF COMPILATION OR ASSEMBLY                          */ 07870000
  /*                                                                 */ 07880000
  /*  PARMS:   YES, NO                                               */ 07890000
  /*  DEFAULT: YES                                                   */ 07900000
  /*******************************************************************/ 07910000
  IF &SUBSTR(1,&LINK)   = Y THEN    /* IF LINK    IS YES THEN        */+07920000
    SET &LINK    = YES              /* BE SURE KEYWORD IS EXACT      */ 07930000
  ELSE                              /* CHECK NO LINK                 */+07940000
    IF &SUBSTR(1,&LINK)   = N THEN  /* IF LINK    IS NO  THEN        */+07950000
      SET &LINK    = NO             /* BE SURE KEYWORD IS EXACT      */ 07960000
    ELSE                            /* THIS IS AN ERROR              */+07970000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 07980000
        /*-----------------------------------------------------------*/ 07990000
        /* DSNH751I: ERROR IN LINK VALUE SPECIFIED                   */ 08000000
        /*-----------------------------------------------------------*/ 08010000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 08020000
        WRITE &M751 LINK VALUE &LINK                                    08030000
      END                           /* OF ERROR SETTING              */ 08040000
  /*******************************************************************/ 08050000
  /*                                                                 */ 08060000
  /*                 MACRO KEYWORD OPTION                            */ 08070000
  /*                                                                 */ 08080000
  /*  INDICATES INVOCATION OF MACRO PROCESSOR BEFORE PRECOMPILATION  */ 08090000
  /*  OF A PL/I PROGRAM                                              */ 08100000
  /*                                                                 */ 08110000
  /*  PARMS:   YES, NO                                               */ 08120000
  /*  DEFAULT: YES                                                   */ 08130000
  /*******************************************************************/ 08140000
  IF &SUBSTR(1,&MACRO)= Y THEN      /* SYNTAX CHECK MACRO PARAMETER  */+08150000
    SET &MACRO = YES                /* BE SURE KEYWORD IS EXACT      */ 08160000
  ELSE                              /* CHECK NO MACRO                */+08170000
    IF &SUBSTR(1,&MACRO)= N THEN    /* IF MACRO IS NO THEN           */+08180000
      SET &MACRO = NO               /* BE SURE KEYWORD IS EXACT      */ 08190000
    ELSE                            /* THIS IS AN ERROR              */+08200000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 08210000
        /*-----------------------------------------------------------*/ 08220000
        /* DSNH751I: ERROR IN MACRO VALUE SPECIFIED                  */ 08230000
        /*-----------------------------------------------------------*/ 08240000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 08250000
        WRITE &M751 MACRO VALUE &MACRO                                  08260000
      END                           /* OF ERROR SETTING              */ 08270000
  /*******************************************************************/ 08280000
  /*                                                                 */ 08290000
  /*                 PRECOMP KEYWORD OPTION                          */ 08300000
  /*                                                                 */ 08310000
  /*  INDICATES INVOCATION OF PRECOMPLE STEP                         */ 08320000
  /*                                                                 */ 08330000
  /*  PARMS:   YES, NO                                               */ 08340000
  /*  DEFAULT: YES                                                   */ 08350000
  /*******************************************************************/ 08360000
  IF &SUBSTR(1,&PRECOMP)= Y THEN    /* SYNTAX CHECK PRECOMP PARAMETER*/+08370000
    SET &PRECOMP = YES              /* BE SURE KEYWORD IS EXACT      */ 08380000
  ELSE                              /* CHECK NO PRECOMP              */+08390000
    IF &SUBSTR(1,&PRECOMP)= N THEN  /* IF PRECOMP IS NO THEN         */+08400000
      SET &PRECOMP = NO             /* BE SURE KEYWORD IS EXACT      */ 08410000
    ELSE                            /* THIS IS AN ERROR              */+08420000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 08430000
        /*-----------------------------------------------------------*/ 08440000
        /* DSNH751I: ERROR IN PRECOMP VALUE SPECIFIED                */ 08450000
        /*-----------------------------------------------------------*/ 08460000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 08470000
        WRITE &M751 PRECOMP VALUE &PRECOMP                              08480000
      END                           /* OF ERROR SETTING              */ 08490000
  /*******************************************************************/ 08500000
  /*                                                                 */ 08510000
  /*                 OPTIONS KEYWORD OPTION                          */ 08520000
  /*                                                                 */ 08530000
  /*  INDICATES OPTIONS USED WITH PRECOMPILE OR CICS TRANSLATOR      */ 08540000
  /*  ARE TO BE PROVIDED IN OUTPUT LISTINGS                          */ 08550000
  /*                                                                 */ 08560000
  /*  PARMS:   YES, NO                                               */ 08570000
  /*  DEFAULT: NO                                                    */ 08580000
  /*******************************************************************/ 08590000
  IF &SUBSTR(1,&OPTIONS)= Y THEN    /* SYNTAX CHECK OPTIONS KEYWORD  */+08600000
    SET &OPTIONS = YES              /* BE SURE KEYWORD IS EXACT      */ 08610000
  ELSE                              /* CHECK NO OPTIONS              */+08620000
    IF &SUBSTR(1,&OPTIONS)= N THEN  /* IF OPTIONS IS NO  THEN        */+08630000
      SET &OPTIONS = NO             /* BE SURE KEYWORD IS EXACT      */ 08640000
    ELSE                            /* THIS IS AN ERROR              */+08650000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 08660000
        /*-----------------------------------------------------------*/ 08670000
        /* DSNH751I: ERROR IN OPTIONS VALUE SPECIFIED                */ 08680000
        /*-----------------------------------------------------------*/ 08690000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 08700000
        WRITE &M751 OPTIONS VALUE &OPTIONS                              08710000
      END                           /* OF ERROR SETTING              */ 08720000
  /*******************************************************************/ 08730000
  /*                                                                 */ 08740000
  /*                 RELEASE KEYWORD OPTION                          */ 08750000
  /*                                                                 */ 08760000
  /*  INDICATES WHEN BIND SHOULD RELEASE DB2 RESOURCES               */ 08770000
  /*                                                                 */ 08780000
  /*  PARMS:   COMMIT, DEALLOCATE                                    */ 08790000
  /*  DEFAULT: COMMIT                                                */ 08800000
  /*******************************************************************/ 08810000
  IF &SUBSTR(1,&RELEASE) = D THEN   /* SYNTAX CHECK RELEASE PARAMETER*/+08820000
    SET &RELEASE = DEALLOCATE       /* BE SURE KEYWORD IS EXACT      */ 08830000
  ELSE                              /* CHECK FOR RELEASE COMMIT      */+08840000
    IF &SUBSTR(1,&RELEASE) = C THEN /* SYNTAX CHECK RELEASE PARAMETER*/+08850000
      SET &RELEASE = COMMIT         /* BE SURE KEYWORD IS EXACT      */ 08860000
    ELSE                            /* THIS IS AN ERROR              */+08870000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 08880000
        /*-----------------------------------------------------------*/ 08890000
        /* DSNH751I: ERROR IN RELEASE VALUE SPECIFIED                */ 08900000
        /*-----------------------------------------------------------*/ 08910000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 08920000
        WRITE &M751 RELEASE VALUE &RELEASE                              08930000
      END                           /* OF ERROR SETTING              */ 08940000
  /*******************************************************************/ 08950000
  /*                                                                 */ 08960000
  /*                 RETAIN KEYWORD OPTION                           */ 08970000
  /*                                                                 */ 08980000
  /*  INDICATE BIND AND EXECUTE PRIVILEGES ARE TO CONTINUE WHEN      */ 08990000
  /*  APPLICATION PLAN IS REPLACED                                   */ 09000000
  /*                                                                 */ 09010000
  /*  PARMS:   YES, NO                                               */ 09020000
  /*  DEFAULT: NO                                                    */ 09030000
  /*******************************************************************/ 09040000
  IF &SUBSTR(1,&RETAIN )= Y THEN    /* SYNTAX CHECK RETAIN PARAMETER */+09050000
    SET &RETAINKY = RETAIN          /* BE SURE KEYWORD IS EXACT      */ 09060000
  ELSE                              /* CHECK NO RETAIN, DEFAULT      */+09070000
    IF &SUBSTR(1,&RETAIN )= N THEN  /* IF RETAIN  IS NO  THEN        */+09080000
      SET &RETAINKY =                                                   09090000
    ELSE                            /* THIS IS AN ERROR              */+09100000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 09110000
        /*-----------------------------------------------------------*/ 09120000
        /* DSNH751I: ERROR IN RETAIN VALUE SPECIFIED                 */ 09130000
        /*-----------------------------------------------------------*/ 09140000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 09150000
        WRITE &M751 RETAIN  VALUE &RETAIN                               09160000
      END                           /* OF ERROR SETTING              */ 09170000
  /*******************************************************************/ 09180000
  /*                                                                 */ 09190000
  /*                 RUN KEYWORD OPTION                              */ 09200000
  /*                                                                 */ 09210000
  /*  INDICATES INVOCATION OF COMPILED PROGRAM BASED UPON SUCCESSFUL */ 09220000
  /*  COMPLETION OF PRIOR STEPS                                      */ 09230000
  /*                                                                 */ 09240000
  /*  PARMS:   YES|TSO -> YES, NO|BATCH -> NO                        */ 09250000
  /*  DEFAULT: YES                                                   */ 09260000
  /*******************************************************************/ 09270000
  SET &ATTACH  = BATCH              /* PRESET ATTACH INCLUDE         */ 09280000
  IF &SUBSTR(1,&RUN)= Y OR          /* SYNTAX CHECK RUN PARAMETER    */+09290000
    &SUBSTR(1,&RUN)= T THEN         /* IF RUN IS TSO THEN            */+09300000
    SET &RUN = YES                  /* BE SURE KEYWORD IS EXACT      */ 09310000
  ELSE                              /* CHECK NO RUN, ATTACHES        */+09320000
    IF &SUBSTR(1,&RUN)= N OR        /* IF RUN IS NO OR               */+09330000
      &SUBSTR(1,&RUN)= B THEN       /* IF RUN IS BATCH THEN          */+09340000
      SET &RUN = NO                 /* BE SURE KEYWORD IS EXACT      */ 09350000
    ELSE                            /* THIS MAY BE CICS OR IMS       */+09360000
      DO                            /* FOLLOWING DO NOT RUN TSO      */ 09370000
        /*-----------------------------------------------------------*/ 09380000
        /* CHECK FOR IMS OR CICS SPECIFIED                           */ 09390000
        /*-----------------------------------------------------------*/ 09400000
        IF &SUBSTR(1,&RUN) = I THEN /* IF IMS ATTACH PKG             */+09410000
          SET &ATTACH  = IMS        /* REMEMBER ATTACH INCLUDE       */ 09420000
        ELSE                        /* THIS IS AN ERROR              */+09430000
          IF &SUBSTR(1,&RUN) = C THEN  /* IF CICS ATTACH PKG         */+09440000
            SET &ATTACH  = CICS     /* REMEMBER ATTACH INCLUDE       */ 09450000
          ELSE                      /* THIS IS AN ERROR              */+09460000
            DO                      /* ISSUE THE ERROR MESSAGE       */ 09470000
              /*-----------------------------------------------------*/ 09480000
              /* DSNH751I: ERROR IN RUN VALUE SPECIFIED              */ 09490000
              /*-----------------------------------------------------*/ 09500000
              SET &ERROR = 8        /* REMEMBER THE ERROR            */ 09510000
              WRITE &M751 RUN VALUE &RUN                                09520000
            END                     /* OF ERROR SETTING              */ 09530000
        SET &RUN = NO               /* IMS AND CICS MEAN NO RUN      */ 09540000
      END                           /* FOLLOWING DO NOT RUN TSO      */ 09550000
  /*******************************************************************/ 09560000
  /*                                                                 */ 09570000
  /*                 SOURCE KEYWORD OPTION                           */ 09580000
  /*                                                                 */ 09590000
  /*  INDICATES PRINT SOURCE CODE AND DIAGNOSTICS WITH OUTPUT FROM   */ 09600000
  /*  PRECOMPILER                                                    */ 09610000
  /*                                                                 */ 09620000
  /*  PARMS:   YES, NO                                               */ 09630000
  /*  DEFAULT: NO                                                    */ 09640000
  /*******************************************************************/ 09650000
  IF &SUBSTR(1,&SOURCE )= Y THEN    /* SYNTAX CHECK SOURCE PARAMETER */+09660000
    SET &SOURCE  = YES              /* BE SURE KEYWORD IS EXACT      */ 09670000
  ELSE                              /* CHECK NO SOURCE               */+09680000
    IF &SUBSTR(1,&SOURCE )= N THEN  /* IF SOURCE  IS NO  THEN        */+09690000
      SET &SOURCE  = NO             /* BE SURE KEYWORD IS EXACT      */ 09700000
    ELSE                            /* THIS IS AN ERROR              */+09710000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 09720000
        /*-----------------------------------------------------------*/ 09730000
        /* DSNH751I: ERROR IN SOURCE VALUE SPECIFIED                 */ 09740000
        /*-----------------------------------------------------------*/ 09750000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 09760000
        WRITE &M751 SOURCE VALUE &SOURCE                                09770000
      END                           /* OF ERROR SETTING              */ 09780000
  /*******************************************************************/ 09790000
  /*                                                                 */ 09800000
  /*                 SUFFIX KEYWORD OPTION                           */ 09810000
  /*                                                                 */ 09820000
  /*  INDICATES USE TSO STANDARD NAMING CONVENTIONS                  */ 09830000
  /*                                                                 */ 09840000
  /*  PARMS:   YES, NO                                               */ 09850000
  /*  DEFAULT: YES                                                   */ 09860000
  /*******************************************************************/ 09870000
  IF &SUBSTR(1,&SUFFIX )= Y THEN    /* IF SUFFIX  IS YES THEN        */+09880000
    SET &SUFFIX  = YES              /* BE SURE KEYWORD IS EXACT      */ 09890000
  ELSE                              /* CHECK NO SUFFIX               */+09900000
    IF &SUBSTR(1,&SUFFIX )= N THEN  /* IF SUFFIX  IS NO  THEN        */+09910000
      SET &SUFFIX  = NO             /* BE SURE KEYWORD IS EXACT      */ 09920000
    ELSE                            /* THIS IS AN ERROR              */+09930000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 09940000
        /*-----------------------------------------------------------*/ 09950000
        /* DSNH751I: ERROR IN SUFFIX VALUE SPECIFIED                 */ 09960000
        /*-----------------------------------------------------------*/ 09970000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 09980000
        WRITE &M751 SUFFIX VALUE &SUFFIX                                09990000
      END                           /* OF ERROR SETTING              */ 10000000
  /*******************************************************************/ 10010000
  /*                                                                 */ 10020000
  /*                 XREF KEYWORD OPTION                             */ 10030000
  /*                                                                 */ 10040000
  /*  INDICATES CROSS-REFERENCE LISTING IS TO BE INCLUDED IN OUTPUT  */ 10050000
  /*  OF PRECOMPILER, COMPILER, AND LINKAGE EDITOR                   */ 10060000
  /*                                                                 */ 10070000
  /*  PARMS:   YES, NO                                               */ 10080000
  /*  DEFAULT: NO                                                    */ 10090000
  /*******************************************************************/ 10100000
  IF &SUBSTR(1,&XREF)= Y THEN       /* SYNTAX CHECK XREF PARAMETER   */+10110000
    SET &XREF    = YES              /* BE SURE KEYWORD IS EXACT      */ 10120000
  ELSE                              /* CHECK NO XREF                 */+10130000
    IF &SUBSTR(1,&XREF   )= N THEN  /* IF XREF    IS NO  THEN        */+10140000
      SET &XREF    = NO             /* BE SURE KEYWORD IS EXACT      */ 10150000
    ELSE                            /* THIS IS AN ERROR              */+10160000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 10170000
        /*-----------------------------------------------------------*/ 10180000
        /* DSNH751I: ERROR IN XREF VALUE SPECIFIED                   */ 10190000
        /*-----------------------------------------------------------*/ 10200000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 10210000
        WRITE &M751 XREF VALUE &XREF                                    10220000
      END                           /* OF ERROR SETTING              */ 10230000
  /*******************************************************************/ 10240000
  /*                                                                 */ 10250000
  /*                 DECIMAL KEYWORD OPTION                          */ 10260000
  /*                                                                 */ 10270000
  /*  PROVIDE DECIMAL POINT INDICATOR FOR DECIMAL AND FLOATING       */ 10280000
  /*  POINT LITERALS                                                 */ 10290000
  /*                                                                 */ 10300000
  /*  PARMS:   PERIOD, COMMA                                         */ 10310000
  /*  DEFAULT: PERIOD                                                */ 10320000
  /*******************************************************************/ 10330000
  IF &SUBSTR(1,&DECIMAL)= P THEN    /* SYNTAX CHECK DECIMAL PARAMETER*/+10340000
    SET &DECIMAL = PERIOD           /* BE SURE KEYWORD IS EXACT      */ 10350000
  ELSE                              /* CHECK NO DECIMAL              */+10360000
    IF &SUBSTR(1,&DECIMAL)= C THEN  /* IF DECIMAL IS COMMA           */+10370000
      SET &DECIMAL = COMMA          /* BE SURE KEYWORD IS EXACT      */ 10380000
    ELSE                            /* THIS IS AN ERROR              */+10390000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 10400000
        /*-----------------------------------------------------------*/ 10410000
        /* DSNH751I: ERROR IN DECIMAL VALUE SPECIFIED                */ 10420000
        /*-----------------------------------------------------------*/ 10430000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 10440000
        WRITE &M751 DECIMAL VALUE &DECIMAL                              10450000
      END                           /* OF ERROR SETTING              */ 10460000
  /*******************************************************************/ 10470000
  /*                                                                 */ 10480000
  /*                 DEFER AND NODEFER KEYWORD OPTIONS               */ 10490000
  /*                                                                 */ 10500000
  /*  DEFER OR NODEFER PROCESSING OPTIONS (BIND)                     */ 10510000
  /*                                                                 */ 10520000
  /*  PARMS:   PREP - PREPARE                                        */ 10530000
  /*  DEFAULT: NODEFER(PREPARE)                                      */ 10540000
  /*******************************************************************/ 10550000
  IF &DEFER = NONE THEN             /* IF KEYWORD NOT SPECIFIED      */+10560000
    SET &BDEFR =                    /* INDICATE NO KEYWORD SPECIFIED */ 10570000
  ELSE                              /* DEFER KEYWORD SPECIFIED       */+10580000
    IF &SUBSTR(1,&DEFER) = P THEN   /* IF DEFER KEYWORD CORRECT      */+10590000
      SET &BDEFR = DEFER(PREPARE)   /* SET TO DEFER PREPARE          */ 10600000
    ELSE                            /* ERROR IN DEFER KEYWORD        */+10610000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 10620000
        /*-----------------------------------------------------------*/ 10630000
        /* DSNH751I: ERROR IN DEFER VALUE SPECIFIED                  */ 10640000
        /*-----------------------------------------------------------*/ 10650000
        SET &ERROR = 8              /*  REMEMBER THE ERROR           */ 10660000
        WRITE &M751 DEFER VALUE &DEFER                                  10670000
      END                           /* END ERROR SETTING             */ 10680000
  IF &NODEFER = NONE THEN           /* IF KEYWORD NOT SPECIFIED      */+10690000
    SET &BNDEFR =                   /* INDICATE KEYWORD NOT SPECIFIED*/ 10700000
  ELSE                              /* NODEFER KEYWORD SPECIFIED     */+10710000
    IF &SUBSTR(1,&NODEFER) = P THEN /* IF NODEFER KEYWORD CORRECT    */+10720000
      SET &BNDEFR = NODEFER(PREPARE)  /* SET TO NODEFER PREPARE      */ 10730000
    ELSE                            /* ERROR IN NODEFER KEYWORD      */+10740000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 10750000
        /*-----------------------------------------------------------*/ 10760000
        /* DSNH751I: ERROR IN NODEFER VALUE SPECIFIED                */ 10770000
        /*-----------------------------------------------------------*/ 10780000
        SET &ERROR = 8              /*   REMEMBER THE ERROR          */ 10790000
        WRITE &M751 NODEFER VALUE &NODEFER                              10800000
      END                           /* END ERROR SETTING             */ 10810000
  /*******************************************************************/ 10820000
  /*                                                                 */ 10830000
  /*                 DELIMIT KEYWORD OPTION                          */ 10840000
  /*                                                                 */ 10850000
  /*  INDICATES THE STRING DELIMITER USED WITHIN THE HOST LANGUAGE   */ 10860000
  /*                                                                 */ 10870000
  /*  PARMS:   DEFAULT, APOST, QUOTE                                 */ 10880000
  /*  DEFAULT: DEFAULT                                               */ 10890000
  /*******************************************************************/ 10900000
  IF &SUBSTR(1,&DELIMIT)= D THEN    /* SYNTAX CHECK DELIMIT KEYWORD  */+10910000
    SET &DELIMIT = DEFAULT          /* BE SURE KEYWORD IS EXACT      */ 10920000
  ELSE                              /* CHECK OTHER KEYWORDS          */+10930000
    IF &SUBSTR(1,&DELIMIT)= A THEN  /* IF DELIMIT IS APOST           */+10940000
      SET &DELIMIT = APOST          /* BE SURE KEYWORD IS EXACT      */ 10950000
    ELSE                            /* CHECK NO DELIMIT              */+10960000
      IF &SUBSTR(1,&DELIMIT)= Q THEN   /* IF DELIMIT IS QUOTE        */+10970000
        SET &DELIMIT = QUOTE        /* BE SURE KEYWORD IS EXACT      */ 10980000
      ELSE                          /* THIS IS AN ERROR              */+10990000
        DO                          /* ISSUE THE ERROR MESSAGE       */ 11000000
          /*---------------------------------------------------------*/ 11010000
          /* DSNH751I: ERROR IN DELIMIT VALUE SPECIFIED              */ 11020000
          /*---------------------------------------------------------*/ 11030000
          SET &ERROR = 8            /* REMEMBER THE ERROR            */ 11040000
          WRITE &M751 DELIMIT VALUE &DELIMIT                            11050000
        END                         /* OF ERROR SETTING              */ 11060000
  /*******************************************************************/ 11070000
  /*                                                                 */ 11080000
  /*                 SQLDELIM KEYWORD OPTION                         */ 11090000
  /*                                                                 */ 11100000
  /*  INDICATES THE APOSTSQL OR QUOTESQL PRECOMPILER OPTION          */ 11110000
  /*                                                                 */ 11120000
  /*  PARMS:   DEFAULT, APOSTSQL, QUOTESQL                           */ 11130000
  /*  DEFAULT: DEFAULT                                               */ 11140000
  /*******************************************************************/ 11150000
  IF &SUBSTR(1,&SQLDELIM)= D THEN   /* SYNTAX CHECK SQLDELIM KEYWORD */+11160000
    SET &SQLDELIM = DEFAULT         /* BE SURE KEYWORD IS EXACT      */ 11170000
  ELSE                              /* CHECK OTHER VALUES            */+11180000
    IF &SUBSTR(1,&SQLDELIM)= A THEN /* IF SQLDELIM IS APOST          */+11190000
      SET &SQLDELIM = APOSTSQL      /* BE SURE KEYWORD IS EXACT      */ 11200000
    ELSE                            /* CHECK NO SQLDELIM             */+11210000
      IF &SUBSTR(1,&SQLDELIM)= Q THEN  /* IF SQLDELIM IS QUOTE       */+11220000
        SET &SQLDELIM = QUOTESQL    /* SET EXACT KEYWORD             */ 11230000
      ELSE                          /* THIS IS AN ERROR              */+11240000
        DO                          /* ISSUE THE ERROR MESSAGE       */ 11250000
          /*---------------------------------------------------------*/ 11260000
          /* DSNH751I: ERROR IN SQLDELIM VALUE SPECIFIED             */ 11270000
          /*---------------------------------------------------------*/ 11280000
          SET &ERROR = 8            /* REMEMBER THE ERROR            */ 11290000
          WRITE &M751 SQLDELIM VALUE &SQLDELIM                          11300000
        END                         /* OF ERROR SETTING              */ 11310000
  /*******************************************************************/ 11320000
  /*                                                                 */ 11330000
  /*                   STDSQL KEYWORD OPTION                         */ 11340000
  /*                                                                 */ 11350000
  /*  INDICATES THE LEVEL OF ANSI SQL THAT IS BEING SUPPORTED        */ 11360000
  /*  BY THE PRECOMPILER                                             */ 11370000
  /*                                                                 */ 11380000
  /*  PARMS:   NO (DB2 STANDARD), 86 (ANSI 86 LEVEL)                 */ 11390000
  /*  DEFAULT: NO                                                    */ 11400000
  /*******************************************************************/ 11410000
  IF &SUBSTR(1,&STDSQL) = N THEN    /* SYNTAX CHECK STDSQL KEYWORD   */+11420000
    SET &STDSQL = NO                /* BE SURE KEYWORD IS EXACT      */ 11430000
  ELSE                              /* CHECK OTHER VALUES            */+11440000
    IF &SUBSTR(1:2,&STDSQL)= 86 THEN/* IF STDSQL IS 86               */+11450000
      SET &STDSQL = 86              /* BE SURE KEYWORD IS EXACT      */ 11460000
    ELSE                            /* BAD STDSQL                    */+11470000
        DO                          /* ISSUE THE ERROR MESSAGE       */ 11480000
          /*---------------------------------------------------------*/ 11490000
          /* DSNH751I: ERROR IN STDSQL VALUE SPECIFIED               */ 11500000
          /*---------------------------------------------------------*/ 11510000
          SET &ERROR = 8            /* REMEMBER THE ERROR            */ 11520000
          WRITE &M751 STDSQL VALUE &STDSQL                              11530000
        END                         /* OF ERROR SETTING              */ 11540000
  /*******************************************************************/ 11550000
  /*                                                                 */ 11560000
  /*                 ISOLATION KEYWORD OPTION                        */ 11570000
  /*                                                                 */ 11580000
  /*  INDICATES THE EXTENT TO WHICH THE APPLICATION PROGRAM IS       */ 11590000
  /*  TO BE ISOLATED FROM OTHER EXECUTING APPLICATION PROGRAMS       */ 11600000
  /*                                                                 */ 11610000
  /*  PARMS:   RR (REPEATABLE READ), CS (CURSOR STABILITY)           */ 11620000
  /*  DEFAULT: RR                                                    */ 11630000
  /*******************************************************************/ 11640000
  IF &SUBSTR(1,&ISOLATION)= R THEN  /* SYNTAX CHECK ISOLATION KEYWORD*/+11650000
    SET &ISOLATION = RR             /* BE SURE KEYWORD IS EXACT      */ 11660000
  ELSE                              /* CHECK NO ISOLATION            */+11670000
    IF &SUBSTR(1,&ISOLATION)= C THEN   /* IF ISOLATION IS CS         */+11680000
      SET &ISOLATION = CS           /* BE SURE KEYWORD IS EXACT      */ 11690000
    ELSE                            /* THIS IS AN ERROR              */+11700000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 11710000
        /*-----------------------------------------------------------*/ 11720000
        /* DSNH751I: ERROR IN ISOLATION VALUE SPECIFIED              */ 11730000
        /*-----------------------------------------------------------*/ 11740000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 11750000
        WRITE &M751 ISOLATION VALUE &ISOLATION                          11760000
      END                           /* OF ERROR SETTING              */ 11770000
  /*******************************************************************/ 11780000
  /*                                                                 */ 11790000
  /*                 SPACEUN KEYWORD OPTION                          */ 11800000
  /*                                                                 */ 11810000
  /*  INDICATES THE TYPE OF UNIT FOR PSPACE AND WSPACE               */ 11820000
  /*                                                                 */ 11830000
  /*  PARMS:   TRACK, CYLINDER                                       */ 11840000
  /*  DEFAULT: TRACK                                                 */ 11850000
  /*******************************************************************/ 11860000
  IF &SUBSTR(1,&SPACEUN)= T THEN    /* SYNTAX CHECK SPACEUN KEYWORD  */+11870000
    SET &SPACEUN = TRACK            /* BE SURE KEYWORD IS EXACT      */ 11880000
  ELSE                              /* CHECK NO SPACEUN              */+11890000
    IF &SUBSTR(1,&SPACEUN)= C THEN  /* IF SPACEUN IS CYL             */+11900000
      SET &SPACEUN = CYL            /* BE SURE KEYWORD IS EXACT      */ 11910000
    ELSE                            /* THIS IS AN ERROR              */+11920000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 11930000
        /*-----------------------------------------------------------*/ 11940000
        /* DSNH751I: ERROR IN SPACEUN VALUE SPECIFIED                */ 11950000
        /*-----------------------------------------------------------*/ 11960000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 11970000
        WRITE &M751 SPACEUN VALUE &SPACEUN                              11980000
      END                           /* OF ERROR SETTING              */ 11990000
  /*******************************************************************/ 12000000
  /*                                                                 */ 12010000
  /*                 VALIDATE KEYWORD OPTION                         */ 12020000
  /*                                                                 */ 12030000
  /*  INDICATES TO BIND WHEN SQL STATEMENTS ARE TO BE VERIFIED       */ 12040000
  /*                                                                 */ 12050000
  /*  PARMS:   RUN, BIND                                             */ 12060000
  /*  DEFAULT: RUN                                                   */ 12070000
  /*******************************************************************/ 12080000
  IF &SUBSTR(1,&VALIDATE)= R THEN   /* SYNTAX CHECK VALIDATE KEYWORD */+12090000
    SET &VALIDATE= RUN              /* BE SURE KEYWORD IS EXACT      */ 12100000
  ELSE                              /* CHECK NO VALID                */+12110000
    IF &SUBSTR(1,&VALIDATE)= B THEN /* IF VALIDATE IS BIND           */+12120000
      SET &VALIDATE= BIND           /* BE SURE KEYWORD IS EXACT      */ 12130000
    ELSE                            /* THIS IS AN ERROR              */+12140000
      DO                            /* ISSUE THE ERROR MESSAGE       */ 12150000
        /*-----------------------------------------------------------*/ 12160000
        /* DSNH751I: ERROR IN VALIDATE VALUE SPECIFIED               */ 12170000
        /*-----------------------------------------------------------*/ 12180000
        SET &ERROR = 8              /* REMEMBER THE ERROR            */ 12190000
        WRITE &M751 VALIDATE VALUE &VALIDATE                            12200000
      END                           /* OF ERROR SETTING              */ 12210000
  /*******************************************************************/ 12220000
  /*                                                                 */ 12230000
  /*                 HOST KEYWORD OPTION                             */ 12240000
  /*                                                                 */ 12250000
  /*  DEFINES THE HOST LANGUAGE IN WHICH THE SQL STATEMENTS ARE      */ 12260000
  /*  EMBEDDED                                                       */ 12270000
  /*                                                                 */ 12280000
  /*  PARMS:   COBOL   - OS/VA COBOL                                 */ 12290000
  /*           COB2    - VS COBOL II                                 */ 12300000
  /*           ASMH    - ASSEMBLER H                                 */ 12310000
  /*           ASM     - ASSEMBLER                                   */ 12320000
  /*           FORTRAN - VS FORTRAN                                  */ 12330000
  /*           PLI     - OS PL/I OPTIMIZING COMPILER                 */ 12340000
  /*           C       - 'C' PROGRAM COMPILER                        */ 12350000
  /*  DEFAULT: COBOL                                                 */ 12360000
  /*******************************************************************/ 12370000
  SET &HOSTOK = NO                  /* ASSUME HOST PARM INVALID      */ 12380000
  IF &STR(&HOST) = COB2 THEN        /* COBOL 2?                      */+12390000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12400000
  IF &STR(&HOST) = C    THEN        /* C?                            */+12410000
    DO                              /* LANGUAGE OK; CHK FOR CICS/IMS */ 12420000
      /*-------------------------------------------------------------*/ 12430000
      /* HOST IS 'C', DETERMINE IF CICS                              */ 12440000
      /*-------------------------------------------------------------*/ 12450000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12460000
      IF &ATTACH NE BATCH THEN      /* C AND (CICS OR IMS) IS        */+12470000
        DO                          /* NOT PERMITTED.                */ 12480000
         /*----------------------------------------------------------*/ 12490000
         /* DSNH758I: HOST (C) NOT PERMITTED WITH RUN CICS           */ 12500000
         /*----------------------------------------------------------*/ 12510000
          WRITE DSNH758I HOST(C) IS NOT +                               12520000
                         PERMITTED WITH RUN(CICS)                       12530000
          SET &ERROR = 8            /* NOTE THE ERROR                */ 12540000
        END                         /* NOTE THE INVALID LANG/ATT     */ 12550000
    END                             /* LANGUAGE OK; CHK FOR CICS/IMS */ 12560000
  IF &STR(&HOST) = ASM  THEN        /* ASSEMBLER XF?                 */+12570000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12580000
  IF &STR(&HOST) = ASMH THEN        /* ASSEMBLER H?                  */+12590000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12600000
  IF &LENGTH(&HOST) > 3 THEN        /* AVOID SUBSTR ERRORS ON NEXT 1 */+12610000
    IF &SUBSTR(1:4,&STR(&HOST)) = COBO THEN  /* COBOL?               */+12620000
      DO                                                                12630000
        /*-----------------------------------------------------------*/ 12640000
        /* INDICATE HOST LANGUAGE IS COBOL                           */ 12650000
        /*-----------------------------------------------------------*/ 12660000
        SET &HOST = COBOL           /* ALLOW MINIMUM ABBREVIATION    */ 12670000
        SET &HOSTOK = YES           /* INDICATE THAT GOOD PARM FOUND */ 12680000
      END                                                               12690000
  IF &SUBSTR(1,&STR(&HOST)) = P THEN   /* PL/I?                      */+12700000
    DO                                                                  12710000
      /*-------------------------------------------------------------*/ 12720000
      /* INDICATE HOST LANGUAGE IS PLI                               */ 12730000
      /*-------------------------------------------------------------*/ 12740000
      SET &HOST = PLI               /* ALLOW MINIMUM ABBREVIATION    */ 12750000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12760000
    END                                                                 12770000
  IF &SUBSTR(1,&STR(&HOST)) = F THEN   /* FORTRAN?                   */+12780000
    DO                                                                  12790000
      /*-------------------------------------------------------------*/ 12800000
      /* INDICATE HOST LANGUAGE IS FORTRAN                           */ 12810000
      /*-------------------------------------------------------------*/ 12820000
      SET &HOST = FORTRAN           /* ALLOW MINIMUM ABBREVIATION    */ 12830000
      SET &HOSTOK = YES             /* INDICATE THAT GOOD PARM FOUND */ 12840000
      IF &ATTACH NE BATCH THEN      /* FORTRAN AND (CICS OR IMS) IS  */+12850000
        DO                          /* NOT PERMITTED.                */ 12860000
          /*---------------------------------------------------------*/ 12870000
          /* DSNH758I: HOST FORTRAN NOT PERMITTED WITH RUN IMS/CICS  */ 12880000
          /*---------------------------------------------------------*/ 12890000
          WRITE DSNH758I HOST(FORTRAN) IS NOT +                         12900000
                         PERMITTED WITH RUN(IMS) OR RUN(CICS)           12910000
          SET &ERROR = 8            /* NOTE THE ERROR                */ 12920000
        END                         /* NOTE THE INVALID LANG/ATT     */ 12930000
    END                                                                 12940000
  IF &STR(&HOSTOK) = NO THEN        /* IF NO VALID LANGUAGE IN HOST  */+12950000
    DO                              /* PARM ISSUE ERROR MESSAGE      */ 12960000
      /*-------------------------------------------------------------*/ 12970000
      /* DSNH751I: ERROR IN HOST VALUE SPECIFIED                     */ 12980000
      /*-------------------------------------------------------------*/ 12990000
      SET &ERROR = 8                /* REMEMBER THE ERROR            */ 13000000
      WRITE &M751 HOST VALUE &HOST                                      13010000
    END                             /* OF ERROR SETTING              */ 13020000
  SET &SUFF = &HOST                 /* SET THE PROPER SUFFIX         */ 13030000
  IF &HOST = COB2 THEN              /* IF HOST IS COB2               */+13040000
    SET &SUFF = COBOL               /* SET THE PROPER SUFFIX         */ 13050000
  IF &HOST = ASMH THEN              /* IF HOST IS ASMH               */+13060000
    SET &SUFF = ASM                 /* SET THE PROPER SUFFIX         */ 13070000
  /*-----------------------------------------------------------------*/ 13080000
  /* VALIDATE HOST LANGUAGE AND PRELINK OPTION                       */ 13090000
  /*-----------------------------------------------------------------*/ 13100000
  IF (&PRELINK = YES AND &HOSTOK = YES)  /* PRELINK AND HOST VALID   */+13110000
      AND (&HOST ^= C) THEN         /* HOST IS NOT 'C' LANGUAGE      */+13120000
    DO                              /* PRELINK AND VALID LANHUAGE    */ 13130000
      /*-------------------------------------------------------------*/ 13140000
      /* DSNH760I: PRELINK OPTION INVALID WITH HOST LANGUAGE         */ 13150000
      /*-------------------------------------------------------------*/ 13160000
      WRITE DSNH760I PRELINK OPTION INVALID WITH HOST +                 13170000
                     LANGUAGE &HOST                                     13180000
      SET &ERROR = 8                /* REMEMBER THE ERROR            */ 13190000
    END                             /* OF ERROR SETTING              */ 13200000
  ELSE                              /* VALIDATION COMPLETE           */ 13210000
  /*-----------------------------------------------------------------*/ 13220000
  /* SUPPRESS DUAL LISTINGS FOR PLI AND ASM                          */ 13230000
  /*-----------------------------------------------------------------*/ 13240000
  IF (&PRINT = TERM AND &TERM = TERM)  /* SUPPRESS DUAL LISTINGS FOR */+13250000
      AND (&SUFF = PLI OR &SUFF= ASM)  /* PLI AND ASM                */+13260000
    THEN SET &TERM = NONE           /* TURN OFF THE TERM COPY        */ 13270000
  /*******************************************************************/ 13280000
  /*                                                                 */ 13290000
  /*                 PASS KEYWORD OPTION                             */ 13300000
  /*                                                                 */ 13310000
  /*  INDICATE THE NUMBER OF PASSES THE PRECOMPILER IS TO USE        */ 13320000
  /*                                                                 */ 13330000
  /*  PARMS:   1/ONE, 2/TWO                                          */ 13340000
  /*  DEFAULT: DEFAULT                                               */ 13350000
  /*           PLI - 1/ONE                                           */ 13360000
  /*           ASM - 2/TWO                                           */ 13370000
  /*           COBOL/FORTRAN - PASS N/A - FORCED 1/ONE               */ 13380000
  /*******************************************************************/ 13390000
  IF &SUBSTR(1,&PASS) = D THEN      /* SYNTAX CHECK PASS KEYWORD     */+13400000
    SET &PASS = DEFAULT             /* BE SURE KEYWORD IS EXACT      */ 13410000
  ELSE                              /* CHECK OTHER PASS KEYWORDS     */+13420000
    IF &SUBSTR(1,&PASS) = O OR      /* IF PASS IS O OR ONE           */+13430000
       &SUBSTR(1,&PASS) = 1 THEN    /* IF PASS IS 1                  */+13440000
      SET &PASS = ONE               /* BE SURE KEYWORD IS EXACT      */ 13450000
      ELSE                          /* CHECK ASM PASS                */+13460000
        IF &SUBSTR(1,&PASS) = T OR  /* IF PASS IS TWO                */+13470000
           &SUBSTR(1,&PASS) = 2 THEN   /* IF PASS IS TWO             */+13480000
          SET &PASS = TWO           /* BE SURE KEYWORD IS EXACT      */ 13490000
        ELSE                        /* THIS IS AN ERROR              */+13500000
          DO                        /* ISSUE THE ERROR MESSAGE       */ 13510000
            /*-------------------------------------------------------*/ 13520000
            /* DSNH751I: ERROR IN PASS VALUE SPECIFIED               */ 13530000
            /*-------------------------------------------------------*/ 13540000
            SET &ERROR = 8          /* REMEMBER THE ERROR            */ 13550000
            WRITE &M751 PASS VALUE &PASS                                13560000
          END                       /* OF ERROR SETTING              */ 13570000
  /*******************************************************************/ 13580000
  /*                                                                 */ 13590000
  /*                 LOPTION KEYWORD OPTION                          */ 13600000
  /*                                                                 */ 13610000
  /*  DEFINE LIST OF LINKEDIT OPTIONS                                */ 13620000
  /*                                                                 */ 13630000
  /*  PARMS:   OS/VS LINKAGE EDITOR AND LOADER                       */ 13640000
  /*  DEFAULT: NONE                                                  */ 13650000
  /*******************************************************************/ 13660000
  IF &NRSTR(&LOPTION) = NONE THEN   /* SYNTAX CHECK LOPTION KEYWORD  */-13670000
    SET &LOPTION =                  /* REMOVE ALL TEXT               */ 13680000
  /*******************************************************************/ 13690000
  /*                                                                 */ 13700000
  /*                 POPTION KEYWORD OPTION                          */ 13710000
  /*                                                                 */ 13720000
  /*  DEFINE LIST OF PRE-LINKEDIT OPTIONS                            */ 13730000
  /*                                                                 */ 13740000
  /*  PARMS:   DEFINED BY 'C' COMPILER LANGUAGE                      */ 13750000
  /*  DEFAULT: NONE                                                  */ 13760000
  /*******************************************************************/ 13770000
  IF &POPTION = NONE THEN               /* IF POPTION IS NONE        */+13780000
    SET &POPTION =                      /* REMOVE ALL TEXT           */ 13790000
  ELSE                                  /* POPTION SPECIFIED         */+13800000
    IF &SUBSTR(1,&POPTION) = &STR(') THEN /* QUOTED STRING ?         */+13810000
      SET &POPTION = &STR(&SUBSTR(2:&LENGTH(&POPTION)-1,&POPTION))      13820000
  /*******************************************************************/ 13830000
  /*                                                                 */ 13840000
  /*                 FLAG KEYWORD OPTION                             */ 13850000
  /*                                                                 */ 13860000
  /*  INDICATE MESSAGES TO BE DISPLAYED                              */ 13870000
  /*                                                                 */ 13880000
  /*  PARMS:   I - INFORMATIONAL (INCLUDES W, E AND C)               */ 13890000
  /*           W - WARNING, ERROR, AND SEVERE ERROR                  */ 13900000
  /*           E - ERROR, AND SEVERE ERROR                           */ 13910000
  /*           S - SEVERE ERROR                                      */ 13920000
  /*  DEFAULT: I                                                     */ 13930000
  /*******************************************************************/ 13940000
  IF &FLAG ^= I AND                 /* IF FLAG ISN'T INFORMATION     */+13950000
     &FLAG ^= W AND                 /* IF FLAG ISN'T WARNING         */+13960000
     &FLAG ^= E AND                 /* IF FLAG ISN'T ERROR           */+13970000
     &FLAG ^= S THEN                /* IF FLAG ISN'T SEVERE          */+13980000
    DO                              /* ISSUE THE ERROR MESSAGE       */ 13990000
      /*-------------------------------------------------------------*/ 14000000
      /* DSNH751I: ERROR IN FLAG VALUE SPECIFIED                     */ 14010000
      /*-------------------------------------------------------------*/ 14020000
      SET &ERROR = 8                /* REMEMBER THE ERROR            */ 14030000
      WRITE &M751 FLAG VALUE &FLAG                                      14040000
    END                             /* OF ERROR SETTING              */ 14050000
  SET &FLAGB = &FLAG                /* SET UP THE BIND FLAG          */ 14060000
  IF &FLAG = S THEN                 /* IF FLAG IS SEVERE             */+14070000
    SET &FLAGB = E                  /* SET UP THE BIND FLAG          */ 14080000
  /*******************************************************************/ 14090000
  /*                                                                 */ 14100000
  /*                 INPUT KEYWORD OPTION                            */ 14110000
  /*                                                                 */ 14120000
  /*  SPECIFY DATA SET NAME THAT CONTAINS HOST LANGUAGE SOURCE       */ 14130000
  /*                                                                 */ 14140000
  /*  PARMS:   DATA SET NAME(MEMBER)                                 */ 14150000
  /*  DEFAULT: REQUIRED                                              */ 14160000
  /*******************************************************************/ 14170000
  DO WHILE &INPUT = NONE OR &INPUT =   /* GET INPUT PARM; IS REQUIRED*/ 14180000
    /*---------------------------------------------------------------*/ 14190000
    /* DSNH752I: INPUT DATA SET NAME IS MISSING                      */ 14200000
    /*---------------------------------------------------------------*/ 14210000
    WRITE DSNH752I INPUT DATA SET NAME IS MISSING OR NONE               14220000
    IF &ERROR LT &RCTERM THEN       /* IF THERE IS NO OTHER ERROR    */+14230000
      DO                            /* PROMPT FOR A NAME             */ 14240000
        /*-----------------------------------------------------------*/ 14250000
        /* DSNH753I: ENTER INPUT DATA SET NAME                       */ 14260000
        /*-----------------------------------------------------------*/ 14270000
        WRITE DSNH753I ENTER INPUT DATA SET NAME                        14280000
        READ &INPUT                 /* GET THE ANSWER                */ 14290000
      END                           /* OF PROMPTING FOR A NAME       */ 14300000
    ELSE SET &INPUT = ERROR         /* END THE LOOP ANYWAY           */ 14310000
  END                                                                   14320000
  /*******************************************************************/ 14330000
  /*                                                                 */ 14340000
  /*                 OUTNAME KEYWORD OPTION                          */ 14350000
  /*                                                                 */ 14360000
  /*  SPECIFY PREFIX FOR INTERMEDIATE DATA SET NAMES                 */ 14370000
  /*                                                                 */ 14380000
  /*  PARMS:   STRING                                                */ 14390000
  /*  DEFAULT: TEMP                                                  */ 14400000
  /*******************************************************************/ 14410000
  SET &J = 1                        /* INIT THE INDEX                */ 14420000
  DO WHILE &J LE &LENGTH(&STR(&OUTNAME))  /* LOOK AT INPUT           */+14430000
     AND &ERROR = 0                       /* AND NO ERROR YET        */ 14440000
    /*---------------------------------------------------------------*/ 14450000
    /* INSURE NAME CONTAINS NO SPECIAL CHARACTERS                    */ 14460000
    /*---------------------------------------------------------------*/ 14470000
    IF &SUBSTR(&J,&OUTNAME) NE &STR(.) AND   /* PERIOD IS OK         */+14480000
      &SUBSTR(&J,&OUTNAME) NE &STR($) AND    /* DOLLAR IS OK         */+14490000
      &SUBSTR(&J,&OUTNAME) NE &STR(#) AND    /* POUND IS OK          */+14500000
      &SUBSTR(&J,&OUTNAME) NE &STR(@) AND    /* AT SIGN IS OK        */+14510000
      &SUBSTR(&J,&OUTNAME) < &STR(A) THEN    /* OTHERWISE NOT        */+14520000
      DO                                     /* YES, NOTE THE END    */ 14530000
        /*-----------------------------------------------------------*/ 14540000
        /* DSNH754I: OUTNAME MUST NOT CONTAIN SPECIAL CHARACTERS     */ 14550000
        /*-----------------------------------------------------------*/ 14560000
        SET &ERROR = 8                       /* YES, NOTE THE ERROR  */ 14570000
        SET &TEMP = &STR(MUST NOT CONTAIN SPECIAL CHARACTERS)           14580000
        WRITE DSNH754I DSNH OUTNAME PARAMETER &OUTNAME &TEMP            14590000
      END                                 /* YES, NOTE THE END       */ 14600000
    SET &J = &J + 1                       /* BUMP THE SUBSCRIPT      */ 14610000
  END                                     /* START OF MEMBER IS SET  */ 14620000
  /*-----------------------------------------------------------------*/ 14630000
  /* DETERMINE IF OUTNAME WILL CAUSE INPUT DATA SET NAME TO BE       */ 14640000
  /* OVERWRITTEN, OR DELETED. IF INPUT DATA SET NAME ENCLOSED IN     */ 14650000
  /* APOSTROPHIES, THEN USER MAY HAVE INCLUDED USERID PREFIX         */ 14660000
  /* AS DATA SET QUALIFIER.                                  @BA49303*/ 14670000
  /*-----------------------------------------------------------------*/ 14680000
  SET &OUCHK = &STR(&SYSPREF..&OUTNAME) /* USERID PREFIX TO OUTNAME  */ 14690000
  IF &SUBSTR(1,&INPUT) NE &STR(') THEN /* INPUT NOT ENCLOSED APOSTS  */+14700000
    SET &INCHK = &STR(&SYSPREF..&INPUT) /* USERID PREFIX TO INPUT    */ 14710000
  ELSE                                 /* INPUT NOT ENCLOSED APOSTS  */+14720000
    SET &INCHK = &SUBSTR(2:&LENGTH(&STR(&INPUT))-1,&INPUT)              14730000
  IF &SYSINDEX(&OUCHK,&STR(&INCHK)) = 1 THEN   +                        14740000
    IF &LENGTH(&STR(&INCHK)) EQ &LENGTH(&STR(&OUCHK)) OR +              14750000
       &SYSINDEX(&OUCHK&STR(.),&STR(&INCHK)) = 1 THEN +                 14760000
      DO                                                                14770000
        /*-----------------------------------------------------------*/ 14780000
        /* DSNH755I: OUTNAME MUST NOT BEGIN THE SAME AS INPUT NAME   */ 14790000
        /*-----------------------------------------------------------*/ 14800000
        SET &ERROR = 8               /* YES, NOTE THE ERROR          */ 14810000
        SET &TEMP = &STR(DSNH755I OUTNAME PARAMETER &OUCHK)             14820000
        WRITE &TEMP MUST NOT BEGIN THE SAME AS INPUT &INCHK             14830000
      END                                                               14840000
  /*******************************************************************/ 14850000
  /*                                                                 */ 14860000
  /*                 PRINT KEYWORD OPTION                            */ 14870000
  /*                                                                 */ 14880000
  /*  INDICATES WHERE TO SEND PRINTED OUTPUT                         */ 14890000
  /*                                                                 */ 14900000
  /*  PARMS:   NONE   - OMITS PRINTED OUTPUT                         */ 14910000
  /*           TERM   - SENDS OUTPUT TO TERMINAL                     */ 14920000
  /*           LEAVE  - SENDS OUTPUT TO SPECIFIED SYSPRINT DATA SET  */ 14930000
  /*           DSNAME - SPECIFIES THE DATA SET TO BE USED FOR OUTPUT */ 14940000
  /*  DEFAULT: NONE                                                  */ 14950000
  /*******************************************************************/ 14960000
  SET &J = 1                              /* INIT THE INDEX          */ 14970000
  DO WHILE &J LE &LENGTH(&STR(&PRINT))    /* LOOK AT PRINT           */+14980000
     AND &ERROR = 0                       /* FIND AN ERROR           */ 14990000
    /*---------------------------------------------------------------*/ 15000000
    /*  INSURE PRINT DSNAME CONTAINS NO SPECIAL CHARACTERS           */ 15010000
    /*---------------------------------------------------------------*/ 15020000
    IF &SUBSTR(&J,&PRINT) NE &STR(.) AND  /* PERIOD IS OK            */+15030000
      &SUBSTR(&J,&PRINT) NE &STR($) AND   /* DOLLAR IS OK            */+15040000
      &SUBSTR(&J,&PRINT) NE &STR(#) AND   /* POUND IS OK             */+15050000
      &SUBSTR(&J,&PRINT) NE &STR(@) AND   /* AT SIGN IS OK           */+15060000
      &SUBSTR(&J,&PRINT) < &STR(A) THEN   /* OTHERWISE NOT           */+15070000
      DO                                  /* YES, NOTE THE END       */ 15080000
        /*-----------------------------------------------------------*/ 15090000
        /* DSNH756I: PRINT NAME MUST NOT CONTAIN SPECIAL CHARACTERS  */ 15100000
        /*-----------------------------------------------------------*/ 15110000
        SET &ERROR = 8                    /* YES, NOTE THE ERROR     */ 15120000
        SET &TEMP1= &STR(DSNH PRINT PARAMETER)                          15130000
        SET &TEMP2= &STR(MUST NOT CONTAIN SPECIAL CHARACTERS)           15140000
        WRITE DSNH756I &TEMP1 &PRINT &TEMP2                             15150000
      END                                 /* YES, NOTE THE END       */ 15160000
    SET &J = &J + 1                       /* BUMP THE SUBSCRIPT      */ 15170000
  END                                     /* LOOK AT PRINT NAME      */ 15180000
  /*******************************************************************/ 15190000
  /*                                                                 */ 15200000
  /*               EXAMINE INPUT SOURCE DATA SET NAME                */ 15210000
  /*                                                                 */ 15220000
  /* CHECK FOR APOSTROPHES, SUFFIX, AND MEMBER NAME SPECIFIED        */ 15230000
  /*                                                                 */ 15240000
  /* IF NAME NOT ENCLOSED IN APOSTROPHIES, AND SUFFIX SPECIFIED,     */ 15250000
  /* AND SUFFIX NOT ALREADY APPENDED, THEN ADD SUFFIX TO DATA SET:   */ 15260000
  /*                                                                 */ 15270000
  /* - DATA-SET-NAME.SUFFIX                                          */ 15280000
  /* - DATA-SET-NAME.SUFFIX(MEMBER)                                  */ 15290000
  /*******************************************************************/ 15300000
  SET &PRECIN = &INPUT                 /* INPUT FOR PRECOMPILER      */ 15310000
                                          /* BEGIN CHANGES - @BA49303*/ 15320000
  SET &DONE = 0                           /* FLAG FOR FINDING PAREN  */ 15330000
  SET &RPAR = &STR())                                                   15340000
  SET &LPAR = &STR((                                                    15350000
  SET &J = &SYSINDEX(&LPAR,&SYSNSUB(1,&INPUT))                          15360000
  SET &JEND = &SYSINDEX(&RPAR,&SYSNSUB(1,&INPUT))                       15370000
  IF (&J > 0 AND &JEND = 0) OR            /* LEFT PAREN AND NO RIGHT */+15380000
     (&J = 0 AND &JEND > 0) THEN          /* NO LEFT PAREN BUT RIGHT */+15390000
     DO                                   /* SETUP DSNH750I ERROR MSG*/ 15400000
        /*-----------------------------------------------------------*/ 15410000
        /*  DSNH750I: INVALID DATA SET NAME (MEMBER)                 */ 15420000
        /*-----------------------------------------------------------*/ 15430000
        SET &ERROR = 8                    /* NOTE THE ERROR          */ 15440000
        WRITE DSNH750I INVALID DATA SET: INPUT &INPUT                   15450000
     END                                  /* DSNH750I COMPLETE       */ 15460000
  IF (&J > 0 AND &JEND > 0) THEN          /* LEFT PAR AND RIGHT PAR  */+15470000
     SET &DONE = 1                        /* SET MEMBER SWITCH       */+15480000
                                          /* END   CHANGES - @BA49303*/ 15490000
  /*-----------------------------------------------------------------*/ 15500000
  /*  OBTAIN MEMBER NAME FOR DATA SET                                */ 15510000
  /*-----------------------------------------------------------------*/ 15520000
  IF &DONE = 1 THEN                    /* SET UP THE MEMBER          */+15530000
    DO                                 /* BOTH INPUT AND OUTPUT      */ 15540000
      /*-------------------------------------------------------------*/ 15550000
      /*  MEMBER NAME ENCLOSED IN PARENS: DATA SET.(MEMBER)          */ 15560000
      /*  CHECK FOR APOSTROPHIED DATA SET NAME AND SUFFIX            */ 15570000
      /*-------------------------------------------------------------*/ 15580000
      SET &MEMBER = &SUBSTR(&J+1:&JEND-1,&INPUT)   /* SET MEMBER     */ 15590000
      IF &SUBSTR(1,&INPUT) NE &STR(') AND          /* IF NO APOSTS   */+15600000
        &SUFFIX EQ YES THEN            /* AND WE ARE TO SUFFIX NAME  */+15610000
        DO                             /* THEN SUFFIX IT             */ 15620000
         /*----------------------------------------------------------*/ 15630000
         /*  ADD SUFFIX: DATA SET.SUFFIX(MEMBER)                     */ 15640000
         /*----------------------------------------------------------*/ 15650000
         IF &J LE &LENGTH(&STR(&SUFF)) +1 THEN     /* TOO SHORT      */+15660000
           SET &PRECIN = &SUBSTR(1:&J-1,&INPUT).&SUFF(&MEMBER)          15670000
         ELSE                          /* WE CAN COMPARE NAMES       */+15680000
           IF &SUBSTR(&J-&LENGTH(&STR(&SUFF))-1:&J-1,&INPUT)   +        15690000
              NE &STR(.)&SUFF THEN     /* NOT .SUFF ALREADY          */+15700000
             SET &PRECIN = &SUBSTR(1:&J-1,&INPUT).&SUFF(&MEMBER)        15710000
        END                            /* THEN SUFFIX IT             */ 15720000
    END                                /* OF MEMBER NAME SUPPLIED    */ 15730000
  ELSE                                 /* MEMBER NAME NOT SUPPLIED   */+15740000
    DO                                 /* BUILD A MEMBER NAME        */ 15750000
      /*-------------------------------------------------------------*/ 15760000
      /*  CHECK FOR APOSTROPHIED DATA SET NAME AND SUFFIX            */ 15770000
      /*-------------------------------------------------------------*/ 15780000
      IF &SUBSTR(1,&INPUT) NE &STR(') AND /* NOT APOST NAME          */+15790000
        &SUFFIX = YES THEN             /* AND WE SHOULD SUFFIX NAME  */+15800000
        DO                             /* ADD .SUFF TO THE NAME      */ 15810000
          /*---------------------------------------------------------*/ 15820000
          /*  DATA SET NAME NOT ENCLOSED IN APOSTROPHIES             */ 15830000
          /*  ADD SUFFIX: DATA SET.SUFFIX                            */ 15840000
          /*---------------------------------------------------------*/ 15850000
          IF &LENGTH(&STR(&INPUT)) LE &LENGTH(&STR(&SUFF)) THEN        +15860000
            SET &PRECIN = &INPUT..&SUFF   /* JUST ADD .SUFF          */ 15870000
          ELSE                            /* CHECK NAME FOR .SUFF    */+15880000
            IF &SUBSTR(&LENGTH(&STR(&INPUT))-                          +15890000
              &LENGTH(&STR(&SUFF)):&LENGTH(&STR(&INPUT)),&INPUT)       +15900000
              NE &STR(.)&SUFF THEN        /* NOT .SUFF NOW           */+15910000
              SET &PRECIN = &INPUT..&SUFF /* ADD .SUFF      */          15920000
        END                               /* ADD .SUFF TO THE NAME   */ 15930000
      /*-------------------------------------------------------------*/ 15940000
      /* INSURE MEMBER NAME LENGTH NOT GREATER THAN MAXIMUM          */ 15950000
      /*-------------------------------------------------------------*/ 15960000
      SET &INLEN = &LENGTH(&STR(&INPUT))  /* LENGTH OF INPUT         */ 15970000
      IF &INLEN > 8 THEN SET &INLEN = 8   /* MAX LEN MEMBER          */ 15980000
      SET &K = 1                          /* START OF MEMBER         */ 15990000
      IF &SUBSTR(1,&INPUT) = &STR(') THEN /* APOST DSNAME?           */+16000000
        DO                                /* START OF MEMBER SEARCH  */ 16010000
          /*---------------------------------------------------------*/ 16020000
          /*  SCAN FOR PERIOD (.) IN APOSTROPHIED DATA SET NAME      */ 16030000
          /*---------------------------------------------------------*/ 16040000
          SET &K = 2                      /* DEFAULT, NOT FOUND      */ 16050000
          SET &J = 2                      /* START OF PERIOD SEARCH  */ 16060000
          SET &DONE = 0                   /* FLAG PERIOD SEARCH      */ 16070000
                                    /* TRY SKIP PAST FIRST QUALIFIER */ 16080000
          DO WHILE &J LT &LENGTH(&STR(&INPUT))  /* IN INPUT          */+16090000
            AND &J-&K LE &INLEN AND             /* LOOK FOR A PERIOD */+16100000
            &DONE = 0                           /* UNTIL FOUND OR END*/ 16110000
            /*-------------------------------------------------------*/ 16120000
            /*  SAVE LOCATION OF PERIOD (.) IN DATA SET NAME         */ 16130000
            /*-------------------------------------------------------*/ 16140000
            IF '&SUBSTR(&J,&INPUT)'='&STR(.)' THEN    /* PERIOD?     */+16150000
              SET &DONE = 1         /* END OF PERIOD SEARCH          */ 16160000
            ELSE                    /* NOT A PERIOD                  */+16170000
              SET &J = &J + 1       /* KEEP LOOKING                  */ 16180000
          END                       /* OF PERIOD SEARCH              */ 16190000
          IF &DONE = 1 THEN         /* PERIOD WAS FOUND              */+16200000
            SET &K = &J + 1         /* GET PAST 1ST QUAL             */ 16210000
        END                         /* OF MEMBER SEARCH              */ 16220000
      /*-------------------------------------------------------------*/ 16230000
      /*  CONTINUE SCAN FOR DATA SET MEMBER NAME                     */ 16240000
      /*-------------------------------------------------------------*/ 16250000
      SET &J = &K                   /* MAX LEN FOR MEMBER            */ 16260000
      SET &DONE = 0                 /* NOTE AT END MEMBER            */ 16270000
      DO WHILE &J LE &LENGTH(&STR(&INPUT))      /* LOOK AT INPUT     */+16280000
         AND &J-&K LT &INLEN        /* FOR MAXIMUM MEMBER LENGTH     */+16290000
         AND &DONE = 0              /* AND NOT AT END                */ 16300000
         /*----------------------------------------------------------*/ 16310000
         /*  SCAN FOR BEGINNING OF DATA SET MEMBER NAME: . ' (       */ 16320000
         /*----------------------------------------------------------*/ 16330000
         IF  '&SUBSTR(&J,&INPUT)' = '&STR(.)'   /* AVOID PERIOD      */+16340000
           OR &SUBSTR(&J,&INPUT)  = &STR(')     /* AVOID APOST       */+16350000
           OR '&SUBSTR(&J,&INPUT)' = '('        /* AVOID PAREN       */+16360000
           THEN SET &DONE = 1       /* END OF THE SEARCH             */ 16370000
         ELSE                       /* OTHERWISE                     */+16380000
           SET &J = &J + 1          /* BUMP THE SUBSCRIPT            */ 16390000
      END                           /* LENGTH OF MEMBER SET          */ 16400000
      /*-------------------------------------------------------------*/ 16410000
      /* OBTAIN DATA SET MEMBER NAME                                 */ 16420000
      /* COULD BE (8) LEFTMOST CHARACTERS OF DATA SET NAME           */ 16430000
      /*-------------------------------------------------------------*/ 16440000
      SET &MEMBER = &SUBSTR(&K:&J-1,&INPUT)  /* SET UP MEMBER        */ 16450000
    END                                      /* BUILD A MEMBER NAME  */ 16460000
  /*******************************************************************/ 16470000
  /*                                                                 */ 16480000
  /*                 PLAN KEYWORD OPTION                             */ 16490000
  /*                                                                 */ 16500000
  /*  IDENTIFIES THE APPLICATION NAME FOR BIND                       */ 16510000
  /*                                                                 */ 16520000
  /*  PARMS:   PLAN-NAME                                             */ 16530000
  /*  DEFAULT: FIRST OF THESE CHOICES AVAILABLE:                     */ 16540000
  /*           - MEMBER NAME OF INPUT DATA SET                       */ 16550000
  /*           - LEFTMOST QUALIFIER OF THE INPUT DATA SET            */ 16560000
  /*******************************************************************/ 16570000
  IF &PLAN    = DEFAULT THEN           /* WE USE DEFAULT OUTPUT      */+16580000
    SET &PLAN = &MEMBER                /* SAME AS THE MEMBER NAME    */ 16590000
  ELSE                                 /* PLAN WAS SET BY INVOKER    */+16600000
    IF &LENGTH(&STR(&PLAN)) > 8 THEN   /* CHECK THE LENGTH           */+16610000
      DO                               /* TOO BIG, IT'S AN ERROR     */ 16620000
        /*-----------------------------------------------------------*/ 16630000
        /* DSNH757I: ERROR IN PLAN NAME LENGTH                       */ 16640000
        /*-----------------------------------------------------------*/ 16650000
        SET &ERROR = 8                 /* NOTE THE ERROR             */ 16660000
        WRITE DSNH757I ERROR IN PLAN NAME LENGTH &PLAN                  16670000
      END                              /* OF ERROR PROCESSING        */ 16680000
  /*******************************************************************/ 16690000
  /*                                                                 */ 16700000
  /*                 LOAD KEYWORD OPTION                             */ 16710000
  /*                                                                 */ 16720000
  /*  IDENTIFIES THE DATA SET NAME TO CONTAIN THE OUTPUT FROM THE    */ 16730000
  /*  LINKAGE EDITOR (LOAD MODULE)                                   */ 16740000
  /*                                                                 */ 16750000
  /*  PARMS:   DATA SET NAME                                         */ 16760000
  /*  DEFAULT: RUNLIB.LOAD                                           */ 16770000
  /*           MEMBER EITHER SPECIFIED, OR DEFAULTED TO MEMBER NAME  */ 16780000
  /*           FROM INPUT DATA SET                                   */ 16790000
  /*******************************************************************/ 16800000
  SET &LOADIT = &LOAD                  /* LOAD MODULE TO USE         */ 16810000
                                          /* BEGIN CHANGES - @BA49303*/ 16820000
  SET &DONE = 0                           /* FLAG FOR FINDING PAREN  */ 16830000
  SET &RPAR = &STR())                                                   16840000
  SET &LPAR = &STR((                                                    16850000
  SET &J = &SYSINDEX(&LPAR,&SYSNSUB(1,&LOAD))                           16860000
  SET &JEND = &SYSINDEX(&RPAR,&SYSNSUB(1,&LOAD))                        16870000
  IF (&J > 0 AND &JEND = 0) OR            /* LEFT PAREN AND NO RIGHT */+16880000
     (&J = 0 AND &JEND > 0) THEN          /* NO LEFT PAREN BUT RIGHT */+16890000
     DO                                   /* SETUP DSNH750I ERROR MSG*/ 16900000
        /*-----------------------------------------------------------*/ 16910000
        /*  DSNH750I: INVALID DATA SET NAME (MEMBER)                 */ 16920000
        /*-----------------------------------------------------------*/ 16930000
        SET &ERROR = 8                    /* NOTE THE ERROR          */ 16940000
        WRITE DSNH750I INVALID DATA SET: LOAD &LOAD                     16950000
     END                                  /* DSNH750I COMPLETE       */ 16960000
  IF (&J > 0 AND &JEND > 0) THEN          /* LEFT PAR AND RIGHT PAR  */+16970000
     SET &DONE = 1                        /* SET MEMBER SWITCH       */+16980000
                                          /* END   CHANGES - @BA49303*/ 16990000
  IF &DONE = 1 THEN                    /* SET UP THE MEMBER          */+17000000
      SET &LMEM = &SUBSTR(&J+1:&JEND-1,&LOAD)   /* SET MEMBER        */ 17010000
  ELSE                                 /* BUILD A MEMBER NAME        */+17020000
    DO                                 /* BUILD A MEMBER NAME        */ 17030000
      /*-------------------------------------------------------------*/ 17040000
      /* DEFAULT LOAD MODULE NAME TO INPUT DATA SET MEMBER NAME      */ 17050000
      /*-------------------------------------------------------------*/ 17060000
      SET &LOADIT = &LOAD.(&MEMBER)    /* BUILD LINK NAME            */ 17070000
      IF &SUBSTR(1,&LOAD) = &STR(') THEN  /* IF LOAD APOSTED, ADD MEM*/+17080000
        SET &LOADIT=&SUBSTR(1:&LENGTH(&LOAD)-1,&LOAD)(&MEMBER)&STR(')   17090000
      SET &LMEM = &MEMBER              /* USE STANDARD MEMBER NAME   */ 17100000
    END                                /* BUILD A MEMBER NAME        */ 17110000
  /*******************************************************************/ 17120000
  /*                                                                 */ 17130000
  /*                 DBRMLIB KEYWORD OPTION                          */ 17140000
  /*                                                                 */ 17150000
  /*  IDENTIFIES THE DATA SET TO CONTAIN THE DBRM MEMBER             */ 17160000
  /*                                                                 */ 17170000
  /*  PARMS:   DATA SET NAME                                         */ 17180000
  /*  DEFAULT: OUTNAME-KEYWORD-STRING.DBRMLIB                        */ 17190000
  /*******************************************************************/ 17200000
  SET &DBRMINP = &DBRMLIB              /* SAVE THE NAME AS INPUT     */ 17210000
  IF &DBRMLIB = DEFAULT THEN           /* DEFAULT THE DBRMLIB        */+17220000
    DO                                 /* ALLOCATE THE DBRMLIB       */ 17230000
      /*-------------------------------------------------------------*/ 17240000
      /* SET DBRMLIB TO DEFAULT: OUTNAME.DBRMLIB                     */ 17250000
      /*-------------------------------------------------------------*/ 17260000
      SET &DBRMLIB  = &OUTNAME..DBRM   /* LIBRARY NAME               */ 17270000
      SET &DBRMNAME = &OUTNAME..DBRM(&MEMBER)   /* BUILD NAME        */ 17280000
      SET &DMEM = &MEMBER              /* USE THE STD MEMBER NAME    */ 17290000
    END                                /* ALLOCATE THE DBRMLIB       */ 17300000
  ELSE                                 /* USE PROVIDED DBRMLIB       */+17310000
    DO                                 /* BUILD NAME, ALLOC          */ 17320000
      /*-------------------------------------------------------------*/ 17330000
      /* DETERMINE IF MEMBER NAME WAS SPECIFIED IN DATA SET NAME     */ 17340000
      /*-------------------------------------------------------------*/ 17350000
                                          /* BEGIN CHANGES - @BA49303*/ 17360000
      SET &DONE = 0                       /* FLAG FOR FINDING PAREN  */ 17370000
      SET &RPAR = &STR())                                               17380000
      SET &LPAR = &STR((                                                17390000
      SET &J = &SYSINDEX(&LPAR,&SYSNSUB(1,&DBRMLIB))                    17400000
      SET &JEND = &SYSINDEX(&RPAR,&SYSNSUB(1,&DBRMLIB))                 17410000
      IF (&J > 0 AND &JEND = 0) OR        /* LEFT PAREN AND NO RIGHT */+17420000
         (&J = 0 AND &JEND > 0) THEN      /* NO LEFT PAREN BUT RIGHT */+17430000
         DO                               /* SETUP DSNH750I ERROR MSG*/ 17440000
        /*-----------------------------------------------------------*/ 17450000
        /*  DSNH750I: INVALID DATA SET NAME (MEMBER)                 */ 17460000
        /*-----------------------------------------------------------*/ 17470000
            SET &ERROR = 8                /* NOTE THE ERROR          */ 17480000
            WRITE DSNH750I INVALID DATA SET: DBRMLIB &DBRMLIB           17490000
         END                              /* DSNH750I COMPLETE       */ 17500000
      IF (&J > 0 AND &JEND > 0) THEN      /* LEFT PAR AND RIGHT PAR  */+17510000
          SET &DONE = 1                   /* SET MEMBER SWITCH       */+17520000
                                          /* END   CHANGES - @BA49303*/ 17530000
      IF &DONE = 1 THEN                /* MEMBER IS ALREADY PRESENT  */+17540000
        DO                             /* REMEMBER FOR BIND @BA31086 */ 17550000
          /*---------------------------------------------------------*/ 17560000
          /* USE DBRMLIB MEMBER NAME SPECIFIED IN DATA SET           */ 17570000
          /*---------------------------------------------------------*/ 17580000
          SET &DMEM = &SUBSTR(&J+1:&JEND-1,&DBRMLIB)  /* BIND        */ 17590000
          SET &DBRMNAME=&DBRMLIB       /* JUST USE DBRMLIB NAME      */ 17600000
        END                            /* MEMBER NOTED      @BA31086 */ 17610000
      ELSE                             /* NO MEMBER, ADD ONE         */+17620000
        DO                             /* ADD MEMBER NAME TO DBRMLIB */ 17630000
          /*---------------------------------------------------------*/ 17640000
          /* DEFAULT DBRM MEMBER NAME TO INPUT DATA SET MEMBER NAME  */ 17650000
          /*---------------------------------------------------------*/ 17660000
          SET &DBRMNAME=&DBRMLIB.(&MEMBER)      /* NO APOST PRESENT  */ 17670000
          IF &SUBSTR(1,&DBRMLIB)=&STR(') THEN   /* YES APOST PRESENT */+17680000
            DO                                                          17690000
              /*-----------------------------------------------------*/ 17700000
              /* DBRMLIB DATA SET ENCLOSED IN APOSTROPHIES           */ 17710000
              /*-----------------------------------------------------*/ 17720000
              SET &DBRMNAME =                   /* BEGIN THE NAME    */+17730000
                &SUBSTR(1:&LENGTH(&STR(&DBRMLIB))-1,&DBRMLIB)           17740000
              SET &DBRMNAME = &DBRMNAME(&MEMBER)&STR(') /* FINISH IT */ 17750000
            END                                                         17760000
          SET &DMEM = &MEMBER                   /* USE THE STD MEMBER*/ 17770000
        END                                     /* ADD MEMBER NAME   */ 17780000
    END                                         /* BUILD NAME, ALLOC */ 17790000
    /*---------------------------------------------------------------*/ 17800000
    /* DSNH740I: INITIALIZE DSNH... WALL MESSAGES TO INDICATE STATUS */ 17810000
    /*---------------------------------------------------------------*/ 17820000
    SET &WALL1 = &STR(DSNH740I =======)                                 17830000
    SET &WALL2 = &STR(FINISHED, RC = )                                  17840000
    SET &WALLB = &STR(=============================)                    17850000
    SET &WALL3 = &STR(=============================)                    17860000
    SET &WALL4 = &STR(=============================)                    17870000
    SET &WALLF = NO                    /* WALL FLAG, NO PRINT NAME   */ 17880000
    IF &PRINT NE NONE AND &PRINT NE LEAVE AND &PRINT NE TERM THEN +     17890000
       DO                              /* SET UP A LISTING NAME      */ 17900000
         /*----------------------------------------------------------*/ 17910000
         /* SETUP WALL MESSAGES FOR SPECIFIED OUTPUT DATA SET        */ 17920000
         /*----------------------------------------------------------*/ 17930000
         SET &WALLF = YES              /* INDICATE THE WALL HAS DSN  */ 17940000
         SET &WALL3 = &STR(======= LISTING IN &PRINT)                   17950000
       END                             /* SET UP A LISTING NAME      */ 17960000
  /*******************************************************************/ 17970000
  /*                                                                 */ 17980000
  /*                 WORKUNIT KEYWORD OPTION                         */ 17990000
  /*                                                                 */ 18000000
  /*  INDICATES THE TYPE OF DEVICE TO USE FOR TEMPORARY AND          */ 18010000
  /*  INTERMEDIATE DATA SETS                                         */ 18020000
  /*                                                                 */ 18030000
  /*  PARMS:   UNIT-TYPE                                             */ 18040000
  /*  DEFAULT: UADS UNIT NAME FOR THE CURRENT TSO USER, OR           */ 18050000
  /*           ANY ELIGIBLE DEVICE IN BATCH MODE                     */ 18060000
  /*******************************************************************/ 18070000
    SET &WORKU =                                                        18080000
    IF &WORKUNIT NE DEFAULT THEN          /* NO A DEFAULT WORK SPACE */+18090000
       SET &WORKU = &STR(UNIT(&WORKUNIT)) /* SET UNIT PARM           */ 18100000
    SET &DSNHC = &STR(%DSNHC )                                          18110000
    /*****************************************************************/ 18120000
    /*                                                               */ 18130000
    /*               ADD APOSTROPHIES (') TO KEYWORDS                */ 18140000
    /*                                                               */ 18150000
    /* ADD APOSTROPHES ON ANY KEYWORD PARAMETERS THAT MUST CONTINUE  */ 18160000
    /* TO BE ENCLOSED IN APOSTROPHIES THROUGH CALLS TO OTHER TSO OR  */ 18170000
    /* CLIST FUNCTIONS                                               */ 18180000
    /*                                                               */ 18190000
    /*****************************************************************/ 18200000
    IF &SUBSTR(1,&CLIB) EQ &STR(') THEN      /* IF 1 APOST           */+18210000
       SET &QCLIB = &STR(''&CLIB'')          /* ADD APOSTROPHES      */ 18220000
    ELSE SET &QCLIB = &STR(&CLIB)            /* OR JUST ASSIGN VALUE */ 18230000
    IF &SUBSTR(1,&COPTION) EQ &STR(') THEN   /* IF 1 APOST           */+18240000
       SET &QCOPTION = &STR(''&COPTION'')    /* ADD APOSTROPHES      */ 18250000
    ELSE SET &QCOPTION = &STR('&COPTION')    /* ASSIGN VALUE         */ 18260000
    IF &SUBSTR(1,&C2LIB) EQ &STR(') THEN     /* IF 1 APOST           */+18270000
       SET &QC2LIB = &STR(''&C2LIB'')        /* ADD APOSTROPHES      */ 18280000
    ELSE SET &QC2LIB = &STR(&C2LIB)          /* JUST ASSIGN VALUE    */ 18290000
    IF &SUBSTR(1,&C3LIB) EQ &STR(') THEN     /* IF 1 APOST           */+18300000
       SET &QC3LIB = &STR(''&C3LIB'')        /* ADD APOSTROPHES      */ 18310000
    ELSE SET &QC3LIB = &STR(&C3LIB)          /* JUST ASSIGN VALUE    */ 18320000
    IF &SUBSTR(1,&C4LIB) EQ &STR(') THEN     /* IF 1 APOST           */+18330000
       SET &QC4LIB = &STR(''&C4LIB'')        /* ADD APOSTROPHES      */ 18340000
    ELSE SET &QC4LIB = &STR(&C4LIB)          /* JUST ASSIGN VALUE    */ 18350000
    IF &SUBSTR(1,&PRECIN) EQ &STR(') THEN    /* IF 1 APOST           */+18360000
       SET &QPRECIN = &STR(''&PRECIN'')      /* ADD APOSTROPHES      */ 18370000
    ELSE SET &QPRECIN = &STR(&PRECIN)        /* ASSIGN VALUE         */ 18380000
    IF &SUBSTR(1,&TERM) EQ &STR(') THEN      /* IF 1 APOST           */+18390000
       SET &QTERM = &STR(''&TERM'')          /* ADD APOSTROPHES      */ 18400000
      ELSE SET &QTERM = &STR(&TERM)          /* ASSIGN VALUE         */ 18410000
    IF &SUBSTR(1,&ASMHLIB) EQ &STR(') THEN   /* IF 1 APOST           */+18420000
       SET &QASMHL = &STR(''&ASMHLIB'')      /* ADD APOSTROPHES      */ 18430000
      ELSE SET &QASMHL = &STR(&ASMHLIB)      /* ASSIGN VALUE         */ 18440000
    IF &SUBSTR(1,&ASMHLOAD) EQ &STR(') THEN  /* IF 1 APOST           */+18450000
       SET &QASMH = &STR(''&ASMHLOAD'')      /* ADD APOSTROPHES      */ 18460000
      ELSE SET &QASMH = &STR(&ASMHLOAD)      /* ASSIGN VALUE         */ 18470000
    IF &SUBSTR(1,&ASMLIB) EQ &STR(') THEN    /* IF 1 APOST           */+18480000
       SET &QASML = &STR(''&ASMLIB'')        /* ADD APOSTROPHES      */ 18490000
      ELSE SET &QASML = &STR(&ASMLIB)        /* ASSIGN VALUE         */ 18500000
    IF &SUBSTR(1,&ASMLOAD) EQ &STR(') THEN   /* IF 1 APOST           */+18510000
       SET &QASM = &STR(''&ASMLOAD'')        /* ADD APOSTROPHES      */ 18520000
      ELSE SET &QASM = &STR(&ASMLOAD)        /* ASSIGN VALUE         */ 18530000
    IF &SUBSTR(1,&COBLOAD) EQ &STR(') THEN   /* IF 1 APOST           */+18540000
       SET &QCOB = &STR(''&COBLOAD'')        /* ADD APOSTROPHES      */ 18550000
      ELSE SET &QCOB = &STR(&COBLOAD)        /* ASSIGN VALUE         */ 18560000
    IF &SUBSTR(1,&COB2LOAD) EQ &STR(') THEN  /* IF 1 APOST           */+18570000
       SET &QCOB2 = &STR(''&COB2LOAD'')      /* ADD APOSTROPHES      */ 18580000
      ELSE SET &QCOB2 = &STR(&COB2LOAD)      /* ASSIGN VALUE         */ 18590000
    IF &SUBSTR(1,&FORTLOAD) EQ &STR(') THEN  /* IF 1 APOST           */+18600000
       SET &QFORT = &STR(''&FORTLOAD'')      /* ADD APOSTROPHES      */ 18610000
      ELSE SET &QFORT = &STR(&FORTLOAD)      /* ASSIGN VALUE         */ 18620000
    IF &SUBSTR(1,&PLILOAD) EQ &STR(') THEN   /* IF 1 APOST           */+18630000
       SET &QPLI = &STR(''&PLILOAD'')        /* ADD APOSTROPHES      */ 18640000
      ELSE SET &QPLI = &STR(&PLILOAD)        /* ASSIGN VALUE         */ 18650000
    IF &SUBSTR(1,&CCLOAD) EQ &STR(') THEN    /* IF 1 APOST           */+18660000
       SET &QCLOAD = &STR(''&CCLOAD'')       /* ADD APOSTROPHES      */ 18670000
      ELSE SET &QCLOAD = &STR(&CCLOAD)       /* ASSIGN VALUE         */ 18680000
    IF &SUBSTR(1,&CCMSGS) EQ &STR(') THEN    /* IF 1 APOST           */+18690000
       SET &QCMSGS = &STR(''&CCMSGS'')       /* ADD APOSTROPHES      */ 18700000
      ELSE SET &QCMSGS = &STR(&CCMSGS)       /* ASSIGN VALUE         */ 18710000
    IF &SUBSTR(1,&CCSLIB) EQ &STR(') THEN    /* IF 1 APOST           */+18720000
       SET &QCSLIB = &STR(''&CCSLIB'')       /* ADD APOSTROPHES      */ 18730000
      ELSE SET &QCSLIB = &STR(&CCSLIB)       /* ASSIGN VALUE         */ 18740000
    /*****************************************************************/ 18750000
    /*                                                               */ 18760000
    /*               VALIDATE DSNH KEYWORD PARAMETERS                */ 18770000
    /*                                                               */ 18780000
    /* VALIDATE DSNH KEYWORD PARAMETERS FOR CONSISTENCY, AND DO      */ 18790000
    /* NOT PERMIT THE BYPASSING OF INTERMEDIATE STEPS IN THE         */ 18800000
    /* DSNH PROCESS                                                  */ 18810000
    /*                                                               */ 18820000
    /*****************************************************************/ 18830000
    IF (&MACRO EQ YES AND &SUFF = PLI AND                              +18840000
        &PRECOMP EQ NO)  THEN                                          +18850000
       DO                           /* CORRECT THE SITUATION         */ 18860000
        /*-----------------------------------------------------------*/ 18870000
        /* DSNH741I: PRECOMP(NO) IMPLIES COMPILE CANNOT BE RUN       */ 18880000
        /*-----------------------------------------------------------*/ 18890000
         SET &COMPILE = NO          /* DON'T ALLOW THE COMPILE       */ 18900000
         IF &ERROR LT 4 THEN SET &ERROR = 4     /* WARNING FLAG      */ 18910000
         WRITE DSNH741I PRECOMP(NO) IMPLIES THAT COMPILE CANNOT BE RUN  18920000
       END                                                              18930000
    IF (&PRECOMP EQ YES AND &CICSXLAT = NO AND                 +        18940000
        &COMPILE EQ YES AND &ATTACH = CICS    )  THEN          +        18950000
       DO                           /* CORRECT THE SITUATION         */ 18960000
         /*----------------------------------------------------------*/ 18970000
         /* DSNH741I: CICSXLAT(NO) IMPLIES COMPILE CANNOT BE RUN     */ 18980000
         /*----------------------------------------------------------*/ 18990000
         SET &COMPILE = NO          /* DON'T ALLOW THE COMPILE       */ 19000000
         IF &ERROR LT 4 THEN SET &ERROR = 4  /* WARNING FLAG         */ 19010000
         WRITE DSNH741I CICSXLAT(NO) IMPLIES THAT COMPILE CANNOT BE RUN 19020000
       END                                                              19030000
    IF (&PRECOMP EQ YES AND &COMPILE = NO AND                          +19040000
        &LINK EQ YES) THEN                                             +19050000
       DO                           /* CORRECT THE SITUATION         */ 19060000
         /*----------------------------------------------------------*/ 19070000
         /* DSNH741I: COMPILE(NO) IMPLIES LINK CANNOT BE RUN         */ 19080000
         /*----------------------------------------------------------*/ 19090000
         SET &LINK = NO             /* DON'T ALLOW THE LINK          */ 19100000
         IF &ERROR LT 4 THEN SET &ERROR = 4  /* WARNING FLAG         */ 19110000
         WRITE DSNH741I COMPILE(NO) IMPLIES THAT LINK CANNOT BE RUN     19120000
       END                          /* CORRECT THE SITUATION         */ 19130000
    IF (&PRECOMP EQ YES AND &COMPILE = NO AND                          +19140000
        &RUN EQ YES) THEN                                              +19150000
       DO                           /* CORRECT THE SITUATION         */ 19160000
         /*----------------------------------------------------------*/ 19170000
         /* DSNH741I: COMPILE(NO) IMPLIES RUN CANNOT BE DONE         */ 19180000
         /*----------------------------------------------------------*/ 19190000
         SET &RUN  = NO             /* DON'T ALLOW THE RUN           */ 19200000
         IF &ERROR LT 4 THEN SET &ERROR = 4  /* WARNING FLAG         */ 19210000
         WRITE DSNH741I COMPILE(NO) IMPLIES THAT RUN CANNOT BE DONE     19220000
       END                                                              19230000
    IF (&COMPILE EQ YES AND &LINK = NO AND                             +19240000
        &RUN EQ YES) THEN                                              +19250000
       DO                           /* CORRECT THE SITUATION         */ 19260000
         /*----------------------------------------------------------*/ 19270000
         /* DSNH741I: LINK(NO) IMPLIES RUN CANNOT BE DONE            */ 19280000
         /*----------------------------------------------------------*/ 19290000
         SET &RUN  = NO             /* DON'T ALLOW THE RUN           */ 19300000
         IF &ERROR LT 4 THEN SET &ERROR = 4  /* WARNING FLAG         */ 19310000
         WRITE DSNH741I LINK(NO) IMPLIES THAT RUN CANNOT BE DONE        19320000
       END                                                              19330000
    IF (&PRECOMP EQ YES AND &BIND = NO AND                             +19340000
        &RUN EQ YES) THEN                                              +19350000
       DO                           /* CORRECT THE SITUATION         */ 19360000
         /*----------------------------------------------------------*/ 19370000
         /* DSNH741I: BIND(NO) IMPLIES RUN CANNOT BE DONE            */ 19380000
         /*----------------------------------------------------------*/ 19390000
         SET &RUN  = NO             /* DON'T ALLOW THE RUN           */ 19400000
         IF &ERROR LT 4 THEN SET &ERROR = 4  /* WARNING FLAG         */ 19410000
         WRITE DSNH741I BIND(NO) IMPLIES THAT RUN CANNOT BE DONE        19420000
       END                                                              19430000
  IF &ERROR GE &RCTERM THEN         /* IF MAX RET CODE EXCEEDED      */+19440000
    DO                              /* ISSUE MESSAGE AND EXIT        */ 19450000
      /*-------------------------------------------------------------*/ 19460000
      /* DSNH759I: CLIST TERMINATING DUE TO ERRORS                   */ 19470000
      /*-------------------------------------------------------------*/ 19480000
      WRITE &M759 CLIST CHECKING RC = &ERROR                            19490000
      EXIT CODE(&ERROR)             /* EXIT FROM CLIST, SYNTAX       */ 19500000
    END                             /* OF ERROR HANDLING             */ 19510000
  /*******************************************************************/ 19520000
  /*  SAVE USERS ENVIRONMENT OF SYSPRINT, SYSTERM, SYSIN     @BA48566*/ 19530000
  /*******************************************************************/ 19540000
  LISTDSI SYSPRINT FILE             /*                       @BA48566*/ 19550000
  SET &SAVECC = &LASTCC             /*                       @BA48566*/ 19560000
  IF (&SAVECC = 0) AND (&SYSDSORG = PS) THEN /*              @BA48566*/+19570000
    SET &SAVEPRINT = &SYSDSNAME     /*                       @BA48566*/ 19580000
  LISTDSI SYSTERM FILE              /*                       @BA48566*/ 19590000
  SET &SAVECC = &LASTCC             /*                       @BA48566*/ 19600000
  IF (&SAVECC = 0) AND (&SYSDSORG = PS) THEN /*              @BA48566*/+19610000
    SET &SAVETERM = &SYSDSNAME      /*                       @BA48566*/ 19620000
  LISTDSI SYSIN FILE                /*                       @BA48566*/ 19630000
  SET &SAVECC = &LASTCC             /*                       @BA48566*/ 19640000
  IF (&SAVECC = 0) AND (&SYSDSORG = PS) THEN /*              @BA48566*/+19650000
    SET &SAVESYSIN = &SYSDSNAME     /*                       @BA48566*/ 19660000
  /*******************************************************************/ 19670000
  /*                                                                 */ 19680000
  /*                 INVOKE PLI MACRO PROCESSOR                      */ 19690000
  /*                                                                 */ 19700000
  /* INVOKED ROUTINE: DSNHC                                          */ 19710000
  /*******************************************************************/ 19720000
  IF &SUFF = PLI AND                /* PLI LANGUAGE                  */+19730000
     &MACRO = YES THEN              /* MACRO PASS REQUESTED          */+19740000
    DO                              /* INVOKE PLI PREPROCESSOR       */ 19750000
      /*-------------------------------------------------------------*/ 19760000
      /*          INVOKE PLI MACRO PROCESSOR                         */ 19770000
      /*-------------------------------------------------------------*/ 19780000
      &DSNHC ATTACH(&ATTACH)  CLIB(&QCLIB)                             +19790000
           CONTROL(&CONTROL) COPTION(&QCOPTION) C2LIB(&QC2LIB)         +19800000
           C3LIB(&QC3LIB) C4LIB(&QC4LIB) DELIMIT(&DELIMIT)             +19810000
           FLAG(&FLAG) HOST(&HOST) LINECOUNT(&LINECOUNT)               +19820000
           MACIN(&QPRECIN) OUTNAME(&OUTNAME) PRINT(&PRINT)             +19830000
           PSPACE(&PSPACE) PSECSPAC(&PSECSPAC) SOURCE(&SOURCE)         +19840000
           SPACEUN(&SPACEUN) TERM(&QTERM) WORKUNIT(&WORKUNIT)          +19850000
           WSECSPAC(&WSECSPAC) WSPACE(&WSPACE) XREF(&XREF)             +19860000
           ASMHLIB(&QASMHL) ASMHLOAD(&QASMH) ASMLIB(&QASML)            +19870000
           ASMLOAD(&QASM) COBLOAD(&QCOB) COB2LOAD(&QCOB2)              +19880000
           FORTLOAD(&QFORT) PLILOAD(&QPLI)                             +19890000
           CCSLIB(&QCSLIB) CCLOAD(&QCLOAD) CCMSGS(&QCMSGS)              19900000
      SET &DERROR = &LASTCC               /* IF DSNHC WORKED @BA18169*/ 19910000
      IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* SAVE RETCODE */ 19920000
      IF &WALLF = YES THEN                /* IF PRINT NAME TO BE ADDE*/+19930000
        SET &WALL4 = &STR(.LIST &WALLB)   /* PRINT DATA SET          */ 19940000
      /*-------------------------------------------------------------*/ 19950000
      /* DSNH740I: PLI MACRO PASS WALL MESSAGE                       */ 19960000
      /*-------------------------------------------------------------*/ 19970000
      WRITE &WALL1 PLI MACRO PASS &WALL2 &DERROR &WALL3.&WALL4          19980000
      IF &ERROR GE &RCTERM THEN           /* IF MAX RET CODE EXCEEDED*/+19990000
        DO                                                              20000000
          /*---------------------------------------------------------*/ 20010000
          /* DSNH759I: PLI MACRO PASS ERROR                          */ 20020000
          /*---------------------------------------------------------*/ 20030000
          WRITE &M759 PLI MACRO PASS RC = &ERROR                        20040000
          EXIT CODE(&ERROR)               /* EXIT FROM CLIST         */ 20050000
        END                               /* OF ERROR HANDLING       */ 20060000
      SET &PRECIN = &OUTNAME..DECK        /* INPUT FOR PRECOMPILER   */ 20070000
    END                                   /* OF PLI MACRO PHASE      */ 20080000
  /*******************************************************************/ 20090000
  /*                                                                 */ 20100000
  /*                 SETUP FOR PRECOMPILER INVOCATION                */ 20110000
  /*                                                                 */ 20120000
  /*******************************************************************/ 20130000
  IF &PRECOMP = YES THEN         /* PRECOMPILE REQUESTED             */+20140000
    DO                           /* INVOKE PRECOMPILER               */ 20150000
      /*-------------------------------------------------------------*/ 20160000
      /* DETERMINE HOST LANGUAGE, SETUP SPECIFIED KEYWORD VARIABLES, */ 20170000
      /* ALLOCATE REQUIRED DATA SETS                                 */ 20180000
      /*-------------------------------------------------------------*/ 20190000
      IF &HOST = COB2            /* PC HOST PARM MUST BE: FORTRAN,   */+20200000
        THEN SET &TEMPSUFF = COB2   /* COB2, COBOL, PLI OR ASM       */ 20210000
        ELSE SET &TEMPSUFF = &SUFF                                      20220000
      SET &OPT = HOST(&TEMPSUFF) &DATE &DECIMAL +                       20230000
                 FLAG(&FLAG) &GRAPHIC LINECOUNT(&LINECOUNT) &TIME       20240000
      IF &DELIMIT NE DEFAULT THEN SET &OPT = &OPT &DELIMIT              20250000
      IF &SQLDELIM NE DEFAULT THEN SET &OPT = &OPT &SQLDELIM            20260000
      IF &STDSQL NE NO THEN SET &OPT = &OPT STDSQL(&STDSQL)             20270000
      IF &NOFOR  NE NO THEN SET &OPT = &OPT &NOFOR                      20280000
      IF &PASS NE DEFAULT THEN SET &OPT = &OPT &PASS.PASS               20290000
      IF &OPTIONS = NO THEN SET &OPT = &OPT NOOPTIONS                   20300000
      IF &SOURCE NE NO THEN SET &OPT = &OPT SOURCE                      20310000
      IF &XREF NE NO THEN SET &OPT = &OPT XREF                          20320000
      ALLOCATE DDNAME(SYSIN) SHR DSNAME(&PRECIN) REUSE                  20330000
      IF &DBRMINP = DEFAULT THEN /* DEFAULT THE DBRMLIB              */+20340000
        DO                       /* ALLOCATE THE DBRMLIB             */ 20350000
          /*---------------------------------------------------------*/ 20360000
          /* DBRMLIB: ALLOCATE DBRMLIB DATA SET                      */ 20370000
          /*---------------------------------------------------------*/ 20380000
          IF &CONTROL = NONE THEN   /* IF NO MESSAGES USED           */+20390000
            CONTROL NOMSG        /* AVOID DELETE MESSAGES            */ 20400000
          DELETE &OUTNAME..DBRM  /* DELETE THE DATA SET              */ 20410000
          FREE DDNAME(DBRMLIB) DSN(&OUTNAME..DBRM)    /* FREE        */ 20420000
          CONTROL MSG            /* ALLOW MESSAGES AGAIN             */ 20430000
          ALLOCATE DD(DBRMLIB) NEW SPACE(&WSPACE &WSECSPAC) +           20440000
            &SPACEUN DSNAME(&DBRMNAME) DIR(5) REUSE &WORKU              20450000
        END                      /* ALLOCATE THE DBRMLIB             */ 20460000
      ELSE                       /* USE PROVIDED DBRMLIB             */+20470000
        ALLOCATE DDNAME(DBRMLIB) DSNAME(&DBRMNAME) OLD REUSE            20480000
      /*-------------------------------------------------------------*/ 20490000
      /* ALLOCATE INTERMEDIATE DATA SETS                             */ 20500000
      /*-------------------------------------------------------------*/ 20510000
      SET &PONL =                                                       20520000
      IF &PLIB NE NONE THEN SET &PONL = &STR(&PLIB)                     20530000
      IF &P2LIB NE NONE THEN SET &PONL = &STR(&PONL &P2LIB)             20540000
      IF &P3LIB NE NONE THEN SET &PONL = &STR(&PONL &P3LIB)             20550000
      IF &P4LIB NE NONE THEN SET &PONL = &STR(&PONL &P4LIB)             20560000
      IF &PONL NE      THEN      /* IF ALLOCATION REQUESTED          */+20570000
        ALLOCATE DDNAME(SYSLIB) DSNAME(&PONL) BLKSIZE(32720) SHR REUSE  20580001
      ALLOCATE DDNAME(SYSUT1) NEW SPACE(&WSPACE &WSECSPAC)             +20590000
         REUSE &SPACEUN &WORKU   /* ALLOCATE SYSUT1 ALWAYS           */ 20600000
      IF &SUFF = COBOL OR        /* SYSUT2 IS FOR COBOL              */+20610000
         &SUFF = FORTRAN THEN    /* OR  FORTRAN                      */+20620000
          ALLOCATE DD(SYSUT2) NEW SPACE(&WSPACE &WSECSPAC) +            20630000
             REUSE &SPACEUN &WORKU  /* ALLOCATE SYSUT2               */ 20640000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES USED              */+20650000
        CONTROL NOMSG            /* AVOID FREE, DEL MESSAGES         */ 20660000
      SET &PCSUFF = &SUFF        /* SET THE NORMAL SUFFIX            */ 20670000
      IF &ATTACH   = CICS THEN   /* CICS XLATE USEFUL THEN           */+20680000
         SET &PCSUFF = CICSIN    /* NOTE THIS IS CICS INPUT          */ 20690000
      FREE DDNAME(SYSCIN) ATTR(DSNHF80)   /* FREE DDNAME,ATTR        */ 20700000
      DELETE &OUTNAME..&PCSUFF   /* DELETE OUTPUT DATA SET           */ 20710000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 20720000
      /*-------------------------------------------------------------*/ 20730000
      /* DSNHF80: DEFINE DCB ATTRIBUTES                              */ 20740000
      /*-------------------------------------------------------------*/ 20750000
      ATTRIB DSNHF80 LRECL(80) RECFM(F B) BLKSIZE(4000)  /* SETUP DCB*/ 20760000
      ALLOCATE DDNAME(SYSCIN) NEW &SPACEUN &WORKU +                     20770000
         SPACE(&WSPACE &WSECSPAC) REUSE           +                     20780000
         USING(DSNHF80) DSNAME(&OUTNAME..&PCSUFF)        /* PC OUTPUT*/ 20790000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES USED              */+20800000
        CONTROL NOMSG            /* AVOID FREE MESSAGES              */ 20810000
      IF &PRINT NE LEAVE THEN    /* IF ALLOCATION REQUESTED          */+20820000
        FREE DDNAME(SYSPRINT)    /* FREE THE DDNAME                  */ 20830000
      IF &TERM  NE LEAVE THEN    /* IF ALLOCATION REQUESTED          */+20840000
        FREE DDNAME(SYSTERM)     /* FREE THE DDNAME                  */ 20850000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 20860000
      IF &PRINT NE NONE AND      /* IF ALLOCATION REQUESTED          */+20870000
         &PRINT NE LEAVE THEN    /* IF ALLOCATION REQUESTED          */+20880000
        DO                       /* ALLOCATE DATA SET (OLD)          */ 20890000
          /*---------------------------------------------------------*/ 20900000
          /* ALLOCATE SYSPRINT TO TERMINAL                           */ 20910000
          /*---------------------------------------------------------*/ 20920000
          IF &PRINT = TERM THEN  /* IF TERM OUTPUT RQSTD             */+20930000
            ALLOCATE DDNAME(SYSPRINT) DA(*)  /* DO TERM ALLOC        */ 20940000
          ELSE                   /* ALLOCATE A DATA SET              */+20950000
            DO                   /* DELETE, THEN ALLOC DATA          */ 20960000
              /*-----------------------------------------------------*/ 20970000
              /* ALLOCATE SYSPRINT TO DATA SET                       */ 20980000
              /*-----------------------------------------------------*/ 20990000
              IF &CONTROL = NONE THEN  /* IF NO MESSAGES             */+21000000
                CONTROL NOMSG          /* AVOID DELETE MESSAGES      */ 21010000
              DELETE &PRINT..PCLIST    /* DELETE OUTPUT DATA SET     */ 21020000
              FREE DDNAME(SYSPRINT)    /* FREE DDNAME                */ 21030000
              CONTROL MSG              /* ALLOW MESSAGES AGAIN       */ 21040000
              ALLOCATE DDNAME(SYSPRINT) DSNAME(&PRINT..PCLIST) NEW +    21050000
                SPACE(&PSPACE &PSECSPAC) &SPACEUN &WORKU                21060000
            END                        /* DELETE, THEN ALLOC DATA    */ 21070000
        END                            /* SYSPRINT IS ALLOCATED      */ 21080000
      IF &PRINT = NONE   THEN          /* IF NO PRINT   REQUESTED    */+21090000
        ALLOCATE DDNAME(SYSPRINT) DUMMY   /* SET DUMMY FOR IT        */ 21100000
      IF &TERM NE NONE AND             /* IF ALLOCATION REQUESTED    */+21110000
         &TERM  NE LEAVE THEN          /* IF ALLOCATION REQUESTED    */+21120000
        DO                             /* ALLOCATE A DATA SET (OLD)  */ 21130000
          /*---------------------------------------------------------*/ 21140000
          /* ALLOCATE SYSTERM TO TERMINAL                            */ 21150000
          /*---------------------------------------------------------*/ 21160000
          IF &TERM = TERM THEN         /* IF TERMINAL OUTPUT REQUESTD*/+21170000
            ALLOCATE DDNAME(SYSTERM) DA(*)   /* DO TERM ALLOC        */ 21180000
          ELSE                         /* ALLOCATE A DATA SET        */+21190000
            DO                         /* DELETE, THEN ALLOC DATA    */ 21200000
              /*-----------------------------------------------------*/ 21210000
              /* ALLOCATE SYSTERM TO DATA SET                        */ 21220000
              /*-----------------------------------------------------*/ 21230000
              IF &CONTROL = NONE THEN  /* IF NO MESSAGES             */+21240000
                CONTROL NOMSG          /* AVOID DELETE MESSAGES      */ 21250000
              DELETE &TERM..PCTERM     /* DELETE OUTPUT DATA SET     */ 21260000
              FREE DDNAME(SYSTERM)     /* FREE DDNAME                */ 21270000
              CONTROL MSG              /* ALLOW MESSAGES AGAIN       */ 21280000
              ALLOCATE DDNAME(SYSTERM) DSNAME(&TERM..PCTERM)   +        21290000
                SPACE(&PSPACE &PSECSPAC) &SPACEUN NEW &WORKU            21300000
            END                        /* DELETE, THEN ALLOC DATA    */ 21310000
        END                            /* SYSTERM IS ALLOCATED       */ 21320000
      IF &TERM = NONE THEN             /* IF NO TERM OUTPUT  @BA25449*/+21330000
        ALLOCATE DDNAME(SYSTERM) DUMMY /* SET DUMMY FOR IT   @BA25449*/ 21340000
  /*******************************************************************/ 21350000
  /*                                                                 */ 21360000
  /*                 INVOKE DB2 PRECOMPILER                          */ 21370000
  /*                                                                 */ 21380000
  /* INVOKED ROUTINE: PCLOAD KEYWORD                                 */ 21390000
  /* DEFAULT: DSNHPC                                                 */ 21400000
  /*******************************************************************/ 21410000
      CALL &PCLOAD  '&OPT'       /* CALL PRECOMPILER PROGRAM         */ 21420000
      SET &DERROR = &LASTCC      /* IF PRECOMPILE WORKED     @BA18169*/ 21430000
      IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* SAVE RETCODE */ 21440000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES WANTED            */+21450000
        CONTROL NOMSG            /* AVOID FREE MESSAGES              */ 21460000
      /*-------------------------------------------------------------*/ 21470000
      /* FREE INTERMEDIATE DATA SETS                                 */ 21480000
      /*-------------------------------------------------------------*/ 21490000
      FREE DDNAME(SYSIN,DBRMLIB,SYSUT1,SYSCIN)                         +21500000
           ATTR(DSNHF80)         /* FREE ATTRIBUTE           @BA25449*/ 21510000
      IF &PONL NE      THEN      /* IF ALLOCATION REQUESTED          */+21520000
        FREE DDNAME(SYSLIB)      /* FREE THE SYSLIB                  */ 21530000
      IF &SUFF = COBOL OR        /* SYSUT2 IS FOR COBOL              */+21540000
         &SUFF = FORTRAN THEN    /* OR  FORTRAN                      */+21550000
        FREE DDNAME(SYSUT2)      /* FREE THE SYSUT2 IF ALLOCATED     */ 21560000
      IF &TERM NE LEAVE THEN     /* IF SYSTERM IS A DATA SET         */+21570000
        FREE DDNAME(SYSTERM)     /* FREE FILE FOR REUSE              */ 21580000
      IF &PRINT NE LEAVE THEN    /* IF SYSPRINT IS A DATA SET        */+21590000
        FREE DDNAME(SYSPRINT)    /* FREE FILE FOR REUSE              */ 21600000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 21610000
      /*-------------------------------------------------------------*/ 21620000
      /* DSNH740I: PRECOMPILER PASS WALL MESSAGE                     */ 21630000
      /*-------------------------------------------------------------*/ 21640000
      IF &WALLF = YES THEN       /* IF PRINT NAME TO BE ADDED        */+21650000
        SET &WALL4 = &STR(.PCLIST &WALLB) /* PRINT DATA SET          */ 21660000
      WRITE &WALL1 PRECOMPILER &WALL2 &DERROR &WALL3.&WALL4             21670000
      IF &ERROR GE &RCTERM THEN  /* IF MAX RET CODE EXCEEDED         */+21680000
        DO                       /* EXIT THE CLIST, MESSAGE          */ 21690000
          /*---------------------------------------------------------*/ 21700000
          /* DSNH759I: PRECOMPILER ERROR                             */ 21710000
          /*---------------------------------------------------------*/ 21720000
          WRITE &M759 PRECOMPILER RC = &ERROR                           21730000
          EXIT CODE(&ERROR)      /* EXIT THE CLIST                   */ 21740000
        END                      /* OF ERROR PROCESSING              */ 21750000
    END                          /* INVOKE PRECOMPILER               */ 21760000
  /*******************************************************************/ 21770000
  /*                                                                 */ 21780000
  /*                 SETUP FOR CICS COMMAND TRANSLATION              */ 21790000
  /*                                                                 */ 21800000
  /*******************************************************************/ 21810000
  IF &CICSXLAT = YES AND         /* CICS XLATE REQUESTED             */+21820000
     &ATTACH   = CICS THEN       /* CICS XLATE USEFUL THEN           */+21830000
    DO                           /* DETERMINE CICS TRANSLATOR        */ 21840000
      /*-------------------------------------------------------------*/ 21850000
      /* DETERMINE HOST LANGUAGE, SETUP CORRESPONDING TRANSLATOR     */ 21860000
      /*-------------------------------------------------------------*/ 21870000
      IF &SUFF = PLI   THEN      /* THE LANGUAGE IS PL/I             */+21880000
         SET &CICSXLT = &STR('&CICSPRE..SDFHLOAD(DFHEPP1$)')            21890002
      IF &SUFF = ASM   THEN      /* HOST IS ASM OR ASMH              */+21900000
         SET &CICSXLT = &STR('&CICSPRE..SDFHLOAD(DFHEAP1$)')            21910002
      IF &SUFF = COBOL THEN      /* HOST IS COBOL OR COB2            */+21920000
         SET &CICSXLT = &STR('&CICSPRE..SDFHLOAD(DFHECP1$)')            21930002
                                 /* ALLOCATE SYSPUNCH (OUTPUT)       */ 21940000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES WANTED            */+21950000
        CONTROL NOMSG            /* AVOID FREE, DEL MESSAGES         */ 21960000
      FREE DDNAME(SYSPUNCH) ATTR(DSNHF80) /* FREE DDNAME,ATTR        */ 21970000
      DELETE &OUTNAME..&SUFF     /* DELETE OUTPUT DATA SET           */ 21980000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 21990000
      /*-------------------------------------------------------------*/ 22000000
      /* DSNHF80: DEFINE DCB ATTRIBUTES                              */ 22010000
      /*-------------------------------------------------------------*/ 22020000
      ATTRIB DSNHF80 LRECL(80) RECFM(F B) BLKSIZE(4000) /* SET UP DCB*/ 22030000
      /*-------------------------------------------------------------*/ 22040000
      /* ALLOCATE SYSPUNCH DATA SET                                  */ 22050000
      /*-------------------------------------------------------------*/ 22060000
      ALLOCATE DDNAME(SYSPUNCH) NEW &SPACEUN &WORKU                    +22070000
         SPACE(&WSPACE &WSECSPAC) REUSE                                +22080000
         USING(DSNHF80) DSNAME(&OUTNAME..&SUFF)         /* PC OUT    */ 22090000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES WANTED            */+22100000
        CONTROL NOMSG            /* AVOID FREE MESSAGES              */ 22110000
      IF &PRINT NE LEAVE THEN    /* IF ALLOCATION REQUESTED          */+22120000
        FREE DDNAME(SYSPRINT)    /* FREE THE DDNAME                  */ 22130000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 22140000
      IF &PRINT NE NONE AND      /* IF ALLOCATION REQUESTED          */+22150000
         &PRINT NE LEAVE THEN    /* IF ALLOCATION REQUESTED          */+22160000
        DO                       /* ALLOCATE DATA SET (OLD)          */ 22170000
          /*---------------------------------------------------------*/ 22180000
          /* ALLOCATE SYSPRINT TO TERMINAL                           */ 22190000
          /*---------------------------------------------------------*/ 22200000
          IF &PRINT = TERM THEN  /* IF TERM OUTPUT RQSTD             */+22210000
            ALLOCATE DDNAME(SYSPRINT) DA(*)  /* DO TERM ALLOC        */ 22220000
          ELSE                   /* ALLOCATE A DATA SET              */+22230000
            DO                   /* DELETE, THEN ALLOC DATA          */ 22240000
              /*-----------------------------------------------------*/ 22250000
              /* ALLOCATE SYSPRINT TO DATA SET                       */ 22260000
              /*-----------------------------------------------------*/ 22270000
              IF &CONTROL = NONE THEN  /* IF NO MESSAGES             */+22280000
                CONTROL NOMSG          /* AVOID DELETE MESSAGES      */ 22290000
              DELETE &PRINT..CXLIST    /* DELETE OUTPUT DATA SET     */ 22300000
              FREE DDNAME(SYSPRINT)    /* FREE DDNAME                */ 22310000
              FREE ATTR(DSNHFBA)       /* FREE ATTRIBUTE             */ 22320000
              CONTROL MSG              /* ALLOW MESSAGES AGAIN       */ 22330000
              /*-----------------------------------------------------*/ 22340000
              /* DSNHFBA: DEFINE DCB ATTRIBUTES                      */ 22350000
              /*-----------------------------------------------------*/ 22360000
              ATTR DSNHFBA RECFM(F B A) LRECL(121) BLKSIZE(3630)        22370000
              ALLOCATE DDNAME(SYSPRINT) DSNAME(&PRINT..CXLIST) NEW     +22380000
                SPACE(&PSPACE &PSECSPAC) &SPACEUN USING(DSNHFBA)   +    22390000
                &WORKU                           /* @BA04731*/          22400000
              FREE ATTR(DSNHFBA)       /* FREE ATTRIBUTE             */ 22410000
            END                        /* DELETE, THEN ALLOC DATA    */ 22420000
        END                            /* SYSPRINT IS ALLOCATED      */ 22430000
      IF &PRINT = NONE   THEN          /* IF NO PRINT REQUESTED      */+22440000
        ALLOCATE DDNAME(SYSPRINT) DUMMY   /* SET DUMMY FOR IT        */ 22450000
      IF &SUFF = ASM THEN              /* IF THIS IS ASM OR ASMH     */+22460000
         DO                            /* SET UP PARMS FOR ASM XLAT  */ 22470000
            /*-------------------------------------------------------*/ 22480000
            /* SETUP TRANSLATOR OPTION FOR ASM                       */ 22490000
            /*-------------------------------------------------------*/ 22500000
            SET &CXPARM = &STR(OPTIONS)                                 22510000
            IF &OPTIONS = NO THEN      /* IF OPTIONS ARE SET NO      */+22520000
               SET &CXPARM = &STR(NOOPTIONS)                            22530000
            IF &CICSOPT NE NONE THEN   /* IF PARMS WERE SET          */+22540000
               SET &CXPARM = &STR(&CXPARM,&CICSOPT)                     22550000
         END                           /* SET UP PARMS FOR ASM XLAT  */ 22560000
      IF &SUFF = COBOL THEN            /* IF THIS IS COB OR COB2     */+22570000
         DO                            /* SET UP PARMS FOR COB XLAT  */ 22580000
            /*-------------------------------------------------------*/ 22590000
            /* SETUP TRANSLATOR OPTION FOR COBOL                     */ 22600000
            /*-------------------------------------------------------*/ 22610000
            SET &CXPARM = &STR(OP,FLAG(&FLAG))                          22620000
            IF &OPTIONS = NO THEN      /* IF OPTIONS ARE SET NO      */+22630000
                SET &CXPARM = &STR(NOP,FLAG(&FLAG))                     22640000
            SET &CXPARM = &STR(&CXPARM,LC(&LINECOUNT))                  22650000
            IF &DELIMIT NE DEFAULT THEN   /* IF DELIM APOST OR QUOTE */+22660000
                SET &CXPARM = &STR(&CXPARM,&DELIMIT)                    22670000
            IF &SOURCE = NO THEN          /* IF SOURCE IS SET NO     */+22680000
                SET &CXPARM = &STR(&CXPARM,NOSOURCE)                    22690000
              ELSE                        /* IF SOURCE IS SET TO YES */+22700000
                SET &CXPARM = &STR(&CXPARM,SOURCE)                      22710000
            IF &HOST = COB2 THEN          /* IF COBOL2, TELL CICS    */+22720000
                SET &CXPARM = &STR(&CXPARM,COBOL2)                      22730000
            IF &CICSOPT NE NONE THEN      /* IF PARMS WERE SET       */+22740000
                SET &CXPARM = &STR(&CXPARM,&CICSOPT)                    22750000
         END                              /* SETUP PARMS FOR COB XLAT*/ 22760000
      IF &SUFF = PLI THEN                 /* IF THIS IS PLI          */+22770000
         DO                               /* SETUP PARMS FOR PLI XLAT*/ 22780000
            /*-------------------------------------------------------*/ 22790000
            /* SETUP TRANSLATOR OPTION FOR PLI                       */ 22800000
            /*-------------------------------------------------------*/ 22810000
            SET &CXPARM = &STR(OP,FLAG(&FLAG))                          22820000
            IF &OPTIONS = NO THEN         /* IF OPTIONS ARE SET NO   */+22830000
               SET &CXPARM = &STR(NOP,FLAG(&FLAG))                      22840000
            SET &CXPARM = &STR(&CXPARM,LC(&LINECOUNT))                  22850000
            IF &SOURCE = NO THEN          /* IF SOURCE IS SET NO     */+22860000
               SET &CXPARM = &STR(&CXPARM,NOSOURCE)                     22870000
            ELSE                          /* IF SOURCE IS SET TO YES */+22880000
               SET &CXPARM = &STR(&CXPARM,SOURCE)                       22890000
            IF &CICSOPT NE NONE THEN      /* IF PARMS WERE SET       */+22900000
               SET &CXPARM = &STR(&CXPARM,&CICSOPT)                     22910000
         END                              /* SETUP PARMS FOR PLI XLAT*/ 22920000
      /*-------------------------------------------------------------*/ 22930000
      /* ALLOCATE SYSIN DATA SET                                     */ 22940000
      /*-------------------------------------------------------------*/ 22950000
      ALLOCATE DDNAME(SYSIN) SHR REUSE                                 +22960000
               DSNAME(&OUTNAME..CICSIN)                                 22970000
  /*******************************************************************/ 22980000
  /*                                                                 */ 22990000
  /*                 INVOKE CICS COMMAND TRANSLATOR                  */ 23000000
  /*                                                                 */ 23010000
  /* INVOKED ROUTINE: BASED UPON HOST LANGUAGE:                      */ 23020000
  /*             PLI  - DFHEPP1$                                     */ 23030000
  /*             ASM  - DFHEAP1$                                     */ 23040000
  /*           COBOL  - DFHECP1$                                     */ 23050000
  /*******************************************************************/ 23060000
      CALL &CICSXLT '&CXPARM'                                           23070000
      SET &DERROR = &LASTCC      /* IF CICSXLT WORKED        @BA18169*/ 23080000
      IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* SAVE RETCODE */ 23090000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES                   */+23100000
        CONTROL NOMSG            /* AVOID FREE MESSAGES              */ 23110000
      FREE DDNAME(SYSIN,SYSPUNCH)                                      +23120000
           ATTR(DSNHF80)         /* FREE ATTRIBUTE           @BA25449*/ 23130000
      IF &PRINT NE LEAVE THEN    /* IF SYSPRINT IS A DATA SET        */+23140000
        FREE DDNAME(SYSPRINT)    /* FREE FILE FOR REUSE              */ 23150000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 23160000
      /*-------------------------------------------------------------*/ 23170000
      /* DSNH740I: CICSXLAT PASS WALL MESSAGE                        */ 23180000
      /*-------------------------------------------------------------*/ 23190000
      IF &WALLF = YES THEN       /* IF PRINT NAME TO BE ADDED        */+23200000
        SET &WALL4 = &STR(.CXLIST &WALLB) /* PRINT DATA SET          */ 23210000
      SET &WALLX =&STR(CICS COMMAND TRANSLATION)                        23220000
      WRITE &WALL1 &WALLX &WALL2 &DERROR &WALL3.&WALL4                  23230000
      IF &ERROR GE &RCTERM THEN  /* IF MAX RET CODE EXCEEDED         */+23240000
        DO                       /* EXIT THE CLIST, MESSAGE          */ 23250000
          /*---------------------------------------------------------*/ 23260000
          /* DSNH759I: CICSXLAT ERROR                                */ 23270000
          /*---------------------------------------------------------*/ 23280000
          WRITE &M759 &WALLX RC = &ERROR                                23290000
          EXIT CODE(&ERROR)      /* EXIT THE CLIST                   */ 23300000
        END                      /* OF ERROR PROCESSING              */ 23310000
    END                          /* INVOKE THE TRANSLATOR            */ 23320000
  SET &DSNTRC =                  /* DEFAULT TO NO TRACING            */ 23330000
  IF &SUBSTR(1,&CONTROL) EQ C OR /* TRACE IF DSNH TRACE IS           */+23340000
     &SUBSTR(1,&CONTROL) EQ S THEN  /* CONLIST OR SYMLIST            */+23350000
    SET &DSNTRC = &STR(TEST(123))   /* PARAMETER TO TRACE DSN        */ 23360000
  /*******************************************************************/ 23370000
  /*                                                                 */ 23380000
  /*                 INVOKE DB2 BIND SUBCOMMAND                      */ 23390000
  /*                                                                 */ 23400000
  /* INVOKED ROUTINES:                                               */ 23410000
  /*              DSN - COMMAND PROCESSOR:                           */ 23420000
  /*                    SYSTEM KEYWORD (SUBSYSTEM NAME)              */ 23430000
  /*                    CONTROL KEYWORD (CONTROL-OPTION)             */ 23440000
  /*             BIND - BIND SUBCOMMAND                              */ 23450000
  /*******************************************************************/ 23460000
  IF &BIND = YES THEN               /* IF BIND IS REQUESTED          */+23470000
    DO                              /* INVOKE BIND                   */ 23480000
      /*-------------------------------------------------------------*/ 23490000
      /* SETUP SPECIFIED KEYWORD LIBRARY VARIABLES                   */ 23500000
      /*-------------------------------------------------------------*/ 23510000
      SET &BCON =                   /* NO EXTRA LIBRARIES NOW        */ 23520000
      IF &BLIB NE NONE THEN         /* IF NOT THE NULL KEYWORD       */+23530000
         SET &BCON = &STR(&BLIB)    /* ADD THIS LIBRARY TO LIST      */ 23540000
      IF &B2LIB NE NONE THEN        /* IF NOT THE NULL KEYWORD       */+23550000
         SET &BCON = &STR(&BCON &B2LIB)   /* ADD LIB TO LIST         */ 23560000
      IF &B3LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23570000
         SET &BCON = &STR(&BCON &B3LIB)   /* ADD LIB TO LIST         */ 23580000
      IF &B4LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23590000
         SET &BCON = &STR(&BCON &B4LIB)   /* ADD LIB TO LIST         */ 23600000
      IF &B5LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23610000
         SET &BCON = &STR(&BCON &B5LIB)   /* ADD LIB TO LIST         */ 23620000
      IF &B6LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23630000
         SET &BCON = &STR(&BCON &B6LIB)   /* ADD LIB TO LIST         */ 23640000
      IF &B7LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23650000
         SET &BCON = &STR(&BCON &B7LIB)   /* ADD LIB TO LIST         */ 23660000
      IF &B8LIB NE NONE THEN              /* IF NOT THE NULL KEYWORD */+23670000
         SET &BCON = &STR(&BCON &B8LIB)   /* ADD LIB TO LIST         */ 23680000
      IF &BMEM = NONE THEN                /* NO EXTRA MEMBERS        */+23690000
         SET &BMEM =                      /* CLEAR IT                */ 23700000
      IF &OWNER = NONE                    /* SET UP OWNER PARAMETER  */+23710000
         THEN SET &BINDOWN = &STR()          /* CLEAR IT             */ 23720000
         ELSE SET &BINDOWN = OWNER(&OWNER)   /* SET IT               */ 23730000
      /*-------------------------------------------------------------*/ 23740000
      /* INVOKE DSN COMMAND PROCESSOR                                */ 23750000
      /*-------------------------------------------------------------*/ 23760000
      DSN SYSTEM(&SYSTEM) &DSNTRC         /* INVOKE DSN COMMAND      */ 23770000
      SET &DERROR = &LASTCC               /* IF DSN SUCCEEDED        */ 23780000
      IF &DERROR > &ERROR THEN            /* IF NEW ERROR IS LARGER  */+23790000
        SET &ERROR = &DERROR              /* NOTE THE MOST SEVERE ERR*/ 23800000
      IF &DERROR = 0 THEN                 /* IF DSN SUCCEEDED        */+23810000
        DO                                /* INVOKE  BIND SUBCOMMAND */ 23820000
          /*---------------------------------------------------------*/ 23830000
          /* INVOKE BIND SUBCOMMAND                                  */ 23840000
          /*---------------------------------------------------------*/ 23850000
          BIND PLAN(&PLAN) MEMBER(&DMEM &BMEM) EXPLAIN(&EXPLAIN) +      23860000
            VALIDATE(&VALIDATE) ISOLATION(&ISOLATION)            +      23870000
            ACTION(&ACTION) &RETAINKY FLAG(&FLAGB)               +      23880000
            ACQUIRE(&ACQUIRE) RELEASE(&RELEASE)                  +      23890000
            &BINDOWN &BDEFR &BNDEFR                              +      23900000
            LIBRARY(&DBRMLIB &BCON)    /* INVOKE BIND SUBCMD         */ 23910000
          DATA                         /* AVOID USING 'END' AS CLIST */ 23920000
          END                          /* OF DSN COMMAND             */ 23930000
          ENDDATA                      /* OF DATA BLOCK              */ 23940000
          SET &DERROR = &LASTCC        /* IF BIND WORKED     @BA18169*/ 23950000
          IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* RETCODE  */ 23960000
        END                            /* INVOKE THE BIND SUBCOMMAND */ 23970000
      IF &CONTROL = NONE THEN          /* IF NO MESSAGES             */+23980000
        CONTROL NOMSG                  /* AVOID FREE MESSAGES        */ 23990000
      /*-------------------------------------------------------------*/ 24000000
      /* DBRMLIB: FREE DBRMLIB DATA SET                              */ 24010000
      /*-------------------------------------------------------------*/ 24020000
      FREE DSNAME(&DBRMLIB)            /* FREE FILE FOR OTHERS       */ 24030000
      CONTROL MSG                      /* ALLOW MESSAGES AGAIN       */ 24040000
      /*-------------------------------------------------------------*/ 24050000
      /* DSNH740I: BIND PASS WALL MESSAGE                            */ 24060000
      /*-------------------------------------------------------------*/ 24070000
      WRITE &WALL1 BIND &WALL2 &DERROR &WALLB                           24080000
      IF &ERROR GE &RCTERM THEN        /* IF MAX RET CODE EXCEEDED   */+24090000
        DO                             /* ERROR MESSAGE, EXIT CLIST  */ 24100000
          /*---------------------------------------------------------*/ 24110000
          /* DSNH759I: BIND ERROR                                    */ 24120000
          /*---------------------------------------------------------*/ 24130000
          WRITE &M759 BIND RC = &ERROR                                  24140000
          EXIT CODE(&ERROR)            /* EXIT THE CLIST             */ 24150000
        END                            /* OF SEVERE ERROR HANDLING   */ 24160000
    END                                /* OF BIND INVOCATION         */ 24170000
  /*******************************************************************/ 24180000
  /*                                                                 */ 24190000
  /*                 INVOKE COMPILER OR ASSEMBLER                    */ 24200000
  /*                                                                 */ 24210000
  /* INVOKED ROUTINE: DSNHC                                          */ 24220000
  /*                                                                 */ 24230000
  /*******************************************************************/ 24240000
  IF &COMPILE = YES THEN               /* IF COMPILE IS REQUESTED    */+24250000
    DO                                 /* INVOKE DSNHC CLIST TO DO   */ 24260000
      /*-------------------------------------------------------------*/ 24270000
      /* INVOKE DSNHC CLIST TO COMPILE OR ASSEMBLE                   */ 24280000
      /*-------------------------------------------------------------*/ 24290000
      &DSNHC          ATT(&ATTACH)  CLIB(&QCLIB)               +        24300000
           CONTROL(&CONTROL) COPTION(&QCOPTION) C2LIB(&QC2LIB) +        24310000
           C3LIB(&QC3LIB) C4LIB(&QC4LIB) DELIMIT(&DELIMIT)     +        24320000
           FLAG(&FLAG) HOST(&HOST) LINECOUNT(&LINECOUNT)       +        24330000
           MACIN(NONE) OUTNAME(&OUTNAME) PRINT(&PRINT)         +        24340000
           PSPACE(&PSPACE) PSECSPAC(&PSECSPAC) SOURCE(&SOURCE) +        24350000
           SPACEUN(&SPACEUN) TERM(&QTERM) WORKUNIT(&WORKUNIT)  +        24360000
           WSECSPAC(&WSECSPAC) WSPACE(&WSPACE) XREF(&XREF)     +        24370000
           ASMHLIB(&QASMHL) ASMHLOAD(&QASMH) ASMLIB(&QASML)    +        24380000
           ASMLOAD(&QASM) COBLOAD(&QCOB) COB2LOAD(&QCOB2)      +        24390000
           FORTLOAD(&QFORT) PLILOAD(&QPLI)                     +        24400000
           CCSLIB(&QCSLIB) CCLOAD(&QCLOAD) CCMSGS(&QCMSGS)              24410000
      SET &DERROR = &LASTCC            /* IF DSNHC WORKED    @BA18169*/ 24420000
      IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* SAVE RETCODE */ 24430000
      /*-------------------------------------------------------------*/ 24440000
      /* DSNH740I: COMPILE PASS WALL MESSAGE                         */ 24450000
      /*-------------------------------------------------------------*/ 24460000
      IF &WALLF = YES THEN             /* IF PRINT NAME TO BE ADDED  */+24470000
        IF &HOST = C THEN              /* PRINT DATA SET             */+24480000
          SET &WALL4 = &STR(.SYSCPRT.LIST &WALLB)   /* PRINT DATA SET*/ 24490000
        ELSE SET &WALL4 = &STR(.LIST &WALLB)        /* PRINT DATA SET*/ 24500000
      WRITE &WALL1 &HOST &WALL2 &DERROR &WALL3.&WALL4                   24510000
      IF &ERROR GE &RCTERM THEN     /* IF OVER MAX RET CODE          */+24520000
        DO                          /* WRITE ERROR MSG, EXIT         */ 24530000
          /*---------------------------------------------------------*/ 24540000
          /* DSNH759I: COMPILE ERROR                                 */ 24550000
          /*---------------------------------------------------------*/ 24560000
          WRITE &M759 &HOST RC = &ERROR                                 24570000
          EXIT CODE(&ERROR)         /* EXIT FROM CLIST               */ 24580000
        END                         /* OF SEVERE ERROR HANDLING      */ 24590000
    END                             /* OF COMPILER INVOCATION        */ 24600000
  /*******************************************************************/ 24610000
  /*                                                                 */ 24620000
  /*                 INVOKE PRE-LINKEDIT                             */ 24630000
  /*   BUILD PRE-LINKEDIT PARMS, ALLOCATE REQUIRED DATA SETS, AND    */ 24640000
  /*   INVOKE 'C' PRE-LINKEDIT FUNCTION                              */ 24650000
  /*                                                                 */ 24660000
  /* PARMS:  POPTION KEYWORD VALUES                                  */ 24670000
  /* INVOKED ROUTINE: CCLINK KEYWORD                                 */ 24680000
  /*                                                                 */ 24690000
  /*******************************************************************/ 24700000
  SET &LKDSNAME = &OUTNAME..OBJ     /* INPUT DSNAME FOR LINKEDIT     */ 24710000
  IF &PRELINK = YES THEN            /* IF PRELINK REQUESTED          */+24720000
    DO                              /* INVOKE 'C' PRE-LINKEDIT       */ 24730000
      /*-------------------------------------------------------------*/ 24740000
      /* SETUP SPECIFIED KEYWORD VARIABLES                           */ 24750000
      /* FREE INTERMEDIATE DATA SETS                                 */ 24760000
      /*-------------------------------------------------------------*/ 24770000
      IF &CONTROL = NONE THEN       /* IF NO MESSAGES REQUESTED      */+24780000
        CONTROL NOMSG               /* SUPPRESS MESSAGES             */ 24790000
      ELSE                          /* CONTROL COMPLETE              */ 24800000
      DELETE (&OUTNAME..PLK)        /* DELETE OUTNAME..PLK           */ 24810000
      FREE DDNAME(SYSLIB)           /* FREE SYSLIB                   */ 24820000
      FREE DDNAME(SYSMSGS)          /* FREE SYSMSGS                  */ 24830000
      FREE DDNAME(SYSIN)            /* FREE SYSIN                    */ 24840000
      FREE DDNAME(SYSMOD)           /* FREE SYSMOD                   */ 24850000
      CONTROL MSG                   /* ALLOW MESSAGES AGAIN          */ 24860000
      SET &LKDSNAME = &OUTNAME..PLK /* INPUT DSNAME FOR LINKEDIT     */ 24870000
      /*-------------------------------------------------------------*/ 24880000
      /* ALLOCATE INTERMEDIATE DATA SETS                             */ 24890000
      /*-------------------------------------------------------------*/ 24900000
      ALLOCATE DDNAME(SYSMSGS) SHR REUSE +                              24910000
               DSNAME(&CCMSGS)      /* COMPILER'S MSG LIBRARY        */ 24920000
      ALLOCATE DDNAME(SYSIN) SHR REUSE +                                24930000
               DSNAME(&OUTNAME..OBJ) /* OUTPUT FROM COMPILE          */ 24940000
      ALLOCATE DD(SYSMOD) NEW &WORKU REUSE +                            24950000
               RECFM(F B) LRECL(80) BLKSIZE(3200) +                     24960000
               &SPACEUN SPACE(&WSPACE,&WSECSPAC) +                      24970000
               DSNAME(&LKDSNAME)    /* PRE-LINKEDIT OUTPUT           */ 24980000
      IF &CCOLIB NE &STR(NONE) THEN /* IF CCOLIB SPECIFIED           */+24990000
               ALLOCATE DDNAME(SYSLIB) BLKSIZE(32720) SHR REUSE +       25000001
               DSNAME(&CCOLIB)      /* INCLUDE LIB FOR PRE-LINKEDIT  */ 25010000
      ELSE                          /* CCOLIB COMPLETE               */ 25020000
      IF &PRINT NE NONE AND         /* IF ALLOCATION REQUESTED       */+25030000
         &PRINT NE LEAVE THEN       /* AND NOT SPECIFIED PRINT       */+25040000
        DO                          /* ALLOCATE DATA SET (OLD)       */ 25050000
          /*---------------------------------------------------------*/ 25060000
          /* ALLOCATE SYSPRINT, SYSOUT TO TERMINAL                   */ 25070000
          /*---------------------------------------------------------*/ 25080000
          IF &PRINT = TERM THEN     /* IF TERMINAL REQUESTED         */+25090000
            DO                      /* ALLOCATE TO TERMINAL          */ 25100000
              ALLOCATE DDNAME(SYSPRINT) DA(*) /* DO TERM ALLOC       */ 25110000
              ALLOCATE DDNAME(SYSOUT) DA(*) /* DO TERM ALLOC         */ 25120000
            END                     /* ALLOCATION COMPLETE           */ 25130000
          ELSE                      /* ALLOCATE A DATA SET           */+25140000
            DO                      /* ALLOCATE TO SYSPRINT          */ 25150000
              /*-----------------------------------------------------*/ 25160000
              /* ALLOCATE SYSPRINT TO DATA SET                       */ 25170000
              /*-----------------------------------------------------*/ 25180000
              IF &CONTROL = NONE THEN /* IF NO MESSAGES REQUESTED    */+25190000
                CONTROL NOMSG       /* SUPPRESS MESSAGES             */ 25200000
              ELSE                  /* CONTROL COMPLETE              */ 25210000
              DELETE &PRINT..PRELLIST /* DELETE OUTPUT DATA SET      */ 25220000
              FREE DDNAME(SYSPRINT) /* FREE SYSPRINT                 */ 25230000
              FREE ATTR(DSNHFBA)    /* FREE ATTRIBUTE                */ 25240000
              CONTROL MSG           /* ALLOW MESSAGES AGAIN          */ 25250000
              /*-----------------------------------------------------*/ 25260000
              /* DSNHFBA: DEFINE DCB ATTRIBUTES                      */ 25270000
              /*-----------------------------------------------------*/ 25280000
              ATTR DSNHFBA RECFM(F B A) LRECL(121) BLKSIZE(3630)        25290000
              ALLOCATE DDNAME(SYSPRINT) DSNAME(&PRINT..PRELLIST) +      25300000
              NEW SPACE(&PSPACE &PSECSPAC) &SPACEUN +                   25310000
              USING(DSNHFBA) &WORKU                                     25320000
              FREE ATTR(DSNHFBA)    /* FREE ATTRIBUTE                */ 25330000
              /*-----------------------------------------------------*/ 25340000
              /* ALLOCATE SYSOUT TO DATA SET                         */ 25350000
              /*-----------------------------------------------------*/ 25360000
              IF &CONTROL = NONE THEN /* IF NO MESSAGES REQUESTED    */+25370000
                CONTROL NOMSG       /* SUPPRESS MESSAGES             */ 25380000
              ELSE                  /* CONTROL COMPLETE              */ 25390000
              DELETE &PRINT..SYSOUT.PRELLIST /* DELETE DATA SET      */ 25400000
              FREE DDNAME(SYSOUT)   /* FREE SYSOUT                   */ 25410000
              FREE ATTR(DSNHFB)     /* FREE ATTRIBUTE                */ 25420000
              CONTROL MSG           /* ALLOW MESSAGES AGAIN          */ 25430000
              /*-----------------------------------------------------*/ 25440000
              /* DSNHFBA: DEFINE DCB ATTRIBUTES                      */ 25450000
              /*-----------------------------------------------------*/ 25460000
              ATTR DSNHFB RECFM(F B) LRECL(80) BLKSIZE(3600)            25470000
              ALLOCATE DDNAME(SYSOUT) +                                 25480000
              DSNAME(&PRINT..SYSOUT.PRELLIST) +                         25490000
              NEW SPACE(&PSPACE &PSECSPAC) &SPACEUN +                   25500000
              USING(DSNHFB) &WORKU                                      25510000
              FREE ATTR(DSNHFB)     /* FREE ATTRIBUTE                */ 25520000
            END                     /* ALLOCATION COMPLETE           */ 25530000
        END                         /* SYSPRINT IS ALLOCATED         */ 25540000
      ELSE                          /* BYPASS ALLOCATION             */+25550000
        IF &PRINT EQ NONE THEN      /* IF NO SYSPRINT                */+25560000
          DO                        /* ALLOCATION TO DUMMY           */ 25570000
            /*-------------------------------------------------------*/ 25580000
            /* ALLOCATE SYSPRINT, SYSOUT TO DUMMY                    */ 25590000
            /*-------------------------------------------------------*/ 25600000
            ALLOCATE DDNAME(SYSPRINT) DUMMY /* ALLOCATE DUMMY        */ 25610000
            ALLOCATE DDNAME(SYSOUT) DUMMY /* ALLOCATE DUMMY          */ 25620000
          END                       /* ALLOCATION COMPLETE           */ 25630000
        ELSE                        /* SYSOUT COMPLETE               */ 25640000
      /*-------------------------------------------------------------*/ 25650000
      /* INVOKE 'C' COMPILER PRE-LINKEDIT ROUTINE                    */ 25660000
      /*-------------------------------------------------------------*/ 25670000
      CALL &CCLINK '&POPTION'       /* CALL 'C' PRE-LINKEDIT         */ 25680000
      SET &DERROR = &LASTCC         /* SAVE PRELINK RETURN CODE      */ 25690000
      IF &ERROR LT &DERROR THEN     /* DETERMINE HIGHEST ERROR       */+25700000
         SET &ERROR = &DERROR       /* SAVE HIGHEST RETURN CODE      */ 25710000
      ELSE                          /* ERROR COMPLETE                */ 25720000
      /*-------------------------------------------------------------*/ 25730000
      /* FREE ALLOCATED DATA SETS, AND SYSPRINT                      */ 25740000
      /*-------------------------------------------------------------*/ 25750000
      IF &CONTROL = NONE THEN       /* IF NO MESSAGES REQUESTED      */+25760000
        CONTROL NOMSG               /* SUPPRESS MESSAGES             */ 25770000
      ELSE                          /* CONTROL COMPLETE              */ 25780000
      FREE DDNAME(SYSLIB)           /* FREE SYSLIB                   */ 25790000
      FREE DDNAME(SYSMSGS)          /* FREE SYSMSGS                  */ 25800000
      FREE DDNAME(SYSIN)            /* FREE SYSIN                    */ 25810000
      FREE DDNAME(SYSMOD)           /* FREE SYSMOD                   */ 25820000
      IF &PRINT NE LEAVE THEN       /* IF PRINT ALLOCATED            */+25830000
        DO                          /* FREE SYSPRINT, SYSOUT         */ 25840000
          /*---------------------------------------------------------*/ 25850000
          /* FREE SYSPRINT AND SYSOUT                                */ 25860000
          /*---------------------------------------------------------*/ 25870000
          FREE DDNAME(SYSPRINT)     /* FREE SYSPRINT                 */ 25880000
          FREE DDNAME(SYSOUT)       /* FREE SYSOUT                   */ 25890000
        END                         /* FREE COMPLETE                 */ 25900000
      ELSE                          /* PRINT COMPLETE                */ 25910000
      CONTROL MSG                   /* ALLOW MESSAGES AGAIN          */ 25920000
      /*-------------------------------------------------------------*/ 25930000
      /* DSNH740I: PRE-LINKEDIT PASS WALL MESSAGE                    */ 25940000
      /*-------------------------------------------------------------*/ 25950000
      IF &WALLF = YES THEN          /* MESSAGE DSNH740I              */+25960000
        SET &WALL4 = &STR(.SYSOUT.PRELLIST &WALLB)                      25970000
      WRITE &WALL1 PRELINK &WALL2 &DERROR &WALL3.&WALL4                 25980000
      /*-------------------------------------------------------------*/ 25990000
      /* CHECK PRE-LINKEDIT RETURN CODE                              */ 26000000
      /* IF SEVERE ERROR, THEN EXIT DSNH CLIST                       */ 26010000
      /*-------------------------------------------------------------*/ 26020000
      IF &ERROR GE &RCTERM THEN     /* GREATER THAN MAXIMUM ?        */+26030000
        DO                          /* WRITE ERROR MSG, EXIT         */ 26040000
          /*---------------------------------------------------------*/ 26050000
          /* DSNH759I: PRELINK ERROR                                 */ 26060000
          /*---------------------------------------------------------*/ 26070000
          WRITE &M759 PRELINK RC = &ERROR                               26080000
          EXIT CODE(&ERROR)         /* EXIT DSNH CLIST               */ 26090000
        END                         /* SEVERE ERROR ENCOUNTERED      */ 26100000
      ELSE                          /* RETURN CODE COMPLETE          */ 26110000
    END                             /* PRE-LINKEDIT COMPLETE         */ 26120000
  ELSE                              /* PRE-LINKEDIT COMPLETE         */ 26130000
  /*******************************************************************/ 26140000
  /*                                                                 */ 26150000
  /*                        LINK                                     */ 26160000
  /*                 INVOKE LINKAGE EDITOR                           */ 26170000
  /*                                                                 */ 26180000
  /*   INVOCATION OF THE LINKEDIT STEP                               */ 26190000
  /*                                                                 */ 26200000
  /* INVOKED ROUTINE: TSO LINK COMMAND                               */ 26210000
  /*                                                                 */ 26220000
  /* FOLLOWING BASED UPON HOST LANGUAGE AND EXECUTION ENVIRONMENT:   */ 26230000
  /*                                                                 */ 26240000
  /* DSNHINCL: MODULES INCLUDED IN LINKEDIT STEP FROM INCLIB         */ 26250000
  /* ENTRY:    ENTRY NAME FOR LINKAGE EDITOR FROM ENTRY KEYWORD      */ 26260000
  /*                                                                 */ 26270000
  /*******************************************************************/ 26280000
  IF &LINK    = YES THEN            /* IF LINK IS REQUESTED THEN     */+26290000
    DO                              /* INVOKE THE LINKAGE EDITOR     */ 26300000
      /*-------------------------------------------------------------*/ 26310000
      /* SETUP LIBRARY KEYWORD VARIABLES BASED ON HOST LANGUAGE      */ 26320000
      /*-------------------------------------------------------------*/ 26330000
      SET &ILIB = &STR(&XLIB)       /* NOTE THE LIBRARIES NEEDED     */ 26340000
      IF &HOST = C       THEN       /* IF THIS IS A C PROGRAM        */+26350000
         SET &ILIB = &STR(&ILIB &CCLLIB)              /* ADD LIB     */ 26360000
      IF &HOST = C       THEN       /* IF THIS IS A C PROGRAM        */+26370000
         SET &ILIB = &STR(&ILIB &CCPLIB)              /* ADD LIB     */ 26380000
      IF &HOST = COBOL   THEN       /* IF THIS IS A COBOL PROGRAM    */+26390000
         SET &ILIB = &STR(&ILIB &COBLIB)              /* ADD LIB     */ 26400000
      IF &HOST = COB2 AND           /* IS THIS A COB2 PROG   @BA26814*/+26410000
         &ATTACH = CICS  THEN       /* AND ATTACH IS CICS    @BA26814*/+26420000
         SET &ILIB = &STR(&ILIB &COB2CICS)    /* ADD LIB     @BA26814*/ 26430000
      IF &HOST = COB2    THEN       /* IF THIS IS A COB2 PROGRAM     */+26440000
         SET &ILIB = &STR(&ILIB &COB2LIB)             /* ADD LIB     */ 26450000
      IF &SUFF = PLI     THEN       /* IF THIS IS A PLI PROG         */+26460000
         SET &ILIB = &STR(&ILIB &PLILIB)              /* ADD LIB     */ 26470000
      IF &SUFF = PLI  AND           /* IF THIS IS A PLI PROG         */+26480000
         &ATTACH = CICS  THEN       /* AND THIS IS CICS ATTACH       */+26490000
         SET &ILIB = &STR(&ILIB '&CICSPRE..PL1LIB')   /* LIB         */ 26500000
      IF &SUFF = COBOL AND          /* IF THIS IS COBOL PROG @BA08652*/+26510000
         &ATTACH = CICS  THEN       /* AND THIS IS CICS ATTACH       */+26520000
         SET &ILIB = &STR(&ILIB '&CICSPRE..SDFHCOB')  /* LIB       */   26530003
      IF &SUFF = FORTRAN THEN       /* IF THIS IS A FORTRAN PROG     */+26540000
         SET &ILIB = &STR(&ILIB &FORTLIB)             /* ADD LIB     */ 26550000
      IF &ATTACH  = IMS THEN        /* IF THIS IS IMS PROGRAM        */+26560000
         SET &ILIB = &STR('&IMSPRE..RESLIB' &ILIB)    /* ADD LIB     */ 26570000
      IF &ATTACH  = CICS THEN       /* IF THIS IS CICS PROGRAM       */+26580000
         SET &ILIB = &STR(&ILIB '&CICSPRE..SDFHLOAD') /* LIB         */ 26590002
                                    /* BUILD A DATA SET WITH INCLUDES*/ 26600000
      IF &CONTROL = NONE THEN       /* IF NO MESSAGES                */+26610000
        CONTROL NOMSG               /* NO MESSAGES - DELETE,FREE     */ 26620000
      DELETE &OUTNAME..DATA         /* DELETE THE LKED INPUT         */ 26630000
      FREE DDNAME(DSNHINCL, INCLIB)                            +        26640000
        ATTR(DSNHF80)               /* FREE DDNAMES, ATTRIBUTES      */ 26650000
      CONTROL MSG                   /* RESUME MESSAGES               */ 26660000
      /*-------------------------------------------------------------*/ 26670000
      /* DSNHF80: DEFINE DCB ATTRIBUTES                              */ 26680000
      /*-------------------------------------------------------------*/ 26690000
      ATTRIB DSNHF80 LRECL(80) RECFM(F B)                              +26700000
         BLKSIZE(80)                /* SET THE DCB ATTRIBUTES        */ 26710000
      /*-------------------------------------------------------------*/ 26720000
      /* DSNHINCL: ALLOCATE AND OPEN DATA SET                        */ 26730000
      /*-------------------------------------------------------------*/ 26740000
      ALLOCATE DDNAME(DSNHINCL) USING(DSNHF80) NEW TRACK               +26750000
        &WORKU SPACE(1 1) DSNAME(&OUTNAME..DATA)   /* NEW DS         */ 26760000
      OPENFILE DSNHINCL OUTPUT      /* OPEN THE FILE                 */ 26770000
      /*-------------------------------------------------------------*/ 26780000
      /* DETERMINE LINKEDIT MODULE INCLUDES BASED ON HOST LANGUAGE,  */ 26790000
      /* AND EXECUTION ENVIRONMENT                                   */ 26800000
      /*-------------------------------------------------------------*/ 26810000
      IF &ATTACH = BATCH THEN       /* SET UP INCLUDES FOR BATCH     */+26820000
         DO                         /* BATCH ATTACH INCLUDES         */ 26830000
            /*-------------------------------------------------------*/ 26840000
            /* EXECUTION IN BATCH                                    */ 26850000
            /*-------------------------------------------------------*/ 26860000
            SET &DSNHINCL = &STR(  INCLUDE DSNHOBJ)                     26870000
            PUTFILE DSNHINCL        /* OUTPUT THE INCLUDE            */ 26880000
            IF &HOST = FORTRAN THEN /* BUILD INCLUDE                 */+26890000
               DO                   /* BUILD FORTRAN INCLUDE         */ 26900000
                 /*--------------------------------------------------*/ 26910000
                 /* CREATE INCLUDES FOR FORTRAN LANGUAGE             */ 26920000
                 /*--------------------------------------------------*/ 26930000
                 SET &DSNHINCL = &STR(  INCLUDE INCLIB(DSNHFT))         26940000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 26950000
               END                  /* OF IF FORTRAN                 */ 26960000
                                    /* USE AUTOCALL FOR OTHER LANGS  */ 26970000
         END                        /* BATCH ATTACH INCLUDES         */ 26980000
      IF &ATTACH = IMS   THEN       /* SET UP INCLUDES FOR IMS       */+26990000
         DO                         /* IMS   ATTACH INCLUDES         */ 27000000
            /*-------------------------------------------------------*/ 27010000
            /* EXECUTION IN IMS/ATTACH                               */ 27020000
            /*-------------------------------------------------------*/ 27030000
            SET &DSNHINCL = &STR(  INCLUDE DSNHOBJ)                     27040000
            PUTFILE DSNHINCL        /* OUTPUT THE INCLUDE            */ 27050000
         END                        /* IMS ATTACH INCLUDES           */ 27060000
      IF &ATTACH = CICS  THEN       /* SET UP INCLUDES FOR CICS      */+27070000
         DO                         /* CICS  ATTACH INCLUDES         */ 27080000
            /*-------------------------------------------------------*/ 27090000
            /* EXECUTION IN CICS/ATTACH                              */ 27100000
            /*-------------------------------------------------------*/ 27110000
            IF &HOST = ASM OR       /* IF THIS IS ASM OR ASMH        */+27120000
               &HOST = ASMH  THEN   /* ADD INCLUDE STATEMENT         */+27130000
               DO                   /* BUILD ASM/ASMH INCLUDE        */ 27140000
                 /*--------------------------------------------------*/ 27150000
                 /* CREATE INCLUDES FOR ASM/ASMH LANGUAGES           */ 27160000
                 /*--------------------------------------------------*/ 27170000
                 SET &DSNHINCL = &STR(  INCLUDE INCLIB(DFHEAI))         27180000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 27190000
               END                  /* OF IF ASM/ASMH                */ 27200000
            IF &HOST = COB2 OR      /* IF THIS IS COBOL OR COB2      */+27210000
               &HOST = COBOL THEN   /* ADD INCLUDE STATEMENT         */+27220000
               DO                   /* BUILD COBOL   INCLUDE         */ 27230000
                 /*--------------------------------------------------*/ 27240000
                 /* CREATE INCLUDES FOR COB2/COBOL LANGUAGES         */ 27250000
                 /*--------------------------------------------------*/ 27260000
                 SET &DSNHINCL = &STR(  INCLUDE INCLIB(DFHECI))         27270000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 27280000
               END                  /* OF IF COBOL                   */ 27290000
            IF &HOST = PLI THEN     /* IF THIS IS PLI                */+27300000
               DO                   /* BUILD PLI INCLUDE             */ 27310000
                 /*--------------------------------------------------*/ 27320000
                 /* CREATE INCLUDES FOR PLI LANGUAGES                */ 27330000
                 /*--------------------------------------------------*/ 27340000
                 SET &DSNHINCL = &STR(  INCLUDE INCLIB(DFHPL1OI))       27350000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 27360000
                 SET &DSNHINCL = &STR(  INCLUDE INCLIB(DFHEPI))         27370000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 27380000
                 SET &DSNHINCL = &STR(  REPLACE PLISTART)               27390000
                 PUTFILE DSNHINCL   /* OUTPUT THE INCLUDE            */ 27400000
               END                  /* OF IF PLI                     */ 27410000
            /*-------------------------------------------------------*/ 27420000
            /* DSNHINCL: PUTFILE FOR SELECTED MODULES TO BE INCLUDED */ 27430000
            /*-------------------------------------------------------*/ 27440000
            SET &DSNHINCL = &STR(  INCLUDE DSNHOBJ)                     27450000
            PUTFILE DSNHINCL        /* OUTPUT THE INCLUDE            */ 27460000
            SET &DSNHINCL = &STR(  INCLUDE INCLIB(DSNCLI))              27470000
            PUTFILE DSNHINCL        /* OUTPUT THE INCLUDE            */ 27480000
         END                        /* CICS  ATTACH INCLUDES         */ 27490000
      /*-------------------------------------------------------------*/ 27500000
      /* DETERMINE ENTRY NAME BASED ON HOST LANGUAGE, AND EXECUTION  */ 27510000
      /* ENVIRONMENT                                                 */ 27520000
      /*-------------------------------------------------------------*/ 27530000
      IF &ENTRY = DEFAULT THEN      /* IF ENTRY STMT IS NEEDED       */+27540000
         DO                         /* SET UP THE ENTRY STMT         */ 27550000
            /*-------------------------------------------------------*/ 27560000
            /* SETUP ENTRY NAME BASED ON DEFAULT                     */ 27570000
            /*-------------------------------------------------------*/ 27580000
            SET &ENT = &STR(DEFAULT)      /* ENTRY NAME              */ 27590000
            IF &ATTACH ^= CICS AND        /* IF THIS NOT CICS BUT    */+27600000
               &HOST    = PLI  THEN       /* IS PLI          @BA04716*/+27610000
               SET &ENT = &STR(PLISTART)  /* ENTRY NAME              */ 27620000
            IF &ATTACH = IMS THEN         /* IF THIS IS IMS, SET UP  */+27630000
               SET &ENT = &STR(DLIT&SUFF) /* ENT NAME         PL00008*/ 27640000
            IF &ATTACH = IMS AND          /* THIS IS IMS AND  PL00008*/+27650000
               &HOST = PLI THEN           /* THIS IS PLI THEN PL00008*/+27660000
               SET &ENT = &STR(PLICALLA)  /* ADD ENT          PL00008*/ 27670000
            IF &ATTACH = IMS AND          /* IF THIS IS IMS, AND     */+27680000
               &SUFF = COBOL THEN         /* THE HOST IS COB, SET UP */+27690000
               SET &ENT = &STR(DLITCBL)   /* ENTRY NAME       PL00008*/ 27700000
            IF &ENT NE DEFAULT THEN       /* IF ENTRY STMT NEED      */+27710000
               DO                         /* SET UP THE ENTRY STMT   */ 27720000
                  /*-------------------------------------------------*/ 27730000
                  /* DSNHINCL: PUTFILE FOR ENTRY NAME                */ 27740000
                  /*-------------------------------------------------*/ 27750000
                  SET &DSNHINCL = &STR(  ENTRY &ENT)                    27760000
                  PUTFILE DSNHINCL        /* OUTPUT THE ENTRY STMT   */ 27770000
               END               /* SET UP THE ENTRY STMT            */ 27780000
         END                     /* SET UP THE ENTRY STMT            */ 27790000
      IF &ENTRY NE DEFAULT AND   /* IF ENTRY STMT IS NEEDED          */+27800000
         &ENTRY NE NONE THEN     /* IF ENTRY STMT IS NEEDED          */+27810000
         DO                      /* SET UP THE ENTRY STMT            */ 27820000
            /*-------------------------------------------------------*/ 27830000
            /* DSNHINCL: PUTFILE FOR ENTRY NAME SPECIFIED            */ 27840000
            /*-------------------------------------------------------*/ 27850000
            SET &DSNHINCL = &STR(  ENTRY &ENTRY)                        27860000
            PUTFILE DSNHINCL     /* OUTPUT THE ENTRY STMT            */ 27870000
         END                     /* SET UP THE ENTRY STMT            */ 27880000
      /*-------------------------------------------------------------*/ 27890000
      /* DSNHINCL: CLOSE FILE                                        */ 27900000
      /*-------------------------------------------------------------*/ 27910000
      CLOSFILE DSNHINCL          /* CLOSE THE FILE                   */ 27920000
      /*-------------------------------------------------------------*/ 27930000
      /* ALLOCATE INCLIB, DSNHOBJ, DATA SET NAME                     */ 27940000
      /*-------------------------------------------------------------*/ 27950000
      ALLOCATE DDNAME(INCLIB) DSNAME(&ILIB) SHR REUSE                   27960000
      ALLOCATE DDNAME(DSNHOBJ) SHR REUSE DSNAME(&LKDSNAME)              27970000
      IF &PRINT = TERM OR        /* SEE IF PRINT TO TERMINAL         */+27980000
         &PRINT = LEAVE THEN     /* OR PRINT TO CURRENT              */+27990000
        SET &LOPTION = &NRSTR(&LOPTION) &STR(PRINT(*))                  28000000
      ELSE                       /* PRINT ISN'T TERM                 */+28010000
        IF &PRINT NE NONE AND &PRINT NE LEAVE THEN   /* IF NEED ALLOC*/+28020000
          DO                        /* DELETE, THEN ALLOC    @BA18169*/ 28030000
            /*-------------------------------------------------------*/ 28040000
            /* ALLOCATE SYSPRINT TO DATA SET                         */ 28050000
            /*-------------------------------------------------------*/ 28060000
            IF &CONTROL = NONE THEN /* IF NO MESSAGES        @BA18169*/+28070000
              CONTROL NOMSG         /* AVOID DELETE MESSAGES @BA18169*/ 28080000
            DELETE &PRINT..LINKLIST /* DEL OUTPUT DATA SET   @BA18169*/ 28090000
            FREE DDNAME(SYSPRINT)   /* FREE DDNAME           @BA18169*/ 28100000
            CONTROL MSG             /* ALLOW MESSAGES AGAIN  @BA18169*/ 28110000
            ALLOCATE DDNAME(SYSPRINT) DSNAME(&PRINT..LINKLIST) NEW     +28120000
              SPACE(&PSPACE &PSECSPAC) &SPACEUN &WORKU                  28130000
            SET &LOPTION = &STR(&NRSTR(&LOPTION) PRINT(&PRINT))         28140000
          END                    /* DELETE, THEN ALLOC DATA  @BA18169*/ 28150000
      IF &TERM  = NONE THEN      /* IF TERM IS NONE, NO MSGS         */+28160000
        SET &LOPTION = &STR(&NRSTR(&LOPTION) NOTERM)                    28170000
      IF &PRINT NE NONE THEN     /* IF PRINT IS WANTED, GET IT       */+28180000
        SET &LOPTION = &STR(&NRSTR(&LOPTION) LIST MAP)                  28190000
      IF &XREF  NE NO   THEN     /* IF XREF IS WANTED, GET IT        */+28200000
        SET &LOPTION = &STR(&NRSTR(&LOPTION) XREF)                      28210000
      SET &LONL =                                                       28220000
      /*-------------------------------------------------------------*/ 28230000
      /* SETUP LIBRARY KEYWORD VARIABLES                             */ 28240000
      /*-------------------------------------------------------------*/ 28250000
      IF &LLIB NE NONE THEN SET &LONL = &STR(&LLIB)                     28260000
      IF &L2LIB NE NONE THEN SET &LONL = &STR(&LONL &L2LIB)             28270000
      IF &L3LIB NE NONE THEN SET &LONL = &STR(&LONL &L3LIB)             28280000
      IF &L4LIB NE NONE THEN SET &LONL = &STR(&LONL &L4LIB)             28290000
      /***************************************************************/ 28300000
      /* INVOKE TSO LINK COMMAND                                     */ 28310000
      /***************************************************************/ 28320000
      LINK (&OUTNAME..DATA) LOAD(&LOADIT) &LOPTION               +      28330000
           LIB(&ILIB &LONL)      /* LINKEDIT THE MODULE              */ 28340000
      SET &DERROR = &LASTCC      /* IF LINK WORKED           @BA18169*/ 28350000
      IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR /* SAVE RETCODE */ 28360000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES WANTED            */+28370000
        CONTROL NOMSG            /* NO MESSAGES FOR FREE CMD         */ 28380000
      /*-------------------------------------------------------------*/ 28390000
      /* FREE INTERMEDIATE DATA SETS                                 */ 28400000
      /*-------------------------------------------------------------*/ 28410000
      FREE DDNAME(DSNHINCL, INCLIB) DSNAME(&LKDSNAME &ILIB             +28420000
      &LONL &LOAD) ATTR(DSNHF80) /* FREE DDNAMES, ATTRIBUTES         */ 28430000
      IF &PRINT NE TERM AND      /* SEE IF PRINT TO TERMINAL @BA18169*/+28440000
         &PRINT NE LEAVE AND     /* OR PRINT TO CURRENT      @BA18169*/+28450000
         &PRINT NE NONE THEN     /* OR PRINT TO NONE         @BA25449*/+28460000
        FREE DDNAME(SYSPRINT)    /* FREE SYSPRINT            @BA18169*/ 28470000
      CONTROL MSG                /* RESUME MESSAGES                  */ 28480000
      /*-------------------------------------------------------------*/ 28490000
      /* DSNH740I: LINK PASS WALL MESSAGE                            */ 28500000
      /*-------------------------------------------------------------*/ 28510000
      IF &WALLF = YES THEN       /* IF PRINT NAME TO BE ADDED, ADD   */+28520000
        SET &WALL4 = &STR(.LINKLIST &WALLB)  /* PRINT DATA SET NAME  */ 28530000
      WRITE &WALL1 LINK &WALL2 &DERROR &WALL3.&WALL4                    28540000
      IF &ERROR GE &RCTERM THEN  /* IF MAX RETCODE EXCEEDED          */+28550000
        DO                       /* WRITE ERROR MESSAGE, EXIT        */ 28560000
          /*---------------------------------------------------------*/ 28570000
          /* DSNH759I: LINK ERROR                                    */ 28580000
          /*---------------------------------------------------------*/ 28590000
          WRITE &M759 LINK RC = &ERROR                                  28600000
          EXIT CODE(&ERROR)      /* EXIT FROM THIS CLIST             */ 28610000
        END                      /* OF SEVERE ERROR HANDLING         */ 28620000
    END                          /* OF LINKAGE EDITOR INVOCATION     */ 28630000
  /*******************************************************************/ 28640000
  /*                                                                 */ 28650000
  /*                        RUN                                      */ 28660000
  /*                 INVOKE COMPILED PROGRAM                         */ 28670000
  /*                                                                 */ 28680000
  /*   INVOCATION OF THE COMPILED PROGRAM IN THE TSO ENVIRONMENT     */ 28690000
  /*   BASED UPON THE SUCCESSFUL COMPLETION OF THE PRIOR JOB STEPS.  */ 28700000
  /*   EXECUTION ENVIRONMENT BASED ON RUN KEYWORD.                   */ 28710000
  /*                                                                 */ 28720000
  /* INVOKED ROUTINE: COMPILED PROGRAM                               */ 28730000
  /*                                                                 */ 28740000
  /* INPUT PARAMETERS: PARMS KEYWORD - PARAMETERS TO BE PASSED TO    */ 28750000
  /*                   INVOKED PROGRAM                               */ 28760000
  /* INPUT:  RUNIN KEYWORD - STANDARD DDNAME INPUT                   */ 28770000
  /* OUTPUT: RUNOUT KEYWORD - STANDARD DDNAME OUTPUT                 */ 28780000
  /*              DSN - COMMAND PROCESSOR:                           */ 28790000
  /* EXECUTION: DSN - COMMAND PROCESSOR:                             */ 28800000
  /*                  SYSTEM KEYWORD (SUBSYSTEM NAME)                */ 28810000
  /*                  CONTROL KEYWORD (CONTROL-OPTION)               */ 28820000
  /*            RUN - PROGRAM NAME                                   */ 28830000
  /*                  PLAN NAME                                      */ 28840000
  /*                  LIBRARY NAME                                   */ 28850000
  /*                  PARAMETERS                                     */ 28860000
  /*                                                                 */ 28870000
  /*******************************************************************/ 28880000
  IF &RUN = YES THEN             /* IF RUN WAS REQUESTED             */+28890000
    DO                           /* INVOKE DSN AND RUN PROG          */ 28900000
      /*-------------------------------------------------------------*/ 28910000
      /* DEFINE INPUT/OUTPUT DATA SETS                               */ 28920000
      /*-------------------------------------------------------------*/ 28930000
      SET &RUNOUTDD = SYSPRINT   /* SET STANDARD DDNAME PRINT        */ 28940000
      SET &RUNINDD  = SYSIN      /* SET STANDARD DDNAME INPUT        */ 28950000
      IF &HOST EQ FORTRAN THEN   /* IF THE LANGUAGE IS FORTRAN       */+28960000
        DO                       /* SET FORTRAN DDNAMES              */ 28970000
          /*---------------------------------------------------------*/ 28980000
          /* DEFINE DD NAMES FOR FORTRAN                             */ 28990000
          /*---------------------------------------------------------*/ 29000000
          SET &RUNOUTDD = FT06F001  /* STD FORTRAN PRINT             */ 29010000
          SET &RUNINDD  = FT05F001  /* STD FORTRAN INPUT             */ 29020000
        END                      /* SET FORTRAN DDNAMES              */ 29030000
      IF &RUNIN EQ NONE THEN     /* IF NO RUN INPUT                  */+29040000
        ALLOCATE DDNAME(&RUNINDD) DUMMY REUSE      /* ALLOC DUMMY    */ 29050000
      IF &RUNIN NE NONE THEN     /* IF ALLOCATION REQUESTED          */+29060000
        DO                       /* ALLOCATE A DATA SET (OLD)        */ 29070000
          /*---------------------------------------------------------*/ 29080000
          /* DEFINE INPUT TO TERMINAL OR DATA SET                    */ 29090000
          /*---------------------------------------------------------*/ 29100000
          IF &RUNIN = TERM THEN  /* IF TERMINAL OUTPUT REQUEST       */+29110000
            ALLOCATE DDNAME(&RUNINDD) DA(*) REUSE  /* ALLOC TERMINAL */ 29120000
          ELSE                   /* ALLOCATE A DATA SET              */+29130000
            ALLOCATE DDNAME(&RUNINDD) DSNAME(&RUNIN) SHR REUSE          29140000
        END                      /* SYSTERM IS ALLOCATED             */ 29150000
      IF &RUNOUT EQ NONE THEN    /* IF NO RUN OUTPUT                 */+29160000
        DO                       /* ALLOCATE TO DUMMY                */ 29170000
          /*---------------------------------------------------------*/ 29180000
          /* DEFINE OUTPUT TO DUMMY                                  */ 29190000
          /*---------------------------------------------------------*/ 29200000
          ALLOCATE DDNAME(&RUNOUTDD) DUMMY REUSE /* ALLOC TO DUMMY   */ 29210000
          IF &HOST EQ C THEN     /* IF THE LANGUAGE IS 'C'           */+29220000
            ALLOCATE DDNAME(CEEDUMP) DUMMY REUSE /* ALLOC TO DUMMY   */ 29230000
        END                      /* ALLOCATION COMPLETE              */ 29240000
      IF &RUNOUT NE NONE AND     /* IF ALLOCATION REQUESTED          */+29250000
         &RUNOUT NE LEAVE THEN   /* NOT JUST LEFT FROM BEFORE        */+29260000
        DO                       /* ALLOCATE DATA SET (OLD)          */ 29270000
          /*---------------------------------------------------------*/ 29280000
          /* DEFINE OUTPUT TO TERMINAL OR DATA SET                   */ 29290000
          /*---------------------------------------------------------*/ 29300000
          IF &RUNOUT = TERM THEN /* IF TERM OUTPUT REQUEST TERMINAL  */+29310000
            DO                   /* ALLOCATE TO TERMINAL             */ 29320000
              /*-----------------------------------------------------*/ 29330000
              /* DEFINE OUTPUT TO TERMINAL                           */ 29340000
              /*-----------------------------------------------------*/ 29350000
              ALLOCATE DDNAME(&RUNOUTDD) DA(*) REUSE                    29360000
              IF &HOST EQ C THEN /* IF THE LANGUAGE IS 'C'           */+29370000
                ALLOCATE DDNAME(CEEDUMP) DA(*) REUSE                    29380000
            END                  /* ALLOCATION COMPLETE              */ 29390000
          ELSE                   /* ALLOCATE A DATA SET              */+29400000
            DO                   /* DELETE, THEN ALLOC DATA          */ 29410000
              /*-----------------------------------------------------*/ 29420000
              /* ALLOCATE OUTPUT DATA SET                            */ 29430000
              /*-----------------------------------------------------*/ 29440000
              IF &CONTROL = NONE THEN  /* IF NO MESSAGES             */+29450000
                CONTROL NOMSG    /* AVOID DELETE MESSAGES            */ 29460000
              DELETE &RUNOUT     /* DELETE OUTPUT DATA SET           */ 29470000
              FREE DDNAME(&RUNOUTDD) ATTR(DSNHF133) /* FREE DD       */ 29480000
              CONTROL MSG        /* ALLOW MESSAGES AGAIN             */ 29490000
              /*-----------------------------------------------------*/ 29500000
              /* DSNHF133: DEFINE DCB ATTRIBUTES                     */ 29510000
              /*-----------------------------------------------------*/ 29520000
              ATTRIB DSNHF133 LRECL(133) RECFM(F B A) BLKSIZE(3990)     29530000
              ALLOCATE DDNAME(&RUNOUTDD) DSNAME(&RUNOUT) NEW           +29540000
                SPACE(&PSPACE &PSECSPAC) &SPACEUN USING(DSNHF133)      +29550000
                &WORKU                           /* @BA04731*/          29560000
              IF &HOST EQ C THEN /* IF THE LANGUAGE IS 'C'           */+29570000
                DO               /* ALLOCATE CEEDUMP TO DATA SET     */ 29580000
                  /*-------------------------------------------------*/ 29590000
                  /* ALLOCATE CEEDUMP TO DATA SET                    */ 29600000
                  /*-------------------------------------------------*/ 29610000
                  IF &CONTROL = NONE THEN /* IF NO MSGS WANTED       */+29620000
                    CONTROL NOMSG  /* SUPPRESS MESSAGES              */ 29630000
                  DELETE &PRINT..CEEDUMP.RUN /* DELETE DATA SET      */ 29640000
                  FREE DDNAME(CEEDUMP) /* BE SURE DDNAME FREE        */ 29650000
                  FREE ATTR(DSNHFBA)   /* FREE ATTRIBUTE             */ 29660000
                  CONTROL MSG    /* ALLOW MESSAGES                   */ 29670000
                  /*-------------------------------------------------*/ 29680000
                  /* DSNHFBA: DEFINE DCB ATTRIBUTES                  */ 29690000
                  /*-------------------------------------------------*/ 29700000
                  ATTR DSNHFBA RECFM(F B A) LRECL(121) BLKSIZE(3630)    29710000
                  ALLOCATE DDNAME(CEEDUMP) +                            29720000
                    DSNAME(&PRINT..CEEDUMP.RUN) +                       29730000
                    NEW SPACE(&PSPACE &PSECSPAC) &SPACEUN &WORKU +      29740000
                    USING(DSNHFBA)                                      29750000
                  FREE ATTR(DSNHFBA)   /* FREE ATTRIBUTE             */ 29760000
                END              /* ALLOCATE COMPLETE                */ 29770000
            END                  /* DELETE, THEN ALLOC DATA          */ 29780000
        END                      /* SYSPRINT IS ALLOCATED            */ 29790000
      /*-------------------------------------------------------------*/ 29800000
      /* DETERMINE PARAMETERS TO BE PASSED TO PROGRAM                */ 29810000
      /*-------------------------------------------------------------*/ 29820000
      IF &STR(&PARMS) EQ NONE THEN  /* IF NO RUN PARMS THEN          */+29830000
         SET &PARMS =            /* BLANK THE SETTING                */ 29840000
      ELSE                       /* ADD KEYWORD                      */+29850000
        DO                       /* ADD KEYWORD, PULL APOSTS         */ 29860000
          /*---------------------------------------------------------*/ 29870000
          /* SETUP FOR USER SUPPLIED PARAMETERS                      */ 29880000
          /*---------------------------------------------------------*/ 29890000
          IF &SUBSTR(1,&PARMS) ^= &STR(') THEN        /* IF NO APOSTS*/+29900000
            SET &PARMS = &STR(')&NRSTR(&PARMS)&STR(') /* ADD THEM    */ 29910000
          SET &PARMS = &STR(PARMS(&NRSTR(&PARMS)))    /* ADD KEYWORD */ 29920000
        END                                                             29930000
      /***************************************************************/ 29940000
      /* INVOKE DSN COMMAND PROCESSOR                                */ 29950000
      /***************************************************************/ 29960000
      DSN SYSTEM(&SYSTEM) &DSNTRC   /* INVOKE DSN COMMAND            */ 29970000
      SET &DERROR = &LASTCC      /* GET RETURN CODE FROM DSN         */ 29980000
      IF &DERROR > &ERROR THEN   /* IF NEW ERROR IS LARGER           */+29990000
        SET &ERROR = &DERROR     /* NOTE THE MOST SEVERE ERROR       */ 30000000
      IF &DERROR = 0 THEN        /* IF DSN SUCCEEDED                 */+30010000
        DO                       /* INVOKE THE RUN SUBCOMMAND        */ 30020000
          /***********************************************************/ 30030000
          /* INVOKE PROGRAM UNDER RUN SUBCOMMAND                     */ 30040000
          /***********************************************************/ 30050000
          RUN PROGRAM(&LMEM) PLAN(&PLAN) LIBRARY(&LOAD) &STR(&PARMS)    30060000
          DATA                   /* AVOID USING DATA AS CLIST        */ 30070000
          END                    /* OF DSN COMMAND                   */ 30080000
          ENDDATA                /* OF DATA BLOCK                    */ 30090000
          SET &DERROR = &LASTCC  /* IF RUN WORKED            @BA18169*/ 30100000
          IF &ERROR LT &DERROR THEN SET &ERROR = &DERROR  /* RETCODE */ 30110000
        END                      /* INVOKE THE RUN SUBCOMMAND        */ 30120000
      IF &CONTROL = NONE THEN    /* IF NO MESSAGES WANTED            */+30130000
        CONTROL NOMSG            /* AVOID FREE   MESSAGES            */ 30140000
      FREE DDNAME(&RUNINDD) ATTR(DSNHF133) /* FREE UP NAMES          */ 30150000
      IF &RUNOUT NE LEAVE THEN   /* NOT JUST LEFT FROM BEFORE        */+30160000
        DO                       /* FREE OUTPUT DATA SETS            */ 30170000
          /*---------------------------------------------------------*/ 30180000
          /* FREE OUTPUT DATA SETS                                   */ 30190000
          /*---------------------------------------------------------*/ 30200000
          FREE DDNAME(&RUNOUTDD) /* THEN FREE THE FILE               */ 30210000
          IF &HOST EQ C THEN     /* IF THE LANGUAGE IS 'C'           */+30220000
            FREE DDNAME(CEEDUMP) /* THEN FREE PL1DUMP                */ 30230000
        END                      /* FREE COMPLETE                    */ 30240000
      CONTROL MSG                /* ALLOW MESSAGES AGAIN             */ 30250000
      SET &WALL3 = &STR(=============================)                  30260000
      SET &WALL4 = &STR(=============================)                  30270000
      IF &RUNOUT NE NONE AND &RUNOUT NE LEAVE +                         30280000
        AND &RUNOUT NE TERM THEN +                                      30290000
        DO                       /* SET UP A LISTING NAME            */ 30300000
          /*---------------------------------------------------------*/ 30310000
          /* SETUP WALL MESSAGE VARIABLES BASED ON OUTPUT            */ 30320000
          /*---------------------------------------------------------*/ 30330000
          SET &WALL3 = &STR(======= LISTING IN &RUNOUT)                 30340000
          SET &WALL4 = &STR(&WALLB) /* PRINT DATA SET                */ 30350000
        END                      /* SET UP A LISTING NAME            */ 30360000
      /*-------------------------------------------------------------*/ 30370000
      /* DSNH740I: RUN PASS WALL MESSAGE                             */ 30380000
      /*-------------------------------------------------------------*/ 30390000
      WRITE &WALL1 RUN &WALL2 &DERROR &WALL3.&WALL4                     30400000
      IF &ERROR GE &RCTERM THEN  /* IF MAX RET CODE EXCED            */+30410000
        DO                       /* ISSUE ERROR MESSAGE, EXIT        */ 30420000
          /*---------------------------------------------------------*/ 30430000
          /* DSNH759I: RUN ERROR                                     */ 30440000
          /*---------------------------------------------------------*/ 30450000
          WRITE &M759 RUN RC = &ERROR                                   30460000
          EXIT CODE(&ERROR)      /* EXIT FROM THIS CLIST             */ 30470000
        END                      /* OF SEVERE ERROR HANDLING         */ 30480000
     END                         /* END OF RUN               @BA18169*/ 30490000
  /*******************************************************************/ 30500000
  /*  RESTORE USERS ENVIRONMENT OF SYSPRINT, SYSTERM, SYSIN  @BA48566*/ 30510000
  /*******************************************************************/ 30520000
  IF &SAVEPRINT NE &STR() THEN   /*                          @BA48566*/+30530000
    ALLOCATE DDNAME(SYSPRINT) MOD DSNAME('&SAVEPRINT')                  30540000
  IF &SAVETERM NE &STR() THEN    /*                          @BA48566*/+30550000
    ALLOCATE DDNAME(SYSTERM) MOD DSNAME('&SAVETERM')                    30560000
  IF &SAVESYSIN NE &STR() THEN   /*                          @BA48566*/+30570000
    ALLOCATE DDNAME(SYSIN) MOD DSNAME('&SAVESYSIN')                     30580000
  EXIT CODE(&ERROR)              /* EXIT FROM THIS CLIST     @BA18169*/ 30590000
  END                            /* OF DSNH CLIST            @BA18169*/ 30600000
                                                                        30610000
                                                                        30620000
